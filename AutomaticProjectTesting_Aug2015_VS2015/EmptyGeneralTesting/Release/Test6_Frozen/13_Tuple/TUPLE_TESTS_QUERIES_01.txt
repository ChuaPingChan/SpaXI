1 - tuple, Follows, stmt and stmt
stmt s1,s2; if i;
Select <s1,s2> such that Follows(s1,i) and Follows(s2,i)
2 2,15 15
5000
2 - tuple,Follows,stmt and stmt
stmt s1,s2,s3; call c;
Select <s1,s2,s3> such that Follows(s1,c) and Follows(s2,c) and Follows(s3,c)
11 11 11,18 18 18,3 3 3
5000
3 - tuple,Follows,stmt and stmt
stmt s; if i;
Select <s,s> such that Follows(i,s)
6 6
5000
4 - tuple,Follows,stmt and if
stmt s; if i;
Select <s,i> such that Follows(s,i)
2 3,15 16
5000
5 - tuple, Follows, if and stmt
stmt s; if i;
Select <s,i> such that Follows(i,s)
6 3
5000
6 - tuple,Follows, stmt and call
stmt s; call c;
Select <s,c> such that Follows(s,c)
3 6,11 12,18 19
5000
7 - tuple,Follows, stmt and assign
stmt s; assign a;
Select <s,a> such that Follows(s,a)
1 2,7 8,8 9,10 11,12 13,14 15
5000
8 - tuple,Follows, if and if
if i1,i2;
Select <i1,i2> such that Follows(i1,i2)
none
5000
9 - tuple,Follows, if and if
if i1,i2;
Select <i1,i2> such that Follows(14,_)
3 3,3 16,16 16,16 3
5000
10 - tuple, Follows, if and call
if i;call c;
Select <i,c> such that Follows(i,c)
3 6
5000
11 - tuple, Follows, call and assign
call c; assign a;
Select <c,a> such that Follows(c,a)
12 13
5000
12 - tuple, Follows, assign and call
assign a; call c;
Select <a,c> such that Follows(a,c)
11 12,18 19
5000
13 - tuple, Follows, assign and prog_line
assign a;prog_line n;
Select <a,n> such that Follows(a,n)
1 2,2 3,7 8,8 9,10 11,11 12,14 15,15 16,18 19
5000
14 - tuple, Follows, prog_line and prog_line
prog_line n1,n2;
Select <n1,n2> such that Follows(n1,16) and Follows(n2,19)
15 18
5000
15 - tuple, Follows*, stmt and if
stmt s; if i;
Select <s,i> such that Follows*(s,i)
1 3,2 3,14 16,15 16
5000
16 - tuple, Follows*, stmt and call
stmt s; call c;
Select <s,c> such that Follows*(s,c)
1 6,2 6,3 6,10 12,11 12,18 19
5000
17 - tuple, Follows*, call and call
call c1,c2,c3;
Select <c1,c2,c3> such that Follows*(_,19) with c1.stmt#=c2.stmt# and c2.stmt#=c3.stmt#
6 6 6,12 12 12,19 19 19
5000
18 - tuple, Parent, stmt and stmt
stmt s1,s2;
Select <s1,s2> such that Parent(s1,s2)
3 4,3 5,16 17,16 18,16 19
5000
19 - tuple, Parent, stmt and call
stmt s; call c;
Select <s,c> such that Parent(s,c)
16 19
5000
20 - tuple, Parent,stmt and assign
stmt s; assign a;
Select <s,a> such that Parent(s,a)
3 4,3 5,16 17,16 18
5000
21 - tuple, Parent, if and call
call c;if i;
Select <c,i> such that Parent(3,i) and Parent(16,c)
none
5000
22 - tuple, Modifies, stmt and var
stmt s; variable v;
Select <s,v> such that Modifies(s,v)
1 x,2 y,3 z,4 z,5 z,6 x,6 y,6 z,7 x,8 y,9 z,10 p,11 q,12 x,12 y,12 z,13 w,14 i,15 x,16 x,16 y,16 p, 16 q,16 z, 16 w, 17 x,18 y,19 p,19 q,19 x,19 y,19 z,19 w
5000
23 - tuple, Modifies, stmt and stmt
stmt s1,s2;
Select <s1,s2> such that Modifies(s1,"i") and Modifies(s2,"p")
14 10,14 19,14 16
5000
24 - tuple,Modifies, assign and assign
assign a1,a2;
Select <a1,a2> such that Modifies(a1,"z") and Modifies(a2,"y")
4 2,4 8,4 18,5 2,5 8,5 18,9 2,9 8,9 18
5000
25 - tuple, Modifies, procedure and procedure
procedure p1,p2;
Select <p1,p2> such that Modifies(p1,"w") and Modifies(p2,"i")
Third Fourth,Fourth Fourth
5000
26 - tuple, Uses, call and var
call c; variable v;
Select <c,v> such that Uses(c,v)
6 x,6 y,12 x,12 y,19 p,19 x,19 y
5000
27 - tuple, Uses, if and if
if i1,i2;
Select <i1,i2> such that Uses(i1,"y") and Uses(i2,"z")
none
5000
28 - tuple, Uses, procedure and variable
procedure p;variable v;
Select <p,v> such that Uses(p,v)
First y, First x,Second x,Second y,Third p,Third x,Third y,Fourth i,Fourth y,Fourth p,Fourth x
5000
29 - tuple, Uses, procedure and procedure
procedure p1,p2;
Select <p1,p2> such that Uses(p1,"i") and Uses(p2,"p")
Fourth Third,Fourth Fourth
5000
30 - tuple, Uses, variable and variable
variable v1,v2;
Select <v1,v2> such that Uses("First",v1) and Uses("Third",v2)
x p,x x,x y,y p,y x, y y
5000
31 - tuple, Calls, procedure and procedure
procedure p1,p2;
Select <p1,p2> such that Calls(p1,p2)
First Second,Third Second,Fourth Third
5000
32 - tuple, Calls,procedure and procedure
procedure p1,p2;
Select <p1,p2> such that Calls(p1,"Second") and Calls(p2,"Third")
First Fourth,Third Fourth
5000
33 - tuple, Calls*, procedure and procedure
procedure p1,p2;
Select <p1,p2> such that Calls*(p1,p2)
First Second,Third Second,Fourth Third,Fourth Second
5000
34 - tuple, Calls*, procedure and procedure
procedure p1,p2;
Select <p1,p2> such that Calls*("Third",p1) and Calls(p2,"Third")
Second Fourth
5000
35 - tuple,Calls*, procedure and procedure
procedure p1,p2,p3,p4;
Select <p1,p2,p3,p4> with p1.procName=p2.procName and p3.procName=p4.procName and p3.procName="Second"
First First Second Second, Second Second Second Second,Third Third Second Second, Fourth Fourth Second Second
5000
36 - tuple, with, constant and procedure
constant c;procedure p;if i;
Select <c,p> with c.value=i.stmt# and p.procName="First"
3 First
5000
37 - tuple, with, stmt and constant
stmt s;constant c;
Select <s,c> with s.stmt#=8 and c.value=3
8 3
5000
38 - tuple, with, constant and if
constant c;if i;
Select <c,i> with c.value=i.stmt#
3 3
5000
39 - tuple, pattern,assign and assign
assign a1,a2;
Select <a1,a2> pattern a1("z","x") and a2("z","x+y")
5 4,5 9
5000
40 - tuple, pattern, variable and assign
assign a; variable v;
Select <a,v> pattern a(v,"x")
5 z,13 w
5000
41 - tuple, pattern, variable and if
if i;variable v;
Select <i,v> pattern i(v,_,_)
3 y,16 y
5000
42 - tuple, synonym.attrName,stmt#
stmt s1,s2,s3;
Select <s1,s1.stmt#> such that Follows(s1,s2) and Parent(s3,s1)
18 18
5000
43 - tuple,synonym.attrName,procName
procedure p1,p2;
Select <p1.procName,p2> such that Modifies(p1,"w") and Modifies(p2,"i")
Third Fourth,Fourth Fourth
5000
44 - tuple,synonym/attrName,procName
procedure p1,p2;
Select <p1.procName,p2.procName> such that Calls(p1,p2)
First Second,Third Second,Fourth Third
5000
45 - tuple, synonym.attrName,stmt#,varName
call c; variable v;
Select <c.stmt#,v.varName> such that Uses(c,v)
6 x,6 y,12 x,12 y,19 p,19 x,19 y
5000
46 - tuple, synonym.attrName,stmt#
if i;call c;
Select <i.stmt#,c.stmt#> such that Follows(i,c)
3 6
5000
47 - tuple, synonym.attrName, value
constant c;procedure p;if i;
Select <c.value,p> with c.value=i.stmt# and p.procName="First"
3 First
5000
48 - tuple, synonym,value and stmt#
constant c;if i;
Select <c.value,i.stmt#> with c.value=i.stmt#
3 3
5000