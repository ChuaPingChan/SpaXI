1 - select all stmt
stmt s;
Select s
None
5000
2 - unused declared synonyms valid
stmt s; assign a; while w; if ifs; call c; constant const; procedure p; variable v; prog_line n;
Select s
None
5000
3 - select all assign
assign a;
Select a
None
5000
4 - select all whiles
while w;
Select w
None
5000
5 - select all ifs
if i;
Select i
None
5000
6 - Entity concatenates ValidSynonym
if ifs;
Select ifs
None
5000
7 - select all calls
call cl;
Select cl
None
5000
8 - select all constants
constant c;
Select c
None
5000
9 - Synonym with entity name, Two seemingly entity,
variable constant;
Select constant
None
5000
10 - select all variables
variable v;
Select v
None
5000
11 - select all procedures
procedure p;
Select p
None
5000
12 - select all prog_lines
prog_line pl;
Select pl
None
5000
13 - invalid: synonym cannot have underscores
prog_line prog_line;
Select prog_line
none
5000
14 - select stmtLst
stmtLst sl;
Select sl
None
5000
15 - invalid: blank query


none
5000
16 - invalid: blank declaration

Select s
none
5000
17 - invalid: blank selection
stmt s;

none
5000
18 - invalid: improper declaration due to missing semicolon
stmt s
Select s
none
5000
19 - invalid: wrong synonym declaration
stmt s;
Select a
none
5000
20 - invalid: typo error
stmtt s;
Sellect s
none
5000
21 - invalid: cannot have duplicated declarations
stmt s; stmt s;
Select s
none
5000
22 - invalid: cannot have duplicated declarations
stmt s,s;
Select s
none
5000
23 - invalid: cannot have duplicated declarations
stmt s; assign s;
Select s
none
5000
24 - invalid: cannot have semi-colon at the end of select
stmt s;
Select s;
none
5000
25 - invalid: cannot have multiple semi-colons
stmt s;;;
Select s
none
5000
26 - declaration test
stmt Select;
Select Select
None
5000
27 - test attribute ref stmts
stmt s;
Select s.stmt#
None
5000
28 - test attribute ref assigns
assign a;
Select a.stmt#
None
5000
29 - test attribute ref whiles
while w;
Select w.stmt#
None
5000
30 - test attribute ref ifs
if i;
Select i.stmt#
None
5000
31 - test attribute ref constant
constant c;
Select c.value
None
5000
32 - test attribute ref var names
variable v;
Select v.varName
None
5000
33 - test attribute ref calls
call c;
Select c.stmt#
None
5000
34 - test attribute ref calls
call c;
Select c.procName
None
5000
35 - test attribute ref proc names
procedure p;
Select p.procName
None
5000
36 - invalid: wrong attribute ref
variable v;
Select v.stmt#
none
5000
37 - invalid: invalid attribute ref
stmt s;
Select s.stmt
none
5000
38 - single tuple test
stmt s;
Select <s>
None
5000
39 - double tuple test, same synonym
stmt s;
Select <s,s>
None
5000
40 - double tuple test, diff synonym diff entity
stmt s; procedure p;
Select <s,p>
None
5000
41 - double tuple test, diff synonym same entity
while w1,w2;
Select <w1,w2>
None
5000
42 - triple tuple test
if i;
Select <i,i,i>
None
5000
43 - same stmtlst tuple
stmtLst sl;
Select <sl,sl>
None
5000
44 - diff stmtlst tuple
stmtLst sl1,sl2;
Select <sl1,sl2>
None
5000
45 - test attribute ref in single tuple
assign a;
Select <a.stmt#>
None
5000
46 - test attribute ref in double tuple
while w; variable v;
Select <w.stmt#,v.varName>
None
5000
47 - test diff attr ref for single synonym
call c;
Select <c.stmt#,c.procName,p.procName>
None
5000
48 - invalid: tuple requires brackets
while w; variable v;
Select w.stmt#,v.varName
none
5000
49 - invalid: incomplete tuple bracket
while w; variable v;
Select <w.stmt#,v.varName
none
5000
50 - test attribute ref and synonym in same tuple
variable v; constant c;
Select <v,c.value>
None
5000
51 - boolean returns true
stmt s;
Select BOOLEAN
true
5000
52 - boolean returns false due to invalid query
stmt s;
Select BOOLEAN dfdagegerger
false
5000
53 - boolean returns false due to invalid declaration
smt s;
Select BOOLEAN
false
5000
54 - boolean keyword must be in capital letters
stmt s;
Select boolean
none
5000
55 - with: has common synonym
stmt s,s1,s2;
Select s with s.stmt# = s2.stmt#
None
5000
56 - test whitespace
stmt s,s1,s2;
Select      s       with      s.stmt#     =       s2.stmt#
None
5000
57 - with: has no common synonym
stmt s,s1,s2;
Select s with s1.stmt# = s2.stmt#
None
5000
58 - with: stmt = int has common synonym
stmt s;
Select s with s.stmt# = 123
None
5000
59 - with: stmt = int no common synonym
stmt s,s1;
Select s with s1.stmt# = 123
None
5000
60 - with: stmt does not take ident
stmt s;
Select s with s.stmt# = "tokyo"
none
5000
61 - with: int = int
stmt s;
Select s with 123 = 123;
none
5000
62 - with: int = int not equal
stmt s;
Select s with 123 = 124;
none
5000
63 - with: stmt = assign select lhs
stmt s; assign a;
Select s with s.stmt# = a.stmt#
None
5000
64 - with: stmt = assign select rhs
stmt s; assign a;
Select a with s.stmt# = a.stmt#
None
5000
65 - with: stmt = while select lhs
stmt s; while w;
Select s with s.stmt# = w.stmt#
None
5000
66 - with: stmt = if select lhs
stmt s; if i;
Select s with s.stmt# = i.stmt#
None
5000
67 - with: stmt = call select lhs
stmt s; call c;
Select s with s.stmt# = c.stmt#
None
5000
68 - with: test tuple
stmt s; while w;
Select <s,w> with s.stmt# = w.stmt#
None
5000
69 - with: stmt = constant select lhs
stmt s; constant c;
Select s with s.stmt# = c.value
None
5000
70 - with: stmt = constant select constants
stmt s; constant c;
Select c with s.stmt# = c.value
None
5000
71 - with: progline = stmt
stmt s; prog_line n;
Select n with n = s.stmt#
None
5000
72 - with progline = progline
prog_line n;
Select n with n = n
None
5000
73 - with: assign = while, invalid since assign is not while
assign a; while w;
Select a with a.stmt# = w.stmt#
none
5000
74 - with: var = ident, has common synonym
variable v;
Select v with v.varName = "tokyo"
None
5000
75 - with: var = ident, no common synonym
variable v,v1;
Select v with v1.varName = "tokyo"
None
5000
76 - with: var = ident, test tuple
variable v,v1;
Select <v,v1> with v1.varName = "tokyo"
None
5000
77 - with: var = proc
variable v; procedure p;
Select v with v.varName = p.procName
None
5000
78 - with: proc = ident, has common synonym
procedure p;
Select p with p.procName = "Japan"
None
5000
79 - with: proc = ident, no common synonym
procedure p,p1;
Select p1 with p.procName = "Japan"
None
5000
80 - with call = ident
call c;
Select c with c.procName = "Japan"
None
5000
81 - with call = varName
call c; variable v;
Select c with c.procName = v.varName
None
5000
82 - with: invalid due to different data types
assign a; variable v;
Select a with a.stmt# = v.varName
none
5000
83 - with: combined with clauses
stmt s; constant c; while w;
Select s with s.stmt# = c.value and s.stmt# = w.stmt#
None
5000
84 - with: return none if one clause return none
stmt s; constant c; assign a; while w;
Select s with s.stmt# = c.value and a.stmt# = w.stmt#
none
5000
85 - with: combined with clauses
procedure p; call c; variable v;
Select p with p.procName = c.procName and v.varName = p.procName
None
5000
86 - with: combined with clauses tuple test
while w; variable v,v1; constant c;
Select <w,v,v1> with w.stmt# = c.value and v.varName = "osaka"
None
5000
87 - with: combined with clauses tuple test
call c; procedure p;
Select <c.stmt#,c.procName> with c.procName = p.procName
None
5000
88 - check pattern assign
assign a; variable v;
Select BOOLEAN pattern a(v,_)
true
5000
89 - invalid: no arg
assign a;
Select BOOLEAN pattern a(,)
false
5000
90 - invalid: wrong arg
assign a; variable v1,v2;
Select BOOLEAN pattern a(v1,v2)
false
5000
91 - invalid: wrong arg
assign a; stmt s;
Select BOOLEAN pattern a(s,_)
false
5000
92 - invalid: pattern stmt does not exist
stmt s;
Select BOOLEAN pattern s(v,_)
false
5000
93 - check empty assign
assign a;
Select BOOLEAN pattern a(_,_)
true
5000
94 - has exact expression match
assign a;
Select BOOLEAN pattern a(_,"5")
true
5000
95 - has partial expression match
assign a;
Select BOOLEAN pattern a(_,_"5"_)
true
5000
96 - invalid format for pattern assign
assign a;
Select BOOLEAN pattern a(_,"5"_)
false
5000
97 - test brackets partial match
assign a;
Select BOOLEAN pattern a(_,"(5)")
true
5000
98 - test brackets incomplete bracketing
assign a;
Select BOOLEAN pattern a(_,_"(5"_)
false
5000
99 - test brackets exact match
assign a;
Select BOOLEAN pattern a(_,_"(5)"_)
true
5000
100 - test multiple brackets
assign a;
Select BOOLEAN pattern a(_,_"((((5))))"_)
true
5000
101 - test brackets: invalid bracket maching
assign a;
Select BOOLEAN pattern a(_,_"((((5)"_)
false
5000
102 - test expression partial
assign a;
Select BOOLEAN pattern a(_,_"2020-7-24"_)
true
5000
103 - test expression exact
assign a;
Select BOOLEAN pattern a(_,"2020-7-24")
true
5000
104 - test brackets partial match
assign a;
Select BOOLEAN pattern a(_,_"(((2020)))-((7))-24"_)
true
5000
105 - test brackets partial match
assign a;
Select BOOLEAN pattern a(_,_"((((2020)))-((7)))-24"_)
true
5000
106 - test brackets partial match
assign a;
Select BOOLEAN pattern a(_,_"(((2020)))-(((7))-24)"_)
false
5000
107 - test brackets exact match
assign a;
Select BOOLEAN pattern a(_,"((((2020)))-((7)))-24")
true
5000
108 - test brackets on stmt 26
assign a;
Select BOOLEAN pattern a(_,"(((3 + ((5+55)))))")
true
5000
109 - test brackets on stmt 26
assign a;
Select BOOLEAN pattern a(_,"3+(5+55)")
true
5000
110 - test brackets on stmt 26
assign a;
Select BOOLEAN pattern a(_,"3+5+55")
false
5000
111 - test brackets on stmt 26
assign a;
Select BOOLEAN pattern a(_,"((((3))))+(5+55)")
true
5000
112 - test brackets on stmt 26
assign a;
Select BOOLEAN pattern a(_,_"((((3))))+(5+(((55))))"_)
true
5000
113 - test brackets on stmt 26
assign a;
Select BOOLEAN pattern a(_,_"(((5+55)))"_)
true
5000
114 - test variable match on stmt 3
assign a;
Select BOOLEAN pattern a(_,_"tokyo"_) with a.stmt# = 3
false
5000
115 - test variable match on stmt 3
assign a;
Select BOOLEAN pattern a(_,_"tokyo2020"_) with a.stmt# = 3
true
5000
116 - test variable match on stmt 3
assign a;
Select BOOLEAN pattern a(_,"tokyo2020") with a.stmt# = 3
true
5000
117 - test multiply match on stmt 178
assign a;
Select BOOLEAN pattern a(_,_"56*78"_) with a.stmt# = 178
true
5000
118 - test multiply match on stmt 179
assign a;
Select BOOLEAN pattern a(_,_"56*78"_) with a.stmt# = 179
false
5000
119 - test bracket multiply match on stmt 178
assign a;
Select BOOLEAN pattern a(_,_"(((56*(((78))))))"_) with a.stmt# = 178
true
5000
120 - test multiply match on stmt 288
assign a;
Select BOOLEAN pattern a(_,_"fukushima*kyoto"_) with a.stmt# = 288
true
5000
121 - test multiply match on stmt 288
assign a;
Select BOOLEAN pattern a(_,_"saitama*saitama"_) with a.stmt# = 288
true
5000
122 - test bracket precedence on stmt 288
assign a;
Select BOOLEAN pattern a(_,_"saitama*saitama-nagasaki+okinawa"_) with a.stmt# = 288
true
5000
123 - test bracket on stmt 315
assign a;
Select BOOLEAN pattern a(_,"kumamoto*56*78+90-(200*888)") with a.stmt# = 315
true
5000
124 - test bracket on stmt 315
assign a;
Select BOOLEAN pattern a(_,"((kumamoto*56)*78)+(90)-(((200*888)))") with a.stmt# = 315
true
5000
125 - test bracket on stmt 315
assign a;
Select BOOLEAN pattern a(_,"kumamoto*(56*78)+90-(200*888)") with a.stmt# = 315
false
5000
126 - test pattern assign left ident
assign a;
Select BOOLEAN pattern a("osaka",_)
true
5000
127 - test pattern assign left ident cannot have brackets
assign a;
Select BOOLEAN pattern a("(osaka)",_)
false
5000
128 - test pattern assign left ident and exact match
assign a;
Select BOOLEAN pattern a("osaka","tokyo+(hiroshima-kyoto*12)")
true
5000
129 - test pattern assign left ident and exact match and brackets
assign a;
Select BOOLEAN pattern a("osaka","(((tokyo)))+(hiroshima-(kyoto*12))")
true
5000
130 - test pattern assign left ident and partial match
assign a;
Select BOOLEAN pattern a("osaka",_"kyoto*12"_)
true
5000
131 - test pattern assign left syn and partial match
assign a; variable v;
Select BOOLEAN pattern a(v,_"kyoto*12"_)
true
5000
132 - test pattern assign left syn and exact match
assign a; variable v;
Select BOOLEAN pattern a(v,"tokyo+(hiroshima-kyoto*12)")
true
5000
133 - pattern assign both underscore has common synonym
assign a;
Select a pattern a(_,_)
None
5000
134 - pattern assign both underscore no common synonym
stmt s; assign a;
Select s pattern a(_,_)
None
5000
135 - pattern assign underscore,ident get assign
assign a;
Select a pattern a(_,"tokyo")
None
5000
136 - pattern assign underscore,partial ident get assign
assign a;
Select a pattern a(_,_"18*18"_)
None
5000
137 - pattern declaration test
assign pattern;
Select pattern pattern pattern(_,_"18*18"_)
None
5000
138 - pattern assign underscore,partial ident get assign
assign a;
Select a pattern a(_,_"12-(34-56)*78-90"_)
None
5000
139 - pattern assign ident,ident get assign
assign a;
Select a pattern a("Japan","japan")
None
5000
140 - pattern assign ident,partial ident get assign
assign a;
Select a pattern a("japan",_"Japan"_)
None
5000
141 - pattern assign variable,underscore get variable
assign a; variable v;
Select v pattern a(v,_)
None
5000
142 - pattern assign variable,underscore get tuple
assign a; variable v;
Select <a,v> pattern a(v,_)
None
5000
143 - pattern assign variable,partial ident get assign
assign a; variable v;
Select a pattern a(v,_"18*18"_)
None
5000
144 - pattern assign variable,partial ident get variable
assign a; variable v;
Select v pattern a(v,_"18*18"_)
None
5000
145 - pattern assign + with has result
assign a;
Select a pattern a(_,_"18*18"_) with a.stmt# = 111
111
5000
146 - pattern assign + with no result
assign a;
Select a pattern a(_,_"18*18"_) with a.stmt# = 110
none
5000
147 - pattern assign no common synonym
assign a,a1;
Select a1 pattern a(_,_"18*18"_) with a.stmt# = 111
None
5000
148 - pattern assign variable,underscore with variable attr
assign a; variable v;
Select a pattern a(v,_) with v.varName = "niigata"
None
5000
149 - 2 pattern clauses: und,ident and und,ident
assign a;
Select a pattern a(_,_"hiroshima"_) and a(_,_"nagasaki"_)
None
5000
150 - 2 pattern clauses: und,ident and var,und
assign a; variable v;
Select a pattern a(_,_"hiroshima"_) and a(v,_)
None
5000
151 - 2 pattern clauses: v1,und and v2,und
assign a; variable v1,v2;
Select a pattern a(v1,_) and a(v2,_)
None
5000
152 - None
assign a1,a2; variable v;
Select a1 pattern a1(v,_) and a2(v,_)
None
5000
153 - 2 pattern clauses: v1,ident and v2,ident
assign a; variable v1,v2;
Select a pattern a(v1,_"hiroshima"_) and a(v2,_"nagasaki"_)
None
5000
154 - 2 pattern clauses: same syn but diff ident select tuple
assign a; variable v;
Select <a,v> pattern a(v,_"hiroshima"_) and a(v,_"nagasaki"_)
None
5000
155 - 2 pattern clauses: diff syn diff ident select tuple
assign a; variable v1,v2;
Select <a,v1,v2> pattern a(v1,_"hiroshima"_) and a(v2,_"nagasaki"_)
None
5000
156 - 2 pattern clauses: same syn difff ident diff assign
assign a1,a2; variable v;
Select <a1,a2> pattern a1(v,_"tokyo"_) and a2(v,_"saitama"_)
None
5000
157 - 3 pattern clauses
assign a1,a2,a3;
Select <a1,a2,a3> pattern a1(_,_"tokyo"_) and a2(_,_"saitama"_) and a3(_,_"nagasaki"_)
None
5000
158 - 3 pattern clauses
assign a1,a2,a3; variable v;
Select <a1,a2,a3> pattern a1(v,_"tokyo"_) and a2(v,_"saitama"_) and a3(v,_"nagasaki"_)
None
5000
159 - 3 pattern clauses
assign a; variable v1,v2,v3;
Select <v1,v2,v3> pattern a(v1,_"tokyo"_) and a(v2,_"saitama"_) and a(v3,_"nagasaki"_)
None
5000
160 - check pattern while und und
while w; variable v;
Select BOOLEAN pattern w(_,_)
true
5000
161 - check pattern while und var
while w; variable v;
Select BOOLEAN pattern w(v,_)
true
5000
162 - check pattern while und ident
while w; variable v;
Select BOOLEAN pattern w("tokyo",_)
true
5000
163 - invalid: variable does not exist as control var
while w; variable v;
Select BOOLEAN pattern w("tottori",_)
false
5000
164 - invalid: pattern while cannot have expression on the right arg
while w; variable v;
Select BOOLEAN pattern w(_,_"tokyo"_)
false
5000
165 - pattern while und,und select while
while w; variable v;
Select w pattern w(_,_)
None
5000
166 - pattern while ident,und select while
while w; variable v;
Select w pattern w("osaka",_)
None
5000
167 - pattern while var,und select while
while w; variable v;
Select w pattern w(v,_)
None
5000
168 - pattern while var,und select var
while w; variable v;
Select v pattern w(v,_)
None
5000
169 - None
while w1,w2;
Select w1 pattern w1("osaka",_) and w2("gifu",_)
None
5000
170 - None
while w1,w2;
Select <w1,w2> pattern w1("osaka",_) and w2("gifu",_)
None
5000
171 - None
while w; variable v1,v2;
Select <v1,v2> pattern w(v1,_) and w(v2,_)
None
5000
172 - None
while w1,w2; variable v;
Select <w1,w2> pattern w1(v,_) and w2(v,_)
None
5000
173 - pattern while and pattern assign
assign a; while w; variable v;
Select <a,w> pattern a(v,_) and w(v,_)
None
5000
174 - None
assign a; while w; variable v1,v2;
Select <v1,v2> pattern a(v1,_) and w(v2,_)
None
5000
175 - 3 pattern whiles
while w1,w2; variable v1,v2;
Select w1 pattern w1(v1,_) and w1(v2,_) and w2(v2,_)
None
5000
176 - check pattern if und
if i; variable v;
Select BOOLEAN pattern i(_,_,_)
true
5000
177 - check pattern if ident
if i; variable v;
Select BOOLEAN pattern i("shizuoka",_,_)
true
5000
178 - invalid: variable does not exist as if control var
if i; variable v;
Select BOOLEAN pattern i("okayama",_,_)
false
5000
179 - check pattern if var
if i; variable v;
Select BOOLEAN pattern i(v,_,_)
true
5000
180 - pattern cannot have 2 arg
if i; variable v;
Select BOOLEAN pattern i(v,_)
false
5000
181 - pattern if und, select if
if ifs; variable v;
Select ifs pattern ifs(_,_,_)
None
5000
182 - pattern if ident, select if
if ifs; variable v;
Select ifs pattern ifs("shizuoka",_,_)
None
5000
183 - pattern if var, select if
if ifs; variable v;
Select ifs pattern ifs(v,_,_)
None
5000
184 - pattern if var, select var
if ifs; variable v;
Select v pattern ifs(v,_,_)
None
5000
185 - None
if ifs,ifs1;
Select ifs pattern ifs1("shizuoka",_,_) and ifs("osaka",_,_)
None
5000
186 - None
if ifs,ifs1;
Select <ifs,ifs1> pattern ifs1("shizuoka",_,_) and ifs("osaka",_,_)
None
5000
187 - None
if ifs1,ifs2;
Select ifs1 pattern ifs1(v,_,_) and ifs2(v,_,_)
None
5000
188 - uses: boolean for assign returns true

Select BOOLEAN such that Uses(2,"tokyo")
true
5000
189 - uses: boolean returns false

Select BOOLEAN such that Uses(3,"tokyo")
false
5000
190 - uses: boolean use ctr var

Select BOOLEAN such that Uses(7,"fukuoka")
true
5000
191 - uses: boolean container stmt

Select BOOLEAN such that Uses(7,"osaka")
true
5000
192 - uses: boolean procedure

Select BOOLEAN such that Uses("Japan","osaka")
true
5000
193 - uses: var not found in proc

Select BOOLEAN such that Uses("Ilbon","gifu")
false
5000
194 - test boolean with 2 clauses

Select BOOLEAN such that Uses(2,"tokyo") and Uses(7,"osaka")
true
5000
195 - test boolean with 2 clauses 1 return false

Select BOOLEAN such that Uses(2,"tokyo") and Uses(3,"tokyo")
false
5000
196 - uses: boolean int,underscore return true

Select BOOLEAN such that Uses(6,_)
true
5000
197 - uses: boolean int,underscore return false

Select BOOLEAN such that Uses(8,_)
false
5000
198 - uses: boolean ident,underscore return true

Select BOOLEAN such that Uses("Japan",_)
true
5000
199 - uses: boolean ident,underscore return false, no such proc

Select BOOLEAN such that Uses("China",_)
false
5000
200 - uses: boolean underscore,ident invalid query

Select BOOLEAN such that Uses(_,"tokyo")
false
5000
201 - uses: boolean underscore,underscore invalid query

Select BOOLEAN such that Uses(_,_)
false
5000
202 - boundary test

Select BOOLEAN such that Uses(0,v)
false
5000
203 - boundary test

Select BOOLEAN such that Uses(496,v)
false
5000
204 - uses: int,ident select stmt
stmt s;
Select s such that Uses(2,"tokyo")
None
5000
205 - uses: stmt,ident select stmt
stmt s;
Select s such that Uses(s,"tokyo")
None
5000
206 - uses: assign,ident select assign
assign a;
Select a such that Uses(a,"tokyo")
None
5000
207 - None
call c;
Select c such that Uses(c,"tokyo")
None
5000
208 - uses: if,ident select if
if i;
Select i such that Uses(i,"tokyo")
None
5000
209 - uses: while,ident select while
while w;
Select w such that Uses(w,"tokyo")
None
5000
210 - uses: progline,ident select progline
prog_line n;
Select n such that Uses(n,"tokyo")
None
5000
211 - uses: proc,ident select stmt
procedure p;
Select p such that Uses(p,"tokyo")
None
5000
212 - uses: stmt,underscore select stmt
stmt s;
Select s such that Uses(s,_)
None
5000
213 - uses: assign,underscore select assign
assign a;
Select a such that Uses(a,_)
None
5000
214 - uses: if,underscore select if
if i;
Select i such that Uses(i,_)
None
5000
215 - uses: call, underscore select calls
call c;
Select c such that Uses(c,_)
None
5000
216 - uses: while,underscore select while
while w;
Select w such that Uses(w,_)
None
5000
217 - uses: proc,underscore select proc
procedure p;
Select p such that Uses(p,_)
None
5000
218 - uses: int,var assign test
variable v;
Select v such that Uses(5,v)
None
5000
219 - uses: int,var while test
variable v;
Select v such that Uses(7,v)
None
5000
220 - uses: int,var if test
variable v;
Select v such that Uses(48,v)
None
5000
221 - uses: int,var while nested test
variable v;
Select v such that Uses(194,v)
None
5000
222 - uses: int,var if nested test
variable v;
Select v such that Uses(97,v)
None
5000
223 - uses: underscore,var invalid query
variable v;
Select v such that Uses(_,v)
none
5000
224 - uses: stmt,var select stmt
stmt s; variable v;
Select s such that Uses(s,v)
None
5000
225 - uses: assign,var select assign
assign a; variable v;
Select a such that Uses(a,v)
None
5000
226 - uses: if,var select if
if i; variable v;
Select i such that Uses(i,v)
None
5000
227 - uses: while,var select while
while w; variable v;
Select w such that Uses(w,v)
None
5000
228 - uses: call, var select calls
call c; variable v;
Select c such that Uses(c,v)
None
5000
229 - uses: proc,var select proc
procedure p; variable v;
Select p such that Uses(p,v)
None
5000
230 - uses: stmt,var select var
stmt s; variable v;
Select v such that Uses(s,v)
None
5000
231 - uses: no common syn return all stmts
stmt s,s1; variable v;
Select s1 such that Uses(s,v)
None
5000
232 - uses: no common syn no result
stmt s1; variable v; call c;
Select s1 such that Uses(8,v)
none
5000
233 - uses: tuple test
stmt s; variable v;
Select <s,v> such that Uses(s,v)
None
5000
234 - uses: 2 clauses common syn stmt
stmt s;
Select s such that Uses(s,"kyoto") and Uses(s,"osaka")
None
5000
235 - uses: 2 clauses common syn assign
assign a;
Select a such that Uses(a,"kyoto") and Uses(a,"osaka")
None
5000
236 - uses: 2 clauses common syn while
while w;
Select w such that Uses(w,"kyoto") and Uses(w,"osaka")
None
5000
237 - uses: 2 clauses common syn if
if i;
Select i such that Uses(i,"kyoto") and Uses(i,"osaka")
None
5000
238 - uses: 2 clauses common syn calls
call c;
Select c such that Uses(c,"kyoto") and Uses(c,"osaka")
None
5000
239 - uses: 2 clauses common syn var
variable v;
Select v such that Uses(44,v) and Uses(48,v)
None
5000
240 - uses: 2 clauses 2 syn
stmt s; variable v;
Select v such that Uses(48,v) and Uses(s,"osaka")
None
5000
241 - uses: int,ident and if,ident return result if true
if i;
Select i such that Uses(2,"tokyo") and Uses(i,"osaka")
None
5000
242 - uses: 2 clauses stmt,var stmt,ident
stmt s; variable v;
Select s such that Uses(s,v) and Uses(s,"tokyo")
None
5000
243 - uses: 2 clauses stmt,var assign,var select stmt
stmt s; assign a; variable v;
Select s such that Uses(s,v) and Uses(a,v)
None
5000
244 - uses: 2 clauses stmt,var assign,var select stmt
stmt s; assign a; variable v;
Select a such that Uses(s,v) and Uses(a,v)
None
5000
245 - uses: 2 clauses call,var assign,var select assign
call c; variable v; assign a;
Select a such that Uses(a,v) and Uses(c,v)
None
5000
246 - uses: 2 clauses while,var if,var select stmt
while w; if i; variable v;
Select w such that Uses(w,v) and Uses(i,v)
None
5000
247 - uses: 2 clauses if,var if,undsc select if
if i; variable v;
Select v such that Uses(i,v) and Uses(i,_)
None
5000
248 - uses: 2 clauses stmt1,undsc stmt2,undsc select s1
stmt s1,s2;
Select s1 such that Uses(s1,_) and Uses(s2,_)
None
5000
249 - uses: 2 clauses same var but diff stmt
assign a1,a2; variable v;
Select a1 such that Uses(a1,v) and Uses(a2,v)
None
5000
250 - uses: 2 clauses same stmt but diff var
assign a; variable v1,v2;
Select a such that Uses(a,v1) and Uses(a,v2)
None
5000
251 - uses with pattern assign
assign a;
Select a such that Uses(a,"osaka") pattern a(_,_"saitama"_)
None
5000
252 - uses with pattern assign
assign a;
Select a such that Uses(a,"osaka") pattern a("kyoto",_"saitama"_)
None
5000
253 - uses with pattern assign
assign a; variable v; while w;
Select v such that Uses(w,"osaka") pattern a(v,_)
None
5000
254 - uses with pattern while
variable v; while w;
Select v such that Uses(w,"osaka") pattern w(v,_)
None
5000
255 - uses with pattern if
if i; variable v;
Select v such that Uses(i,"osaka") pattern i(v,_,_)
None
5000
256 - uses with pattern assign select assign
assign a; variable v;
Select a such that Uses(a,v) pattern a(v,_)
None
5000
257 - uses with pattern assign select var
assign a; variable v;
Select v such that Uses(a,v) pattern a(v,_)
None
5000
258 - uses with pattern while
while w; variable v;
Select v such that Uses(w,v) pattern w(v,_)
None
5000
259 - uses with pattern assign exp match
assign a; variable v;
Select v such that Uses(a,v) pattern a(v,_"saitama"_)
None
5000
260 - None
stmt s; assign a; variable v;
Select v such that Uses(s,v) pattern a(v,_)
None
5000
261 - None
variable v; stmt s;
Select v such that Uses(s,v) with s.stmt# = 80
None
5000
262 - None
variable v; stmt s; assign a;
Select v such that Uses(s,v) with s.stmt# = a.stmt#
None
5000
263 - None
variable v; stmt s; procedure p;
Select s such that Uses(s,v) with v.varName = p.procName
None
5000
264 - None
variable v; assign a; constant c;
Select a such that Uses(a,v) with a.stmt# = c.value
None
5000
265 - None
variable v; stmt s; assign a; constant c;
Select v such that Uses(s,v) with s.stmt# = a.stmt# and s.stmt# = c.value
None
5000
266 - uses s1 v, s2 v
stmt s1,s2; variable v;
Select s1 such that Uses(s1,v) and Uses(s2,v)
None
5000
267 - uses s v1, s v2
stmt s; variable v1,v2;
Select s such that Uses(s,v1) and Uses(s,v2)
None
5000
268 - uses s v, a v
stmt s; assign a; variable v;
Select s such that Uses(s,v) and Uses(a,v)
None
5000
269 - uses w v, if v
while w; variable v; if i;
Select w such that Uses(w,v) and Uses(i,v)
None
5000
270 - uses a v, w v
assign a; while w; variable v;
Select a such that Uses(a,v) and Uses(w,v)
None
5000
271 - uses c1 v, c2 v
call c1,c2; variable v;
Select c1 such that Uses(c1,v) and Uses(c2,v)
None
5000
272 - uses if v1,if v2
if f; variable v1,v2;
Select f such that Uses(f,v1) and Uses(f,v2)
None
5000
273 - uses s v, a v with var = proc
stmt s; variable v; procedure p;
Select s such that Uses(s,v) and Uses(a,v) with v.varName = p.procName
None
5000
274 - uses w v, if v with if = const
while w; if ifs; variable v; constant c;
Select ifs such that Uses(w,v) and Uses(ifs,v) with ifs.stmt# = c.value
None
5000
275 - 2 uses with pattern
stmt s; variable v1,v2; assign a;
Select a such that Uses(s,v1) and Uses(s,v2) pattern a(v2,_)
None
5000
276 - 2 uses with pattern
stmt s1,s2; variable v1; assign a;
Select s1 such that Uses(s1,v1) and Uses(s2,v1) pattern a(v1,_)
None
5000
277 - uses and modifies
stmt s; variable v;
Select s such that Uses(s,v) and Modifies(s,v)
None
5000
278 - uses and modifies diff var
stmt s; variable v1,v2;
Select s such that Uses(s,v1) and Modifies(s,v2)
None
5000
279 - uses and modifies
stmt s; assign a; variable v;
Select s such that Uses(a,v) and Modifies(s,v)
None
5000
280 - uses and modifies
stmt s; variable v; while w;
Select w such that Uses(s,v) and Modifies(w,v)
None
5000
281 - uses and modifies
while w; if ifs; variable v;
Select w such that Uses(w,v) and Modifies(ifs,v)
None
5000
282 - uses and modifies
while w; procedure p; variable v;
Select w such that Uses(p,v) and Modifies(w,v) with p.procName = v.varName
None
5000
283 - uses and parents
stmt s,s1; variable v;
Select s such that Uses(s,v) and Parent(s1,s)
None
5000
284 - uses and parents
prog_line n; procedure p; variable v1; assign a;
Select n such that Uses(p,v1) and Parent(n,v1) pattern a(v1,_)
None
5000
285 - uses and parents
while w; call c; variable v;
Select c such that Uses(w,v) and Parent(w,c)
None
5000
286 - uses and parentstar
stmt s,s1; variable v;
Select s such that Uses(s,v) and Parent*(s1,s)
None
5000
287 - uses and parentstar
while w; variable v; if i;
Select w such that Uses(w,v) and Parent*(w,i)
None
5000
288 - uses and parentstar
procedure p; variable v; call c; while w;
Select p such that Uses(p,v) and Parent*(w,c) with p.procName = c.procName
None
5000
289 - uses and follows
stmt s,s1; variable v;
Select s such that Uses(s,v) and Follows(s1,s)
None
5000
290 - uses and followstar
stmt s,s1; variable v;
Select s such that Uses(s,v) and Follows*(s1,s)
None
5000
291 - uses and followstar
assign a; variable v1,v2; while w;
Select v2 such that Uses(a,v1) and Follows*(w,a) pattern a(v2,_"saitama"_)
None
5000
292 - uses and calls
procedure p,p1; variable v;
Select v such that Uses(p1,v) and Calls(p,p1)
None
5000
293 - uses and callstar
procedure p,p1; variable v;
Select p1 such that Uses(p,v) and Calls*(p,p1)
None
5000
294 - uses and next
stmt s,s1; variable v;
Select s such that Uses(s,v) and Next(s,s1)
None
5000
295 - uses and nextstar
stmt s,s1; variable v;
Select s such that Uses(s,v) and Next*(s,s1)
None
5000
296 - uses and nextstar
while w; variable v; call c;
Select w such that Uses(w,v) and Next*(w,c) with c.procName = "Riben"
None
5000
297 - uses and next
assign a; while w; variable v;
Select <a,w> such that Uses(a,v) and Next(a,w)
None
5000
298 - uses and affects
stmt s,s1; variable v;
Select s such that Uses(s,v) and Affects(s,s1)
None
5000
299 - uses and affectstar
stmt s,s1; variable v;
Select s such that Uses(s,v) and Affects*(s,s1)
None
5000
300 - 3 rels using uses
stmt s; variable v; while w; if i; 
Select <s,i> such that Uses(s,v) and Parent(s,w) and Follows*(w,i)
None
5000
301 - 3 rels using uses pattern
stmt s1,s2; variable v; procedure p; if i;
Select <p,s2> such that Uses(p,v) and Modifies(s1,v) and Parent(s1,s2) pattern i(v,_,_)
None
5000
302 - 4 rels using uses with
stmt s; variable v; while w; if i; assign a;
Select <a,w,i> such that Uses(s,v) and Modifies(a,v) and Parent*(w,a) and Follows*(w,i) with s.stmt# = a.stmt#
None
5000
303 - modifies: boolean assign return true

Select BOOLEAN such that Modifies(2,"tokyo")
true
5000
304 - modifies: boolean return false

Select BOOLEAN such that Modifies(1,"tokyo")
false
5000
305 - modifies: boolean container stmt

Select BOOLEAN such that Modifies(7,"osaka")
true
5000
306 - modifies: boolean procedure

Select BOOLEAN such that Modifies("Japan","osaka")
true
5000
307 - modifies: var not found in proc

Select BOOLEAN such that Modifies("Nihon","gifu")
false
5000
308 - modifies: int,underscore return true

Select BOOLEAN such that Modifies(7,_)
true
5000
309 - modifies: ident, underscore return true

Select BOOLEAN such that Modifies("Japan",_)
true
5000
310 - modifies: ident,underscore return false no such proc

Select BOOLEAN such that Modifies("China",_)
false
5000
311 - modifies: underscore, ident return false no such query

Select BOOLEAN such that Modifies(_,"tokyo")
false
5000
312 - modifies: underscore, underscore return false no such query

Select BOOLEAN such that Modifies(_,_)
false
5000
313 - modifies: int,ident select stmt
stmt s;
Select s such that Modifies(s,"okayama")
None
5000
314 - modifies: stmt,ident select stmt
assign a;
Select a such that Modifies(a,"okayama")
None
5000
315 - modifies: assign,ident select assign
if i;
Select i such that Modifies(i,"okayama")
None
5000
316 - modifies: call,ident select call
call c;
Select c such that Modifies(c,"okayama")
None
5000
317 - modifies: if,ident select if
while w;
Select w such that Modifies(w, "okayama")
None
5000
318 - modifies: while,ident select while
prog_line n;
Select n such that Modifies(n, "okayama")
None
5000
319 - modifies: progline,ident select progline
procedure p;
Select p such that Modifies(p, "okayama")
None
5000
320 - modifies: proc,ident select stmt
stmt s;
Select s such that Modifies(s,_)
None
5000
321 - modifies: stmt,underscore select stmt
assign a;
Select a such that Modifies(a,_)
None
5000
322 - modifies: assign,underscore select assign
if i;
Select i such that Modifies(i,_)
None
5000
323 - modifies: if,underscore select if
while w;
Select w such that Modifies(w,_)
None
5000
324 - modifies: call,underscore select calls
call c;
Select c such that Modifies(c,_)
None
5000
325 - modifies: while,underscore select while
prog_line n;
Select n such that Modifies(n,_)
None
5000
326 - modifies: proc,underscore select proc
procedure p;
Select p such that Modifies(p,_)
None
5000
327 - modifies: int,var assign test
variable v;
Select v such that Modifies(5,v)
None
5000
328 - modifies: int,var while test
variable v;
Select v such that Modifies(7,v)
None
5000
329 - modifies: int,var if test
variable v;
Select v such that Modifies(48,v)
None
5000
330 - modifies: int,var while nested test
variable v;
Select v such that Modifies(194,v)
None
5000
331 - modifies: int,var if nested test
variable v;
Select v such that Modifies(97,v)
None
5000
332 - modifies: underscore,var invalid query
variable v;
Select v such that Modifies(_,v)
none
5000
333 - modifies: stmt,var select stmt
stmt s; variable v;
Select s such that Modifies(s,v)
None
5000
334 - modifies: assign,var select assign
assign a; variable v;
Select a such that Modifies(a,v)
None
5000
335 - modifies: if,var select if
if i; variable v;
Select i such that Modifies(i,v)
None
5000
336 - modifies: while,var select while
while w; variable v;
Select w such that Modifies(w,v)
None
5000
337 - modifies: call, var select call
call c; variable v;
Select c such that Modifies(c,v)
None
5000
338 - modifies: proc,var select proc
procedure p; variable v;
Select p such that Modifies(p,v)
None
5000
339 - modifies: stmt,var select var
stmt s; variable v;
Select v such that Modifies(s,v)
None
5000
340 - modifies: tuple test
stmt s; variable v;
Select <s,v> such that Modifies(s,v)
None
5000
341 - modifies and with
stmt s; variable v;
Select s such that Modifies(s,v) with v.varName = "tokyo"
None
5000
342 - modifies and with
stmt s; variable v;
Select s such that Modifies(s,v) with s.stmt# = 88
None
5000
343 - None
call c; variable v;
Select c such that Modifies(c,v) with c.procName = v.varName
None
5000
344 - None
call c; variable v; stmt s;
Select c.procName such that Modifies(s,v) with s.stmt# = c.stmt#
None
5000
345 - None
while w; variable v; constant c;
Select w such that Modifies(w,v) with w.stmt# = c.value
None
5000
346 - modifies and with
stmt s; variable v; assign a;
Select a such that Modifies(a,v) with s.stmt# = 88
None
5000
347 - modifies and pattern assign
assign a; variable v;
Select a such that Modifies(a,v) pattern a(_,_"saitama"_)
None
5000
348 - modifies and pattern assign
assign a; variable v;
Select v such that Modifies(a,v) pattern a(v,_"saitama"_)
None
5000
349 - modifies and pattern while
while w; variable v,v1;
Select w such that Modifies(w,v) pattern w(v1,_)
None
5000
350 - modifies and pattern ifs
if ifs; variable v,v1;
Select v1 such that Modifies(ifs,v) pattern ifs(v1,_,_)
None
5000
351 - two modifies rel
variable v;
Select v such that Modifies(17,v) and Modifies(63,v)
None
5000
352 - two modifies rel
stmt s;
Select s such that Modifies(s,"okayama") and Modifies(s,"saitama")
None
5000
353 - two modifies rel
stmt s; variable v;
Select <s,v> such that Modifies(17,v) and Modifies(s,"okayama")
None
5000
354 - two modifies rel
stmt s; variable v,v1;
Select s such that Modifies(s,v) and Modifies(s,v1)
None
5000
355 - two modifies rel
stmt s; variable v;
Select s such that Modifies(s,v) and Modifies(s,_)
None
5000
356 - two modifies rel
stmt s; variable v; assign a;
Select s such that Modifies(s,v) and Modifies(a,v)
None
5000
357 - two modifies rel
while w; assign a; variable v;
Select a such that Modifies(a,v) and Modifies(w,v)
None
5000
358 - two modifies rel
procedure p; call c; variable v;
Select c such that Modifies(p,v) and Modifies(c,v)
None
5000
359 - two modifies rel
while w; variable v; call c;
Select c such that Modifies(w,v) and Modifies(c,v)
None
5000
360 - two modifies rel
assign a1,a2; variable v;
Select a2 such that Modifies(a1,v) and Modifies(a2,v)
None
5000
361 - modifies and uses
stmt s; variable v;
Select v such that Modifies(s,v) and Uses(s,v)
None
5000
362 - modifies and uses
stmt s; variable v; call c;
Select c such that Modifies(s,v) and Uses(c,v)
None
5000
363 - modifies and uses
while w1,w2; variable v;
Select w1 such that Modifies(w1,v) and Uses(w2,v)
None
5000
364 - modifies and uses
procedure p; variable v; call c;
Select p such that Modifies(p,v) and Uses(c,v) with c.procName = p.procName
None
5000
365 - modifies and uses
assign a; variable v;
Select a such that Modifies(a,v) and Uses(a,v) pattern a(_,_"saitama"_)
None
5000
366 - modifies and parent
prog_line n; while w; variable v;
Select n such that Modifies(n,v) and Parent(w,n)
None
5000
367 - modifies and parent
if ifs; variable v; call c;
Select ifs such that Modifies(c,v) and Parent(ifs,c)
None
5000
368 - modifies and parentstar
if ifs; variable v; while w;
Select v such that Modifies(ifs,v) and Parent*(w,ifs)
None
5000
369 - modifies and parentstar
assign a; variable v; stmt s;
Select a such that Modifies(a,v) and Parent*(s,a)
None
5000
370 - modifies and parent
while w1,w2; call c; variable v;
Select <w2,c> such that Modifies(c,v) and Parent(w1,c) and Parent*(w1,w2)
None
5000
371 - modifies and follows
stmt s1,s2; variable v;
Select v such that Modifies(s1,v) and Follows(s1,s2)
None
5000
372 - modifies and follows
stmt s; variable v; call c;
Select s such that Modifies(s,v) and Follows(c,s)
None
5000
373 - modifies and followstar
while w; variable v; assign a;
Select w such that Modifies(a,v) and Follows*(w,a)
None
5000
374 - modifies and followstar
while w1,w2; variable v;
Select w1 such that Modifies(w2,v) and Follows*(w1,w2)
None
5000
375 - modifies and follows
if ifs; variable v; while w;
Select ifs such that Modifies(w,v) and Follows(ifs,w)
None
5000
376 - modifies and calls
procedure p1,p2;
Select p2 such that Modifies(p1,"okayama") and Calls(p1,p2)
None
5000
377 - modifies and calls
procedure p1,p2; variable v;
Select p1 such that Modifies(p1,v) and Calls(p1,p2)
None
5000
378 - modifies and callstar
procedure p1,p2; variable v;
Select p1 such that Modifies(p1,v) and Calls*(p1,p2)
None
5000
379 - modifies and callstar
procedure p1,p2; variable v;
Select p1 such that Modifies(p1,v) and Calls*(p1,p2) with p2.procName = v.varName
None
5000
380 - modifies and next
stmt s; while w;
Select s such that Modifies(s,"yamaguchi") and Next(s,w)
None
5000
381 - modifies and next
stmt s; variable v; while w;
Select s such that Modifies(s,v) and Next(s,w)
None
5000
382 - modifies and next
assign a; variable v; if ifs;
Select ifs such that Modifies(a,v) and Next(ifs,a)
None
5000
383 - modifies and nextstar
if ifs; while w; variable v;
Select w such that Modifies(w,v) and Next*(w,ifs)
None
5000
384 - modifies and nextstar
prog_line n; variable v;
Select n such that Modifies(n,v) and Next*(n,n)
None
5000
385 - modifies and nextstar
stmt s1,s2; variable v; constant c;
Select s1 such that Modifies(s1,v) and Next*(s2,s1) with s2.stmt# = c.value
None
5000
386 - modifies and nextstar
assign a; while w; variable v;
Select a such that Modifies(a,v) and Next*(a,w)
None
5000
387 - modifies and affects
stmt s; variable v;
Select s such that Modifies(s,v) and Affects(s,s)
None
5000
388 - modifies and affects
assign a1,a2; variable v;
Select a1 such that Modifies(a1,v) and Affects(a1,a2)
None
5000
389 - modifies and affectstar
assign a1,a2; variable v;
Select a1 such that Modifies(a1,v) and Affects*(a1,a2)
None
5000
390 - modifies and affects
variable v,v1; assign a; prog_line n;
Select n such that Modifies(n,v) and Affects(a,n) pattern a(v1,_)
None
5000
391 - modifies and affectstar
assign a; variable v;
Select a such that Modifies(a,v) and Affects*(a,a) pattern a(_,_"saitama"_)
None
5000
392 - 3 clauses
variable v1,v2; procedure p,p1;
Select <v1,v2> such that Modifies(p,v1) and Calls(p,p1) and Modifies(p,v2)
None
5000
393 - 3 clauses
while w; if ifs1,ifs2; variable v;
Select w such that Modifies(ifs1,v) and Parent*(w,ifs1) and Follows*(ifs2,w)
None
5000
394 - 4 clauses
assign a1,a2; variable v1; while w;
Select a2 such that Modifies(a1,v1) pattern a2(v1,_) such that Affects(a1,a2) and Parent(w,a2)
None
5000
395 - 5 clauses
assign a; variable v; if ifs; while w; constant c;
Select <a,v,w> such that Modifies(a,v) pattern a(v,_) such that Parent*(w,a) and Follows(w,ifs) with a.stmt# = c.value
None
5000
396 - parent test direct rel

Select BOOLEAN such that Parent(7,10)
true
5000
397 - parent test direct rel

Select BOOLEAN such that Parent(17,18)
true
5000
398 - parent test indirect rel

Select BOOLEAN such that Parent(17,19)
false
5000
399 - parentstar test indirect rel

Select BOOLEAN such that Parent*(17,19)
true
5000
400 - parentstar test indirect rel

Select BOOLEAN such that Parent*(17,31)
true
5000
401 - parent int und return true

Select BOOLEAN such that Parent(7,_)
true
5000
402 - parent int und return false

Select BOOLEAN such that Parent(6,_)
false
5000
403 - parentstar int und return true

Select BOOLEAN such that Parent*(7,_)
true
5000
404 - parent und int return true

Select BOOLEAN such that Parent(_,8)
true
5000
405 - parent und int return false

Select BOOLEAN such that Parent(_,7)
false
5000
406 - parentstar und int return true

Select BOOLEAN such that Parent*(_,8)
true
5000
407 - parentstar und int return false

Select BOOLEAN such that Parent*(_,416)
false
5000
408 - parent und und return true

Select BOOLEAN such that Parent(_,_)
true
5000
409 - parentstar und und return true

Select BOOLEAN such that Parent*(_,_)
true
5000
410 - None
stmt s;
Select s such that Parent(s,_)
None
5000
411 - None
stmt s;
Select s such that Parent*(s,_)
None
5000
412 - None
while w;
Select w such that Parent(w,_)
None
5000
413 - None
while w;
Select w such that Parent*(w,_)
None
5000
414 - None
if ifs;
Select ifs such that Parent(ifs,_)
None
5000
415 - None
if ifs;
Select ifs such that Parent*(ifs,_)
None
5000
416 - None
stmt s;
Select s such that Parent(s,31)
None
5000
417 - None
stmt s;
Select s such that Parent*(s,31)
None
5000
418 - None
while w;
Select w such that Parent(w,27)
None
5000
419 - None
while w;
Select w such that Parent*(w,27)
None
5000
420 - None
if ifs;
Select ifs such that Parent(ifs,31)
None
5000
421 - None
if ifs;
Select ifs such that Parent*(ifs,31)
None
5000
422 - None
stmt s;
Select s such that Parent(_,s)
None
5000
423 - None
stmt s;
Select s such that Parent*(_,s)
None
5000
424 - None
assign a;
Select a such that Parent(_,a)
None
5000
425 - None
assign a;
Select a such that Parent*(_,a)
None
5000
426 - None
call c;
Select c such that Parent(_,c)
None
5000
427 - None
call c;
Select c such that Parent*(_,c)
None
5000
428 - None
while w;
Select w such that Parent(_,w)
None
5000
429 - None
while w;
Select w such that Parent*(_,w)
None
5000
430 - None
if ifs;
Select ifs such that Parent(_,ifs)
None
5000
431 - None
if ifs;
Select ifs such that Parent*(_,ifs)
None
5000
432 - None
stmt s;
Select s such that Parent(18,s)
None
5000
433 - None
stmt s;
Select s such that Parent*(18,s)
None
5000
434 - None
assign a;
Select a such that Parent(18,a)
None
5000
435 - None
assign a;
Select a such that Parent*(18,a)
None
5000
436 - None
while w;
Select w such that Parent(18,w)
None
5000
437 - None
while w;
Select w such that Parent*(18,w)
None
5000
438 - None
if ifs;
Select ifs such that Parent(18,ifs)
None
5000
439 - None
if ifs;
Select ifs such that Parent*(18,ifs)
None
5000
440 - None
stmt s;
Select s such that Parent*(s,s)
none
5000
441 - None
stmt s1,s2;
Select s1 such that Parent(s1,s2)
None
5000
442 - None
stmt s1,s2;
Select s1 such that Parent*(s1,s2)
None
5000
443 - None
stmt s; assign a;
Select a such that Parent(a,s)
none
5000
444 - None
stmt s; assign a;
Select a such that Parent(s,a)
None
5000
445 - None
stmt s; assign a;
Select a such that Parent*(s,a)
None
5000
446 - None
stmt s; while w;
Select w such that Parent(s,w)
None
5000
447 - None
stmt s; while w;
Select w such that Parent*(s,w)
None
5000
448 - None
stmt s; while w;
Select s such that Parent(w,s)
None
5000
449 - None
stmt s; while w;
Select s such that Parent*(w,s)
None
5000
450 - None
stmt s; if ifs;
Select s such that Parent(ifs,s)
None
5000
451 - None
stmt s; if ifs;
Select s such that Parent*(ifs,s)
None
5000
452 - None
stmt s; if ifs;
Select ifs such that Parent(s,ifs)
None
5000
453 - None
stmt s; if ifs;
Select ifs such that Parent*(s,ifs)
None
5000
454 - None
while w1,w2;
Select w1 such that Parent(w1,w2)
None
5000
455 - None
while w1,w2;
Select w1 such that Parent*(w1,w2)
None
5000
456 - None
while w; assign a;
Select a such that Parent(w,a)
None
5000
457 - None
while w; assign a;
Select a such that Parent*(w,a)
None
5000
458 - None
while w; if ifs;
Select ifs such that Parent(w,ifs)
None
5000
459 - None
while w; if ifs;
Select ifs such that Parent*(w,ifs)
None
5000
460 - None
while w; if ifs;
Select ifs such that Parent(ifs,w)
None
5000
461 - None
while w; if ifs;
Select ifs such that Parent*(ifs,w)
None
5000
462 - None
if ifs1,ifs2;
Select ifs1 such that Parent(ifs1,ifs2)
None
5000
463 - None
if ifs1,ifs2;
Select ifs1 such that Parent*(ifs1,ifs2)
None
5000
464 - None
if ifs; assign a;
Select a such that Parent(ifs,a)
None
5000
465 - None
if ifs; assign a;
Select a such that Parent*(ifs,a)
None
5000
466 - None
stmt s; call c;
Select s such that Parent(s,c)
None
5000
467 - None
stmt s; call c;
Select s such that Parent*(s,c)
None
5000
468 - None
while w; call c;
Select c such that Parent(w,c)
None
5000
469 - None
while w; call c;
Select c such that Parent*(w,c)
None
5000
470 - None
if ifs; call c;
Select c such that Parent(ifs,c)
None
5000
471 - None
if ifs; call c;
Select c such that Parent*(ifs,c)
None
5000
472 - None
prog_line n; stmt s;
Select n such that Parent(s,n)
None
5000
473 - None
prog_line n; stmt s;
Select n such that Parent*(s,n)
None
5000
474 - None
prog_line n; while w;
Select n such that Parent(w,n)
None
5000
475 - None
prog_line n; while w;
Select n such that Parent*(w,n)
None
5000
476 - None
prog_line n; if ifs;
Select n such that Parent(ifs,n)
None
5000
477 - None
prog_line n; if ifs;
Select n such that Parent*(ifs,n)
None
5000
478 - None
prog_line n1,n2;
Select n1 such that Parent(n1,n2)
None
5000
479 - None
prog_line n1,n2;
Select n1 such that Parent*(n1,n2)
None
5000
480 - None
prog_line n; stmt s;
Select n such that Parent(n,s)
None
5000
481 - None
prog_line n; stmt s;
Select n such that Parent*(n,s)
None
5000
482 - None
prog_line n; assign a;
Select n such that Parent(n,a)
None
5000
483 - None
prog_line n; assign a;
Select n such that Parent*(n,a)
None
5000
484 - None
prog_line n; while w;
Select n such that Parent(n,w)
None
5000
485 - None
prog_line n; while w;
Select n such that Parent*(n,w)
None
5000
486 - None
prog_line n; call c;
Select n such that Parent(n,c)
None
5000
487 - None
prog_line n; call c;
Select n such that Parent*(n,c)
None
5000
488 - None
prog_line n; if ifs;
Select n such that Parent(n,ifs)
None
5000
489 - None
prog_line n; if ifs;
Select n such that Parent*(n,ifs)
None
5000
490 - parent pattern
stmt s; assign a;
Select s such that Parent(s,a) pattern a(_,_"okinawa"_)
None
5000
491 - parent pattern
stmt s; while w; variable v;
Select v such that Parent(w,s) pattern w(v,_)
None
5000
492 - parent pattern
if ifs1,ifs2;
Select ifs1 such that Parent*(ifs1,ifs2) pattern ifs2("osaka",_,_)
None
5000
493 - parent with
stmt s1,s2; while w;
Select s2 such that Parent*(s1,s2) with s1.stmt# = w.stmt#
None
5000
494 - parent with
stmt s1,s2; call c;
Select c such that Parent*(s2,s1) and Parent*(s2,c) with s2.stmt# = 368
None
5000
495 - 2 parent rel
assign a; while w; if ifs;
Select a such that Parent*(w,a) and Parent(ifs,a)
None
5000
496 - 2 parent rel
while w1,w2,w3;
Select w1 such that Parent(w1,w2) and Parent(w2,w3)
None
5000
497 - 2 parent rel
if ifs1,ifs2,ifs3;
Select ifs2 such that Parent(ifs1,ifs2) and Parent(ifs2,ifs3)
None
5000
498 - 2 parent rel
while w; call c; assign a;
Select c such that Parent(w,c) and Parent(w,a)
None
5000
499 - 2 parent rel
while w1,w2; if ifs;
Select ifs such that Parent(w1,ifs) and Parent(ifs,w2)
None
5000
500 - 2 parent rel
if ifs; while w; prog_line n;
Select n such that Parent*(ifs,n) and Parent(ifs,w)
None
5000
501 - 2 parent rel
assign a; while w; if ifs;
Select w such that Parent(ifs,w) and Parent(w,a)
None
5000
502 - 2 parent rel
stmt s; while w1,w2;
Select s such that Parent(w1,s) and Parent*(w1,w2)
None
5000
503 - 2 parent rel
assign a; while w1,w2;
Select a such that Parent*(w1,a) and Parent*(w2,w1)
None
5000
504 - 2 parent rel
stmt s; if ifs1,ifs2;
Select s such that Parent(ifs1,s) and Parent*(ifs1,ifs2)
None
5000
505 - 2 parent rel
assign a; if ifs1,ifs2;
Select a such that Parent*(ifs1,a) and Parent*(ifs2,ifs1)
None
5000
506 - 2 parent rel
while w1,w2; if ifs1,ifs2;
Select <w1,ifs1> such that Parent(w1,w2) and Parent(w2,ifs2) and Parent(ifs2,ifs1)
None
5000
507 - parent and modifies
stmt s1,s2; variable v;
Select s1 such that Parent(s1,s2) and Modifies(s2,v)
None
5000
508 - parentstar and modifies
stmt s1; variable v; if ifs;
Select ifs such that Parent*(s1,ifs) and Modifies(s1,v)
None
5000
509 - parent and uses
stmt s; while w; variable v;
Select s such that Parent(w,s) and Uses(s,v)
None
5000
510 - parentstar and uses
while w; call c; variable v;
Select v such that Parent*(w,c) and Uses(w,v)
None
5000
511 - parent and follows
if ifs; call c; assign a;
Select ifs such that Parent(ifs,c) and Follows(c,a)
None
5000
512 - parentstar and follows
while w1,w2; if ifs;
Select w1 such that Parent*(w1,w2) and Follows(ifs,w2)
None
5000
513 - parent and followstar
stmt s1,s2; if ifs;
Select s1 such that Parent(s1,s2) and Follows*(s1,ifs)
None
5000
514 - parentstar and followstar
while w; assign a; if ifs;
Select a such that Parent*(w,a) and Follows*(w,ifs)
None
5000
515 - parent and next
while w; assign a;
Select w such that Parent(w,a) and Next(w,a)
None
5000
516 - parent and nextstar
stmt s; call c;
Select s such that Parent(s,c) and Next*(c,c)
None
5000
517 - parentstar and next
while w1,w2; if ifs;
Select w2 such that Parent*(w1,ifs) and Next(ifs,w2)
None
5000
518 - parentstar and nextstar
if ifs1,ifs2;
Select ifs1 such that Parent*(ifs1,ifs2) and Next*(ifs1,ifs1)
None
5000
519 - parent and affects
while w; stmt s; assign a;
Select s such that Parent(w,s) and Affects(s,a)
None
5000
520 - parent and affectstar
stmt s1,s2,s3;
Select s1 such that Parent(s1,s2) and Affects*(s2,s3)
None
5000
521 - parentstar and affects
if ifs; assign a1,a2;
Select a2 such that Parent*(ifs,a1) and Affects(a1,a2)
None
5000
522 - parentstar and affectstar
while w; assign a; stmt s;
Select w such that Parent*(w,s) and Affects*(a,s)
None
5000
523 - parent multiple clauses
assign a1,a2; stmt s1,s2;
Select <s2,a2> such that Parent*(s1,s2) and Follows(a2,s2) and Follows*(a1,a2)
None
5000
524 - parent multiple clauses
while w; if ifs; variable v; constant c;
Select <w,ifs> such that Parent*(w,ifs) and Uses(ifs,v) pattern w(v,_) with ifs.stmt# = c.value
None
5000
525 - parent multiple clauses
assign a,a1; while w; call c; stmt s; variable v;
Select <a,w,c> such that Parent(s,c) and Follows*(w,c) pattern a(v,_) such that Next*(s,w) and Affects(a1,a)
None
5000
526 - follows test basic

Select BOOLEAN such that Follows(6,7)
true
5000
527 - follows test diff nest level

Select BOOLEAN such that Follows(7,8)
false
5000
528 - follows test after loop

Select BOOLEAN such that Follows(7,12)
true
5000
529 - direct follows test

Select BOOLEAN such that Follows(1,365)
false
5000
530 - indirect follows test

Select BOOLEAN such that Follows*(1,365)
true
5000
531 - not applicable to diff nesting level

Select BOOLEAN such that Follows*(1,252)
false
5000
532 - None

Select BOOLEAN such that Follows(7,_)
true
5000
533 - None

Select BOOLEAN such that Follows*(7,_)
true
5000
534 - None

Select BOOLEAN such that Follows(99,_)
false
5000
535 - None

Select BOOLEAN such that Follows*(99,_)
false
5000
536 - None

Select BOOLEAN such that Follows(_,7)
true
5000
537 - None

Select BOOLEAN such that Follows*(_,7)
true
5000
538 - None

Select BOOLEAN such that Follows(_,99)
false
5000
539 - None

Select BOOLEAN such that Follows*(_,99)
false
5000
540 - None

Select BOOLEAN such that Follows(_,_)
true
5000
541 - None

Select BOOLEAN such that Follows*(_,_)
true
5000
542 - None
stmt s;
Select s such that Follows(s,_)
None
5000
543 - None
stmt s;
Select s such that Follows*(s,_)
None
5000
544 - None
assign a;
Select a such that Follows(a,_)
None
5000
545 - None
assign a;
Select a such that Follows*(a,_)
None
5000
546 - None
while w;
Select w such that Follows(w,_)
None
5000
547 - None
while w;
Select w such that Follows*(w,_)
None
5000
548 - None
if ifs;
Select ifs such that Follows(ifs,_)
None
5000
549 - None
if ifs;
Select ifs such that Follows*(ifs,_)
None
5000
550 - None
stmt s;
Select s such that Follows(s,132)
None
5000
551 - None
stmt s;
Select s such that Follows*(s,132)
None
5000
552 - None
stmt s;
Select s such that Follows*(s,138)
None
5000
553 - None
assign a;
Select a such that Follows(a,133)
None
5000
554 - None
assign a;
Select a such that Follows*(a,133)
None
5000
555 - None
while w;
Select w such that Follows(w,139)
None
5000
556 - None
while w;
Select w such that Follows*(w,139)
None
5000
557 - None
if ifs;
Select ifs such that Follows(ifs,132)
None
5000
558 - None
if ifs;
Select ifs such that Follows*(ifs,132)
None
5000
559 - None
stmt s;
Select s such that Follows(_,s)
None
5000
560 - None
stmt s;
Select s such that Follows*(_,s)
None
5000
561 - None
assign a;
Select a such that Follows(_,a)
None
5000
562 - None
assign a;
Select a such that Follows*(_,a)
None
5000
563 - None
while w;
Select w such that Follows(_,w)
None
5000
564 - None
while w;
Select w such that Follows*(_,w)
None
5000
565 - None
if ifs;
Select ifs such that Follows(_,ifs)
None
5000
566 - None
if ifs;
Select ifs such that Follows*(_,ifs)
None
5000
567 - None
stmt s;
Select s such that Follows(132,s)
None
5000
568 - None
stmt s;
Select s such that Follows*(132,s)
None
5000
569 - None
assign a;
Select a such that Follows(132,a)
None
5000
570 - None
assign a;
Select a such that Follows*(132,a)
None
5000
571 - None
while w;
Select w such that Follows(133,w)
None
5000
572 - None
while w;
Select w such that Follows*(133,w)
None
5000
573 - None
if ifs;
Select ifs such that Follows(165,ifs)
None
5000
574 - None
if ifs;
Select ifs such that Follows*(165,ifs)
None
5000
575 - stmts cannot follow itself
stmt s;
Select s such that Follows(s,s)
none
5000
576 - stmts cannot follow itself
stmt s;
Select s such that Follows*(s,s)
none
5000
577 - None
stmt s1,s2;
Select s1 such that Follows(s1,s2)
None
5000
578 - None
stmt s1,s2;
Select s1 such that Follows*(s1,s2)
None
5000
579 - None
stmt s; assign a;
Select s such that Follows(s,a)
None
5000
580 - None
stmt s; assign a;
Select s such that Follows*(s,a)
None
5000
581 - None
stmt s; while w;
Select s such that Follows(s,w)
None
5000
582 - None
stmt s; while w;
Select s such that Follows*(s,w)
None
5000
583 - None
stmt s; call c;
Select s such that Follows(s,c)
None
5000
584 - None
stmt s; call c;
Select s such that Follows*(s,c)
None
5000
585 - None
stmt s; if ifs;
Select s such that Follows(s,ifs)
None
5000
586 - None
stmt s; if ifs;
Select s such that Follows*(s,ifs)
None
5000
587 - None
assign a1,a2;
Select a1 such that Follows(a1,a2)
None
5000
588 - None
assign a1,a2;
Select a1 such that Follows*(a1,a2)
None
5000
589 - None
assign a; stmt s;
Select a such that Follows(a,s)
None
5000
590 - None
assign a; stmt s;
Select a such that Follows*(a,s)
None
5000
591 - None
assign a; while w;
Select a such that Follows(a,w)
None
5000
592 - None
assign a; while w;
Select a such that Follows*(a,w)
None
5000
593 - None
assign a; call c;
Select a such that Follows(a,c)
None
5000
594 - None
assign a; call c;
Select a such that Follows*(a,c)
None
5000
595 - None
assign a; if ifs;
Select a such that Follows(a,ifs)
None
5000
596 - None
assign a; if ifs;
Select a such that Follows*(a,ifs)
None
5000
597 - None
while w1,w2;
Select w1 such that Follows(w1,w2)
None
5000
598 - None
while w1,w2;
Select w1 such that Follows*(w1,w2)
None
5000
599 - None
while w; stmt s;
Select w such that Follows(w,s)
None
5000
600 - None
while w; stmt s;
Select w such that Follows*(w,s)
None
5000
601 - None
while w; assign a;
Select w such that Follows(w,a)
None
5000
602 - None
while w; assign a;
Select w such that Follows*(w,a)
None
5000
603 - None
while w; call c;
Select w such that Follows(w,c)
None
5000
604 - None
while w; call c;
Select w such that Follows*(w,c)
None
5000
605 - None
while w; if ifs;
Select w such that Follows(w,ifs)
None
5000
606 - None
while w; if ifs;
Select w such that Follows*(w,ifs)
None
5000
607 - None
if ifs1,ifs2;
Select ifs1 such that Follows(ifs1,ifs2)
None
5000
608 - None
if ifs1,ifs2;
Select ifs1 such that Follows*(ifs1,ifs2)
None
5000
609 - None
if ifs; stmt s;
Select ifs such that Follows(ifs,s)
None
5000
610 - None
if ifs; stmt s;
Select ifs such that Follows*(ifs,s)
None
5000
611 - None
if ifs; assign a;
Select ifs such that Follows(ifs,a)
None
5000
612 - None
if ifs; assign a;
Select ifs such that Follows*(ifs,a)
None
5000
613 - None
if ifs; call c;
Select ifs such that Follows(ifs,c)
None
5000
614 - None
if ifs; call c;
Select ifs such that Follows*(ifs,c)
None
5000
615 - None
if ifs; while w;
Select ifs such that Follows(ifs,w)
None
5000
616 - None
if ifs; while w;
Select ifs such that Follows*(ifs,w)
None
5000
617 - None
call c1,c2;
Select c1 such that Follows(c1,c2)
None
5000
618 - None
call c1,c2;
Select c1 such that Follows*(c1,c2)
None
5000
619 - None
call c; stmt s;
Select c such that Follows(c,s)
None
5000
620 - None
call c; stmt s;
Select c such that Follows*(c,s)
None
5000
621 - None
call c; assign a;
Select c such that Follows(c,a)
None
5000
622 - None
call c; assign a;
Select c such that Follows*(c,a)
None
5000
623 - None
call c; assign w;
Select c such that Follows(c,w)
None
5000
624 - None
call c; assign w;
Select c such that Follows*(c,w)
None
5000
625 - None
call c; assign ifs;
Select c such that Follows(c,ifs)
None
5000
626 - None
call c; assign ifs;
Select c such that Follows*(c,ifs)
None
5000
627 - follows pattern
assign a; while w;
Select a such that Follows*(a,w) pattern a(_,_"tokyo"_)
None
5000
628 - follows pattern
assign a1,a2;
Select a2 such that Follows(a1,a2) pattern a1("shizuoka",_)
None
5000
629 - follows with
assign a; while w; constant c;
Select a such that Follows*(a,w) with w.stmt# = c.value
None
5000
630 - follows with
prog_line n1,n2; assign a;
Select n2 such that Follows(n1,n2) with n1 = a.stmt#
None
5000
631 - double follows
stmt s1,s2,s3;
Select s2 such that Follows(s1,s2) and Follows(s2,s3)
None
5000
632 - double follows
while w; assign a; if ifs;
Select w such that Follows*(w,a) and Follows(w,ifs)
None
5000
633 - double follows
call c1,c2; if ifs;
Select ifs such that Follows(c1,ifs) and Follows*(c1,c2)
None
5000
634 - double follows
assign a; while w; prog_line n;
Select a such that Follows*(a,n) and Follows*(w,n)
None
5000
635 - double follows
if ifs1,ifs2; while w;
Select ifs2 such that Follows*(ifs1,w) and Follows(ifs2,w) and Follows*(ifs1,ifs2)
None
5000
636 - follows and uses
stmt s1,s2;
Select s1 such that Follows(s1,s2) and Uses(s2,"tokyo")
None
5000
637 - followstar and uses
prog_line n; while w; variable v;
Select w such that Follows*(n,w) and Uses(n,v)
None
5000
638 - follows and modifies
if ifs1,ifs2; variable v;
Select v such that Follows(ifs1,ifs2) and Modifies(ifs1,v)
None
5000
639 - followstar and modifies
assign a; variable v; if ifs;
Select a such that Follows*(a,ifs) and Modifies(a,v)
None
5000
640 - follows and parents
stmt s; while w,w1;
Select s such that Follows(s,w) and Parent(w,w1)
None
5000
641 - follows and parentstar
while w1; assign a1,a2;
Select a2 such that Follows(a1,a2) and Parent*(w1,a1)
None
5000
642 - followstar and parents
call c; assign a; while w;
Select a such that Follows*(c,a) and Parent(w,c)
None
5000
643 - followstar and parentstar
if ifs; while w; assign a;
Select ifs such that Follows*(ifs,a) and Parent*(w,ifs)
None
5000
644 - follows and next
prog_line n; assign a; while w;
Select n such that Follows(a,n) and Next(n,w)
None
5000
645 - follows and nextstar
assign a; call c; while w;
Select w such that Follows(a,w) and Next*(c,a)
None
5000
646 - followstar and next
assign a; while w; stmt s;
Select s such that Follows*(s,w) and Next(w,a)
None
5000
647 - followstar and nextstar
while w1,w2;
Select w2 such that Follows*(w1,w2) and Next*(w2,w1)
None
5000
648 - follows and affects
while w; assign a1,a2;
Select w such that Follows(w,a1) and Affects(a2,a1)
None
5000
649 - follows and affectstar
if ifs; prog_line n; assign a;
Select a such that Follows(ifs,n) and Affects*(n,a)
None
5000
650 - followstar and affects
stmt s; prog_line n;
Select s such that Follows*(s,n) and Affects(s,s)
None
5000
651 - followstar and affectstar
stmt s; assign a; if ifs;
Select ifs such that Follows*(a,ifs) and Affects(a,s)
None
5000
652 - None
stmt s; prog_line n; while w;
Select w such that Follows*(w,s) and Affects*(s,n)
None
5000
653 - None
stmt s1,s2; while w; if ifs;
Select s2 such that Follows*(s1,s2) and Follows(w,s1) and Parent*(ifs,w)
None
5000
654 - None
while w; if ifs; variable v; assign a;
Select v such that Follows(a,ifs) pattern a(v,_) such that Next*(ifs,a) and Next*(a,w)
None
5000
655 - None
while w1,w2,w3; variable v; assign a; constant c;
Select v such that Follows*(w1,w2) pattern w2(v,_) with w1.stmt# = c.value such that Parent*(w3,w1) and Follows*(a,w3)
None
5000
656 - None
while w; stmt s1,s2; constant c; variable v; assign a;
Select <w,v> such that Follows(s1,s2) with s1.stmt# = c.value and s1.stmt# = a.stmt# such that Parent*(w,s2) pattern w(v,_)
None
5000
657 - calls return true

Select BOOLEAN such that Calls("Nihon","Japan")
true
5000
658 - calls return false

Select BOOLEAN such that Calls("Japan","Nihon")
false
5000
659 - callstar return true

Select BOOLEAN such that Calls*("Nihon","Japan")
true
5000
660 - callstar return false

Select BOOLEAN such that Calls*("Japan","Nihon")
false
5000
661 - indirect call test false

Select BOOLEAN such that Calls("Nihon","Ilbon")
false
5000
662 - indirect call test true

Select BOOLEAN such that Calls*("Nihon","Ilbon")
true
5000
663 - invalid arguments

Select BOOLEAN such that Calls(1,2)
false
5000
664 - invalid arguments

Select BOOLEAN such that Calls(1,"Japan")
false
5000
665 - calls ident,und return true

Select BOOLEAN such that Calls("Nihon",_)
true
5000
666 - callstar ident,und return true

Select BOOLEAN such that Calls*("Nihon",_)
true
5000
667 - calls ident,und return false

Select BOOLEAN such that Calls("Japan",_)
false
5000
668 - callstar ident,und return false

Select BOOLEAN such that Calls*("Japan",_)
false
5000
669 - calls und,ident return true

Select BOOLEAN such that Calls(_,"Japan")
true
5000
670 - callstar und,ident return true

Select BOOLEAN such that Calls*(_,"Japan")
true
5000
671 - calls und,ident return false

Select BOOLEAN such that Calls(_,"Nihon")
false
5000
672 - callstar und,ident return false

Select BOOLEAN such that Calls*(_,"Nihon")
false
5000
673 - calls und,und return true

Select BOOLEAN such that Calls(_,_)
None
5000
674 - callstar und,und return true

Select BOOLEAN such that Calls*(_,_)
None
5000
675 - calls ident,proc has result
procedure p;
Select p such that Calls("Nihon",p)
None
5000
676 - callstar ident,proc has result
procedure p;
Select p such that Calls*("Nihon",p)
None
5000
677 - calls ident,proc no result
procedure p;
Select p such that Calls("Japan",p)
none
5000
678 - no common syn return all proc
procedure p,p1;
Select p1 such that Calls("Nihon",p)
None
5000
679 - no common syn return none
procedure p,p1;
Select p1 such that Calls("Japan",p)
none
5000
680 - calls proc,und
procedure p;
Select p such that Calls(p,_)
None
5000
681 - callstar proc,und
procedure p;
Select p such that Calls*(p,_)
None
5000
682 - calls und,proc
procedure p;
Select p such that Calls(_,p)
None
5000
683 - callstar und,proc
procedure p;
Select p such that Calls*(_,p)
None
5000
684 - calls proc,proc select first
procedure p1,p2;
Select p1 such that Calls(p1,p2)
None
5000
685 - callstar proc,proc select first
procedure p1,p2;
Select p1 such that Calls*(p1,p2)
None
5000
686 - calls proc,proc select second
procedure p1,p2;
Select p2 such that Calls(p1,p2)
None
5000
687 - callstar proc,proc select second
procedure p1,p2;
Select p2 such that Calls*(p1,p2)
None
5000
688 - 2 calls
procedure p1,p2,p3;
Select p1 such that Calls(p1,p2) and Calls(p3,p1)
None
5000
689 - 2 calls
procedure p1,p2,p3;
Select p2 such that Calls*(p1,p2) and Calls(p1,p3)
None
5000
690 - 2 calls
procedure p1,p2,p3;
Select p3 such that Calls*(p1,p2) and Calls(p2,p3)
None
5000
691 - calls and modifies
procedure p1,p2; variable v;
Select p1 such that Calls(p1,p2) and Modifies(p1,v)
None
5000
692 - calls and uses
procedure p1,p2; variable v;
Select p2 such that Calls*(p1,p2) and Uses(p1,v)
None
5000
693 - calls with
procedure p1,p2; variable v;
Select p2 such that Calls*(p1,p2) and Uses(p1,v) with v.varName = p2.procName
None
5000
694 - calls modifies pattern
procedure p1,p2; variable v; while w;
Select w such that Calls(p1,p2) and Modifies(p1,v) pattern w(v,_)
None
5000
695 - calls complex query
variable v,v1; if ifs; procedure p1;
Select <v1,ifs> such that Calls*(p1,_) and Modifies(p1,v) and Uses(ifs,v) pattern ifs(v1,_,_)
None
5000
696 - calls complex query
assign a; while w; variable v; procedure p;
Select <a,w,v> such that Calls(_,p) and Uses(p,v) pattern a(v,_) such that Parent*(w,a)
None
5000
697 - next boolean has next

Select BOOLEAN such that Next(143,144)
true
5000
698 - next boolean has no next

Select BOOLEAN such that Next(103,104)
false
5000
699 - next boolean check while wrapping

Select BOOLEAN such that Next(149,145)
true
5000
700 - next boolean check if

Select BOOLEAN such that Next(99,132)
true
5000
701 - next boolean true if only one node away

Select BOOLEAN such that Next(73,88)
false
5000
702 - nextstar boolean

Select BOOLEAN such that Next*(73,88)
true
5000
703 - nextstar boolean

Select BOOLEAN such that Next*(1,365)
true
5000
None - nextstar different proc

Select BOOLEAN such that Next*(1,495)
false
5000
704 - nextstar no cfg path

Select BOOLEAN such that Next*(99,130)
false
5000
705 - nextstar test while loop

Select BOOLEAN such that Next*(144,144)
true
5000
706 - nextstar test while loop

Select BOOLEAN such that Next*(155,139)
true
5000
707 - next int und return true

Select BOOLEAN such that Next(1,_)
true
5000
708 - nextstar int und return true

Select BOOLEAN such that Next*(1,_)
true
5000
709 - nextstar int und return false

Select BOOLEAN such that Next*(365,_)
false
5000
710 - next und int return true

Select BOOLEAN such that Next(_,365)
true
5000
711 - nextstar und int return true

Select BOOLEAN such that Next*(_,365)
true
5000
712 - next und int return false

Select BOOLEAN such that Next(_,1)
false
5000
713 - nextstar und int return false

Select BOOLEAN such that Next*(_,1)
false
5000
714 - next und und return true

Select BOOLEAN such that Next(_,_)
true
5000
715 - nextstar und und return true

Select BOOLEAN such that Next*(_,_)
true
5000
716 - None
stmt s;
Select s such that Next(s,_)
None
5000
717 - None
stmt s;
Select s such that Next*(s,_)
None
5000
718 - None
assign a;
Select a such that Next(a,_)
None
5000
719 - None
assign a;
Select a such that Next*(a,_)
None
5000
720 - None
while w;
Select w such that Next(w,_)
None
5000
721 - None
while w;
Select w such that Next*(w,_)
None
5000
722 - None
call c;
Select c such that Next(c,_)
None
5000
723 - None
call c;
Select c such that Next*(c,_)
None
5000
724 - None
if ifs;
Select ifs such that Next(ifs,_)
None
5000
725 - None
if ifs;
Select ifs such that Next*(ifs,_)
None
5000
726 - None
stmt s;
Select s such that Next(s,144)
None
5000
727 - None
stmt s;
Select s such that Next*(s,144)
None
5000
728 - None
assign a;
Select a such that Next(a,144)
None
5000
729 - None
assign a;
Select a such that Next*(a,144)
None
5000
730 - None
while w;
Select w such that Next(w,143)
None
5000
731 - None
while w;
Select w such that Next*(w,143)
None
5000
732 - None
if ifs;
Select ifs such that Next(ifs,167)
None
5000
733 - None
if ifs;
Select ifs such that Next*(ifs,167)
None
5000
734 - None
stmt s;
Select s such that Next(_,s)
None
5000
735 - None
stmt s;
Select s such that Next*(_,s)
None
5000
736 - None
assign a;
Select a such that Next(_,a)
None
5000
737 - None
assign a;
Select a such that Next*(_,a)
None
5000
738 - None
while w;
Select w such that Next(_,w)
None
5000
739 - None
while w;
Select w such that Next*(_,w)
None
5000
740 - None
call c;
Select c such that Next(_,c)
None
5000
741 - None
call c;
Select c such that Next*(_,c)
None
5000
742 - None
if ifs;
Select ifs such that Next(_,ifs)
None
5000
743 - None
if ifs;
Select ifs such that Next*(_,ifs)
None
5000
744 - None
stmt s;
Select s such that Next(144,s)
None
5000
745 - None
stmt s;
Select s such that Next*(144,s)
None
5000
746 - None
stmt s;
Select s such that Next*(377,s)
None
5000
747 - None
assign a;
Select a such that Next(146,a)
None
5000
748 - None
assign a;
Select a such that Next*(146,a)
None
5000
749 - None
while w;
Select w such that Next(168,w)
None
5000
750 - None
while w;
Select w such that Next*(168,w)
None
5000
751 - None
if ifs;
Select ifs such that Next(165,ifs)
None
5000
752 - None
if ifs;
Select ifs such that Next*(165,ifs)
None
5000
753 - None
stmt s;
Select s such that Next(s,s)
none
5000
754 - None
stmt s;
Select s such that Next*(s,s)
None
5000
755 - None
stmt s1,s2;
Select s1 such that Next(s1,s2)
None
5000
756 - None
stmt s1,s2;
Select s1 such that Next*(s1,s2)
None
5000
757 - None
stmt s; assign a;
Select s such that Next(s,a)
None
5000
758 - None
stmt s; assign a;
Select s such that Next*(s,a)
None
5000
759 - None
stmt s; while w;
Select s such that Next(s,w)
None
5000
760 - None
stmt s; while w;
Select s such that Next*(s,w)
None
5000
761 - None
stmt s; call c;
Select s such that Next(s,c)
None
5000
762 - None
stmt s; call c;
Select s such that Next*(s,c)
None
5000
763 - None
stmt s; prog_line n;
Select s such that Next(s,n)
None
5000
764 - None
stmt s; prog_line n;
Select s such that Next*(s,n)
None
5000
765 - None
stmt s; if ifs;
Select s such that Next(s,ifs)
None
5000
766 - None
stmt s; if ifs;
Select s such that Next*(s,ifs)
None
5000
767 - None
assign a;
Select a such that Next*(a,a)
None
5000
768 - None
assign a1,a2;
Select a1 such that Next(a1,a2)
None
5000
769 - None
assign a1,a2;
Select a1 such that Next*(a1,a2)
None
5000
770 - None
assign a; stmt s;
Select a such that Next(a,s)
None
5000
771 - None
assign a; stmt s;
Select a such that Next*(a,s)
None
5000
772 - None
assign a; while w;
Select a such that Next(a,w)
None
5000
773 - None
assign a; while w;
Select a such that Next*(a,w)
None
5000
774 - None
assign a; call c;
Select a such that Next(a,c)
None
5000
775 - None
assign a; call c;
Select a such that Next*(a,c)
None
5000
776 - None
assign a; prog_line n;
Select a such that Next(a,n)
None
5000
777 - None
assign a; prog_line n;
Select a such that Next*(a,n)
None
5000
778 - None
assign a; if ifs;
Select a such that Next(a,ifs)
None
5000
779 - None
assign a; if ifs;
Select a such that Next*(a,ifs)
None
5000
780 - None
while w;
Select w such that Next*(w,w)
None
5000
781 - None
while w1,w2;
Select w1 such that Next(w1,w2)
None
5000
782 - None
while w1,w2;
Select w1 such that Next*(w1,w2)
None
5000
783 - None
while w; stmt s;
Select w such that Next(w,s)
None
5000
784 - None
while w; stmt s;
Select w such that Next*(w,s)
None
5000
785 - None
while w; assign a;
Select w such that Next(w,a)
None
5000
786 - None
while w; assign a;
Select w such that Next*(w,a)
None
5000
787 - None
while w; call c;
Select w such that Next(w,c)
None
5000
788 - None
while w; call c;
Select w such that Next*(w,c)
None
5000
789 - None
while w; prog_line n;
Select w such that Next(w,n)
None
5000
790 - None
while w; prog_line n;
Select w such that Next*(w,n)
None
5000
791 - None
while w; if ifs;
Select w such that Next(w,ifs)
None
5000
792 - None
while w; if ifs;
Select w such that Next*(w,ifs)
None
5000
793 - None
if ifs;
Select ifs such that Next*(ifs,ifs)
None
5000
794 - None
if ifs1,ifs2;
Select ifs1 such that Next(ifs1,ifs2)
None
5000
795 - None
if ifs1,ifs2;
Select ifs1 such that Next*(ifs1,ifs2)
None
5000
796 - None
if ifs; stmt s;
Select ifs such that Next(ifs,s)
None
5000
797 - None
if ifs; stmt s;
Select ifs such that Next*(ifs,s)
None
5000
798 - None
if ifs; assign a;
Select ifs such that Next(ifs,a)
None
5000
799 - None
if ifs; assign a;
Select ifs such that Next*(ifs,a)
None
5000
800 - None
if ifs; while w;
Select ifs such that Next(ifs,w)
None
5000
801 - None
if ifs; while w;
Select ifs such that Next*(ifs,w)
None
5000
802 - None
if ifs; prog_line n;
Select ifs such that Next(ifs,n)
None
5000
803 - None
if ifs; prog_line n;
Select ifs such that Next*(ifs,n)
None
5000
804 - None
if ifs; call c;
Select ifs such that Next(ifs,c)
None
5000
805 - None
if ifs; call c;
Select ifs such that Next*(ifs,c)
None
5000
806 - None
call c;
Select c such that Next*(c,c)
None
5000
807 - None
call c1,c2;
Select c1 such that Next(c1,c2)
None
5000
808 - None
call c1,c2;
Select c1 such that Next*(c1,c2)
None
5000
809 - None
call c; stmt s;
Select c such that Next(c,s)
None
5000
810 - None
call c; stmt s;
Select c such that Next*(c,s)
None
5000
811 - None
call c; assign a;
Select c such that Next(c,a)
None
5000
812 - None
call c; assign a;
Select c such that Next*(c,a)
None
5000
813 - None
call c; while w;
Select c such that Next(c,w)
None
5000
814 - None
call c; while w;
Select c such that Next*(c,w)
None
5000
815 - None
call c; prog_line n;
Select c such that Next(c,n)
None
5000
816 - None
call c; prog_line n;
Select c such that Next*(c,n)
None
5000
817 - None
call c; if ifs;
Select c such that Next(c,ifs)
None
5000
818 - None
call c; if ifs;
Select c such that Next*(c,ifs)
None
5000
819 - None
prog_line n;
Select n such that Next*(n,n)
None
5000
820 - None
prog_line n1,n2;
Select n1 such that Next(n1,n2)
None
5000
821 - None
prog_line n1,n2;
Select n1 such that Next*(n1,n2)
None
5000
822 - None
prog_line n; stmt s;
Select n such that Next(n,s)
None
5000
823 - None
prog_line n; stmt s;
Select n such that Next*(n,s)
None
5000
824 - None
prog_line n; assign a;
Select n such that Next(n,a)
None
5000
825 - None
prog_line n; assign a;
Select n such that Next*(n,a)
None
5000
826 - None
prog_line n; while w;
Select n such that Next(n,w)
None
5000
827 - None
prog_line n; while w;
Select n such that Next*(n,w)
None
5000
828 - None
prog_line n; if ifs;
Select n such that Next(n,ifs)
None
5000
829 - None
prog_line n; if ifs;
Select n such that Next*(n,ifs)
None
5000
830 - None
assign a1,a2;
Select a2 such that Next(a1,a2) pattern a1(_,_"saitama"_)
None
5000
831 - None
while w; variable v; assign a;
Select v such that Next*(a,w) pattern a(v,_"saitama"_)
None
5000
832 - None
assign a; stmt s; call c;
Select s such that Next(s,a) with a.stmt# = c.value
None
5000
833 - None
prog_line n; while w; if ifs;
Select w such that Next*(w,ifs) with ifs.stmt# = n
None
5000
834 - None
stmt s1,s2,s3;
Select s3 such that Next(s1,s3) and Next(s3,s2)
None
5000
835 - None
assign a; while w; if ifs;
Select w such that Next(a,w) and Next*(w,ifs)
None
5000
836 - None
prog_line n; if ifs; assign a;
Select n such that Next*(n,ifs) and Next(a,ifs)
None
5000
837 - None
prog_line n; if ifs;
Select n such that Next*(n,ifs) and Next*(ifs,ifs)
None
5000
838 - next and uses
stmt s1,s2; variable v;
Select v such that Next(s1,s2) and Uses(s2,v)
None
5000
839 - nextstar and uses
assign a1,a2; variable v;
Select v such that Next*(a1,a2) and Uses(a1,v)
None
5000
840 - next and modifies
stmt s; while w; variable v;
Select s such that Next(s,w) and Modifies(w,v)
None
5000
841 - nextstar and modifies
assign a; if ifs; variable v;
Select ifs such that Next*(a,ifs) and Modifies(ifs,v)
None
5000
842 - next and parent
while w1,w2,w3;
Select w2 such that Next(w1,w2) and Parent(w2,w3)
None
5000
843 - next and parentstar
while w1,w2; if ifs;
Select w2 such that Next(w1,w2) and Parent*(w1,ifs)
None
5000
844 - nextstar and parent
prog_line n; while w;
Select n such that Next*(n,n) and Parent(w,n)
None
5000
845 - nextstar and parentstar
assign a; while w; if ifs;
Select a such that Next*(a,w) and Parent*(ifs,w)
None
5000
846 - next and follows
while w; stmt s; assign a;
Select w such that Next(s,w) and Follows(a,w)
None
5000
847 - next and followstar
stmt s; while w; assign a;
Select a such that Next(s,w) and Follows*(a,w)
None
5000
848 - nextstar and follows
if ifs1,ifs2; while w;
Select ifs2 such that Next*(ifs1,ifs2) and Follows(ifs1,w)
None
5000
849 - nextstar and followstar
if ifs1,ifs2,ifs3;
Select ifs3 such that Next*(ifs1,ifs2) and Follows*(ifs1,ifs3)
None
5000
850 - next and affects
while w; assign a1,a2;
Select a2 such that Next(w,a2) and Affects(a1,a2)
None
5000
851 - nextstar and affects
assign a; prog_line n;
Select a such that Next*(n,n) and Affects(a,n)
None
5000
852 - next and affectstar
assign a,a1; while w1;
Select w1 such that Next(w1,a) and Affects*(a,a1)
None
5000
853 - nextstar and affectstar
stmt s1,s2,s3;
Select s2 such that Next*(s1,s2) and Affects*(s2,s3)
None
5000
854 - next complex query
while w; variable v; if ifs;
Select <w,v> such that Next*(ifs,ifs) and Parent(w,ifs) pattern w(v,_)
None
5000
855 - next complex query
assign a; call cl; while w; if ifs;
Select a such that Next(a,cl) and Follows*(w,cl) and Parent*(w,ifs) with a.stmt# = c.value
None
5000
856 - next complex query
procedure p; variable v; if ifs; while w; stmt s;
Select <w,v,p> such that Next*(w,s) and Follows*(ifs,s) pattern ifs(v,_) such that Modifies(p,v)
None
5000
857 - affects returns true

Select BOOLEAN such that Affects(1,365)
true
5000
858 - affects returns false due to var being modified in the path

Select BOOLEAN such that Affects(2,12)
false
5000
859 - affects returns false due to no ctrl flow path

Select BOOLEAN such that Affects(64,75)
false
5000
860 - affects returns true while loop

Select BOOLEAN such that Affects(22,21)
true
5000
861 - affects returns false while loop

Select BOOLEAN such that Affects(354,351)
false
5000
862 - affects returns false modified in calls

Select BOOLEAN such that Affects(454,456)
false
5000
863 - affects returns false due to var not being modified

Select BOOLEAN such that Affects(4,11)
false
5000
864 - affectstar returns true

Select BOOLEAN such that Affects*(4,11)
true
5000
865 - affectstar returns false

Select BOOLEAN such that Affects*(2,11)
false
5000
866 - affects int und return true

Select BOOLEAN such that Affects(1,_)
true
5000
867 - affects int und return false

Select BOOLEAN such that Affects(2,_)
false
5000
868 - affectstar int und return true

Select BOOLEAN such that Affects*(1,_)
true
5000
869 - affectstar int und return false

Select BOOLEAN such that Affects*(2,_)
false
5000
870 - affects und int return true

Select BOOLEAN such that Affects(_,11)
true
5000
871 - affects und int return false

Select BOOLEAN such that Affects(_,8)
false
5000
872 - affectstar und int return true

Select BOOLEAN such that Affects*(_,11)
true
5000
873 - affectstar und int return false

Select BOOLEAN such that Affects*(_,8)
false
5000
874 - affects und und return true

Select BOOLEAN such that Affects(_,_)
true
5000
875 - affectstar und und return true

Select BOOLEAN such that Affects*(_,_)
true
5000
876 - None
stmt s;
Select s such that Affects(s,_)
None
5000
877 - None
stmt s;
Select s such that Affects*(s,_)
None
5000
878 - None
assign a;
Select a such that Affects(a,_)
None
5000
879 - None
assign a;
Select a such that Affects*(a,_)
None
5000
880 - None
prog_line n;
Select n such that Affects(n,_)
None
5000
881 - None
prog_line n;
Select n such that Affects*(n,_)
None
5000
882 - affects does not take while
while w;
Select w such that Affects(w,_)
none
5000
883 - affects does not take ifs
if ifs;
Select w such that Affects(ifs,_)
none
5000
884 - affects does not take proc
procedure p;
Select p such that Affects(p,_)
none
5000
885 - None
stmt s;
Select s such that Affects(s,78)
None
5000
886 - None
stmt s;
Select s such that Affects*(s,78)
None
5000
887 - None
assign a;
Select a such that Affects(a,78)
None
5000
888 - None
assign a;
Select a such that Affects*(a,78)
None
5000
889 - None
prog_line n;
Select n such that Affects(n,78)
None
5000
890 - None
prog_line n;
Select n such that Affects*(n,78)
None
5000
891 - None
prog_line n;
Select n such that Affects*(n,442)
None
5000
892 - None
stmt s;
Select s such that Affects(_,s)
None
5000
893 - None
stmt s;
Select s such that Affects*(_,s)
None
5000
894 - None
assign a;
Select a such that Affects(_,a)
None
5000
895 - None
assign a;
Select a such that Affects*(_,a)
None
5000
896 - None
prog_line n;
Select n such that Affects(_,n)
None
5000
897 - None
prog_line n;
Select n such that Affects*(_,n)
None
5000
898 - affects does not take while
while w;
Select w such that Affects(_,w)
none
5000
899 - affects does not take ifs
if ifs;
Select ifs such that Affects(_,ifs)
none
5000
900 - affects does not take proc
procedure p;
Select p such that Affects(_,p)
none
5000
901 - None
stmt s;
Select s such that Affects(66,s)
None
5000
902 - None
stmt s;
Select s such that Affects*(66,s)
None
5000
903 - None
assign a;
Select a such that Affects(66,a)
None
5000
904 - None
assign a;
Select a such that Affects*(66,a)
None
5000
905 - None
prog_line n;
Select n such that Affects(66,n)
None
5000
906 - None
prog_line n;
Select n such that Affects*(66,n)
None
5000
907 - None
assign a;
Select a such that Affects*(459,a)
None
5000
908 - None
stmt s;
Select s such that Affects(s,s)
None
5000
909 - None
stmt s;
Select s such that Affects*(s,s)
None
5000
910 - None
assign a;
Select a such that Affects(a,a)
None
5000
911 - None
assign a;
Select a such that Affects*(a,a)
None
5000
912 - None
prog_line n;
Select n such that Affects(n,n)
None
5000
913 - None
prog_line n;
Select n such that Affects*(n,n)
None
5000
914 - None
stmt s1,s2;
Select s1 such that Affects(s1,s2)
None
5000
915 - None
stmt s1,s2;
Select s1 such that Affects*(s1,s2)
None
5000
916 - None
assign a1,a2;
Select a1 such that Affects(a1,a2)
None
5000
917 - None
assign a1,a2;
Select a1 such that Affects*(a1,a2)
None
5000
918 - None
prog_line n1,n2;
Select n1 such that Affects(n1,n2)
None
5000
919 - None
prog_line n1,n2;
Select n1 such that Affects*(n1,n2)
None
5000
920 - None
stmt s; assign a;
Select s such that Affects(s,a)
None
5000
921 - None
stmt s; assign a;
Select s such that Affects*(s,a)
None
5000
922 - None
stmt s; assign a;
Select s such that Affects(a,s)
None
5000
923 - None
stmt s; assign a;
Select s such that Affects*(a,s)
None
5000
924 - None
prog_line n; stmt s;
Select n such that Affects(s,n)
None
5000
925 - None
prog_line n; stmt s;
Select n such that Affects*(s,n)
None
5000
926 - None
prog_line n; stmt s;
Select n such that Affects(n,s)
None
5000
927 - None
prog_line n; stmt s;
Select n such that Affects*(n,s)
None
5000
928 - None
prog_line n; assign a;
Select a such that Affects(a,n)
None
5000
929 - None
prog_line n; assign a;
Select a such that Affects*(a,n)
None
5000
930 - None
prog_line n; assign a;
Select a such that Affects(n,a)
None
5000
931 - None
prog_line n; assign a;
Select a such that Affects*(n,a)
None
5000
932 - affects pattern
assign a1,a2; variable v;
Select v such that Affects(a1,a2) pattern a1(v,_)
None
5000
933 - affectstar pattern
assign a1,a2; variable v;
Select v such that Affects*(a1,a2) pattern a2(v,_)
None
5000
934 - None
assign a1,a2; constant c;
Select a1 such that Affects(a1,a2) with a2.stmt# = c.value
None
5000
935 - affects and modifies
assign a1,a2; variable v;
Select v such that Affects(a1,a2) and Modifies(a2,v)
None
5000
936 - affectstar and modifies
assign a1,a2; variable v;
Select v such that Affects*(a1,a2) and Modifies(a1,v)
None
5000
937 - affectstar and uses
assign a; prog_line n; variable v;
Select n such that Affects*(n,a) and Uses(n,v)
None
5000
938 - affects and uses
stmt s; prog_line n; variable v;
Select v such that Affects(s,n) and Uses(s,v)
None
5000
939 - affects and parent
stmt s; while w;
Select w such that Affects(s,s) and Parent(w,s)
None
5000
940 - affectstar and parent
stmt s; if ifs;
Select ifs such that Affects*(s,s) and Parent(ifs,s)
None
5000
941 - affectstar and parent
while w; stmt s1,s2;
Select s2 such that Affects*(s1,s2) and Parent(w,s1)
None
5000
942 - affectstar and parentstar
if ifs; stmt s1,s2;
Select ifs such that Affects*(s1,s2) and Parent*(ifs,s1)
None
5000
943 - affects and follows
assign a1,a2;
Select a1 such that Affects(a1,a1) and Follows(a1,a2)
None
5000
944 - affects and followstar
assign a1; while w;
Select w such that Affects(a1,a1) and Follows*(a1,w)
None
5000
945 - affectstar and follows
assign a1,a2; call c;
Select a2 such that Affects*(a1,a2) and Follows(c,a1)
None
5000
946 - affectstar and followstar
assign a1,a2; call c;
Select c such that Affects*(a1,a2) and Follows*(a2,c)
None
5000
947 - affects and next
assign a; stmt s; while w;
Select a such that Affects(a,s) and Next(s,w)
None
5000
948 - affectstar and next
assign a1,a2; call c;
Select a2 such that Affects*(a1,a2) and Next(a1,c)
None
5000
949 - affects and nextstar
assign a1,a2; while w;
Select w such that Affects(a1,a2) and Next*(w,a1)
None
5000
950 - affectstar and nextstar
if ifs; stmt s1,s2;
Select ifs such that Affects*(s1,s2) and Next*(s1,ifs)
None
5000
951 - 1 cmn syn
assign a1,a2; variable v; while w;
Select a2 such that Next(a1,a2) and Modifies(a1,v) such that Parent(w,a1)
None
5000
952 - 1 cmn syn
while w1,w2; variable v; assign a;
Select w2 such that Next(w1,w2) and Uses(w1,v) such that Follows*(a,w1)
None
5000
953 - 1 cmn syn + 0 cmn syn
variable v1; stmt s1,s2,s3; while w;
Select <v1,s3> such that Uses(s1,v1) and Parent*(w,s2) pattern w("tokyo",_) such that Follows(w,s3)
None
5000
954 - 1 cmn syn + 1 cmn syn
assign a1,a2; while w1,w2; if ifs; constant c;
Select w1 such that Affects*(a1,a2) and Next(w1,ifs) with w1.stmt# = c.value such that Parent*(w2,a1) pattern a1(_,_"osaka"_)
None
5000
955 - 1 cmn syn + 1 cmn syn + 1 cmn syn
stmt s1,s2,s3,s4; while w; assign a1,a2; if ifs; variable v1,v2;
Select <a2,s2,w> pattern a1(v1,_) such that Affects(a2,s1) and Parent*(s2,s3) pattern a2(v1,_) such that Parent(w,ifs) and Follows*(s2,s4) pattern ifs(v2,_,_)
None
5000
956 - 2 cmn syn
if i1,i2; assign a; variable v;
Select i1 such that Parent(i1,i2) and Parent(i2,a) pattern a(v,_)
None
5000
957 - 2 cmn syn
while w1,w2; variable v1,v2;
Select w2 such that Next(w2,w1) such that Modifies(w1,v1) pattern w2(v2,_)
None
5000
958 - 2 cmn syn + 1 cmn syn
assign a; variable v,v1,v2; stmt s1; while w; procedure p;
Select <a,v> pattern a(_,_"saitama"_) such that Parent(w,a) and Uses(s1,v1) with v1.varName = p.procName such that Modifies(a,v)
None
5000
959 - 2 cmn syn + 1 cmn syn
stmt s1,s2; assign a1,a2; variable v1,v2; constant c;
Select <s1,a1> such that Modifies(s1,v1) and Parent(s1,s2) and Affects(s2,a2) pattern a1(v2,_) with a1.stmt# = c.value
None
5000
960 - 2 cmn syn + 2 cmn syn
stmt s1,s2,s3,s4; while w1; constant c;
Select s1 such that Follows(s1,s2) and Follows(s2,s3) and Uses(s4,"hiroshima") with s4.stmt# = c.value such that Parent(w1,s1)
None
5000
961 - 2 cmn syn + 1 cmn syn + 1 cmn syn
assign a1,a2,a3,a4; stmt s; call cl; if ifs; while w;
Select ifs such that Next*(a1,a2) and Affects(a2,a3) with a3.stmt#=s.stmt# such that Parent(w,a4) pattern a4(_,_"tokyo"_) such that Follows*(ifs,cl) and Uses(cl,v) with v.varName = p.procName
None
5000
962 - 3 cmn syn
assign a1,a2; stmt s1; variable v1,v2;
Select s1 such that Affects(a1,a2) and Follows*(s1,a2) and Modifies(a1,v1) pattern a2(v2,_)
None
5000
963 - 3 cmn syn
stmt s1,s2; assign a1,a2,a3; variable v;
Select <s1,v,a3> pattern a1(v,_) such that Next(s1,s2) such that Affects*(s1,a3) and Follows(a3,a2) such that Next(a2,a1)
None
5000
964 - 4 tuples
while w1,w2; if ifs; constant c; assign a1,a2;
Select <w1,w2,a1,a2> such that Affects*(a1,a2) such that Next(w1,ifs) with w1.stmt# = c.value such that Parent*(w2,a1) pattern a1(_,_"osaka"_)
None
5000
965 - 5 tuples
stmt s; assign a; while w; if ifs; variable v;
Select <s,a,w,ifs,v> with s.stmt# = c.value pattern a(_,_"saitama"_) such that Follows*(a,w) and Parent(w,a) and Parent*(ifs,w) pattern w(v,_)
None
5000
966 - clause reordering test
assign a1,a2; while w1,w2; if ifs; constant c;
Select w1 such that Affects*(a1,a2) such that Next(w1,ifs) with w1.stmt# = c.value such that Parent*(w2,a1) pattern a1(_,_"osaka"_)
None
5000
967 - clause reordering test
assign a1,a2; while w1,w2; if ifs; constant c;
Select w1 pattern a1(_,_"osaka"_) such that Affects*(a1,a2) and Next(w1,ifs) with w1.stmt# = c.value such that Parent*(w2,a1)
None
5000
968 - clause reordering test
assign a1,a2; while w1,w2; if ifs; constant c;
Select w1 such that Next(w1,ifs) pattern a1(_,_"osaka"_) such that Affects*(a1,a2) with w1.stmt# = c.value such that Parent*(w2,a1)
None
5000
969 - clause reordering test
assign a1,a2; while w1,w2; if ifs; constant c;
Select w1 such that Parent*(w2,a1) and Next(w1,ifs) pattern a1(_,_"osaka"_) such that Affects*(a1,a2) with w1.stmt# = c.value
None
5000
970 - clause reordering test
assign a1,a2; while w1,w2; if ifs; constant c;
Select w1 with w1.stmt# = c.value such that Parent*(w2,a1) and Next(w1,ifs) pattern a1(_,_"osaka"_) such that Affects*(a1,a2)
None
5000
971 - clause reordering test
assign a1,a2; while w1,w2; if ifs; constant c;
Select w1 with w1.stmt# = c.value pattern a1(_,_"osaka"_) such that Parent*(w2,a1) and Next(w1,ifs) and Affects*(a1,a2)
None
5000
972 - intra group clause reordering test
stmt s1,s2,s3,s4; while w1; constant c;
Select s1 such that Follows(s1,s2) such that Follows(s2,s3) and Uses(s4,"hiroshima") with s4.stmt# = c.value such that Parent(w1,s1)
None
5000
973 - intra group clause reordering test
stmt s1,s2,s3,s4; while w1; constant c;
Select s1 such that Follows(s2,s3) such that Follows(s1,s2) with s4.stmt# = c.value such that Uses(s4,"hiroshima") such that Parent(w1,s1)
None
5000
974 - intra group clause reordering test
stmt s1,s2,s3,s4; while w1; constant c;
Select s1 such that Parent(w1,s1) such that Follows(s2,s3) such that Uses(s4,"hiroshima") with s4.stmt# = c.value such that Follows(s1,s2)
None
5000
975 - simple evaluation under stress
stmt s1,s2,s3,s4,s5,s6;
Select s1 such that Next*(s1,s2) and Next*(s2,s3) and Next*(s3,s4) and Next*(s4,s5) and Next*(s5,s6) with s1.stmt# = 15
15
5000
976 - simple evaluation under stress
stmt s,s1,s2,s3,s4,s5,s6;
Select s such that Next*(s1,s2) and Next*(s2,s3) and Next*(s3,s4) and Next*(s4,s5) and Next*(s5,s6) and Modifies(s,"tokyo")
None
5000
977 - complex evaluation under stress
stmt s,s1,s2,s3,s4,s5,s6; assign a; variable v; while w;
Select <w,v,v1> such that Next*(s1,s2) and Next*(s2,s3) and Next*(s3,s4) and Next*(s4,s5) and Next*(s5,s6) pattern w(v,_) such that Uses(w,v1)
None
5000
978 - next 1 tuple
stmt s1,s2,s3,s4,s5,s6;
Select <s1> such that Next(s1,s2) and Next(s2,s3) and Next(s3,s4) and Next(s4,s5) and Next(s5,s6) 
None
5000
979 - next 2 tuple
stmt s1,s2,s3,s4,s5,s6;
Select <s1,s2> such that Next(s1,s2) and Next(s2,s3) and Next(s3,s4) and Next(s4,s5) and Next(s5,s6) 
None
5000
980 - next 3 tuple
stmt s1,s2,s3,s4,s5,s6;
Select <s1,s2,s3> such that Next(s1,s2) and Next(s2,s3) and Next(s3,s4) and Next(s4,s5) and Next(s5,s6) 
None
5000
981 - next 4 tuple
stmt s1,s2,s3,s4,s5,s6;
Select <s1,s2,s3,s4> such that Next(s1,s2) and Next(s2,s3) and Next(s3,s4) and Next(s4,s5) and Next(s5,s6) 
None
5000
982 - next 5 tuple
stmt s1,s2,s3,s4,s5,s6;
Select <s1,s2,s3,s4,s5> such that Next(s1,s2) and Next(s2,s3) and Next(s3,s4) and Next(s4,s5) and Next(s5,s6) 
None
5000
983 - next 6 tuple
stmt s1,s2,s3,s4,s5,s6;
Select <s1,s2,s3,s4,s5,s6> such that Next(s1,s2) and Next(s2,s3) and Next(s3,s4) and Next(s4,s5) and Next(s5,s6) 
None
5000
984 - test cartesian product
stmt s1,s2,s3,s4,s5,s6;
Select s1 such that Next(s1,s2) and Next(s3,s4) and Next(s5,s6)
None
5000
985 - test cartesian product
stmt s1,s2,s3,s4,s5,s6,s7,s8;
Select s1 such that Next(s1,s2) and Next(s3,s4) and Next(s5,s6) and Next(s7,s8)
None
5000
986 - test cartesian product
stmt s1,s2,s3,s4,s5,s6,s7,s8,s9,s10;
Select s1 such that Next(s1,s2) and Next(s3,s4) and Next(s5,s6) and Next(s7,s8) and Next(s9,s10)
None
5000
987 - test cartesian product
stmt s1,s2,s3,s4,s5,s6,s7,s8,s9,s10,s11,s12;
Select s1 such that Next(s1,s2) and Next(s3,s4) and Next(s5,s6) and Next(s7,s8) and Next(s9,s10) and Next(s11,s12)
None
5000
988 - test cartesian product w tuples
stmt s1,s2,s3,s4,s5,s6,s7,s8;
Select <s1,s2> such that Next(s1,s2) and Next(s3,s4) and Next(s5,s6) and Next(s7,s8)
None
5000
989 - test cartesian product w tuples
stmt s1,s2,s3,s4,s5,s6,s7,s8;
Select <s1,s2,s3> such that Next(s1,s2) and Next(s3,s4) and Next(s5,s6) and Next(s7,s8)
None
5000
990 - test cartesian product w tuples
stmt s1,s2,s3,s4,s5,s6,s7,s8;
Select <s1,s2,s3,s4> such that Next(s1,s2) and Next(s3,s4) and Next(s5,s6) and Next(s7,s8)
None
5000
991 - 2 nextstar
stmt s1,s2,s3,s4;
Select s1 such that Next*(s1,s2) and Next*(s2,s3)
None
5000
992 - 3 nextstar
stmt s1,s2,s3,s4;
Select s1 such that Next*(s1,s2) and Next*(s2,s3) and Next*(s3,s4)
None
5000
993 - 4 nextstar
stmt s1,s2,s3,s4,s5;
Select s1 such that Next*(s1,s2) and Next*(s2,s3) and Next*(s3,s4) and Next*(s4,s5)
None
5000
994 - 5 nextstar
stmt s1,s2,s3,s4,s5,s6;
Select s1 such that Next*(s1,s2) and Next*(s2,s3) and Next*(s3,s4) and Next*(s4,s5) and Next*(s5,s6)
None
5000
995 - nextstar 2 tuple
stmt s1,s2,s3,s4;
Select <s1,s2> such that Next*(s1,s2) and Next*(s2,s3) and Next*(s3,s4)
None
5000
996 - nextstar 3 tuple
stmt s1,s2,s3,s4;
Select <s1,s2,s3> such that Next*(s1,s2) and Next*(s2,s3) and Next*(s3,s4)
None
5000
997 - nextstar 4 tuple
stmt s1,s2,s3,s4;
Select <s1,s2,s3,s4> such that Next*(s1,s2) and Next*(s2,s3) and Next*(s3,s4)
None
5000
998 - 2 affects
stmt s1,s2,s3;
Select s1 such that Affects(s1,s2) and Affects(s2,s3)
None
5000
999 - 3 affects
stmt s1,s2,s3,s4;
Select s1 such that Affects(s1,s2) and Affects(s2,s3) and Affects(s3,s4)
None
5000
1000 - 4 affects
stmt s1,s2,s3,s4,s5;
Select s1 such that Affects(s1,s2) and Affects(s2,s3) and Affects(s3,s4) and Affects(s4,s5)
None
5000
1001 - 5 affects
stmt s1,s2,s3,s4,s5,s6;
Select s1 such that Affects(s1,s2) and Affects(s2,s3) and Affects(s3,s4) and Affects(s4,s5) and Affects(s5,s6)
None
5000
1002 - affects 2 tuple
stmt s1,s2,s3,s4,s5,s6;
Select <s1,s2> such that Affects(s1,s2) and Affects(s2,s3) and Affects(s3,s4)
None
5000
1003 - affects 3 tuple
stmt s1,s2,s3,s4,s5,s6;
Select <s1,s2,s3> such that Affects(s1,s2) and Affects(s2,s3) and Affects(s3,s4)
None
5000
1004 - affects 4 tuple
stmt s1,s2,s3,s4,s5,s6;
Select <s1,s2,s3,s4> such that Affects(s1,s2) and Affects(s2,s3) and Affects(s3,s4)
None
5000
1005 - 2 affectstar
stmt s1,s2,s3;
Select s1 such that Affects*(s1,s2) and Affects*(s2,s3)
None
5000
1006 - 3 affectstar
stmt s1,s2,s3,s4;
Select s1 such that Affects*(s1,s2) and Affects*(s2,s3) and Affects*(s3,s4)
None
5000
1007 - 4 affectstar
stmt s1,s2,s3,s4,s5;
Select s1 such that Affects*(s1,s2) and Affects*(s2,s3) and Affects*(s3,s4) and Affects*(s4,s5)
None
5000
1008 - affectstar 2 tuple
stmt s1,s2,s3,s4;
Select <s1,s2> such that Affects*(s1,s2) and Affects*(s2,s3)
None
5000
1009 - affectstar 3 tuple
stmt s1,s2,s3,s4;
Select <s1,s2,s3> such that Affects*(s1,s2) and Affects*(s2,s3)
None
5000
1010 - 4 mixed
stmt s1,s2,s3; variable v1,v2,v3;
Select s1 such that Uses(s1,v1) and Modifies(s1,v2) and Parent*(s1,s2) and Follows*(s2,s3)
None
5000
1011 - 5 mixed
stmt s1,s2,s3; variable v1,v2,v3;
Select s1 such that Uses(s1,v1) and Modifies(s1,v2) and Parent*(s1,s2) and Follows*(s2,s3) and Uses(s1,v3)
None
5000
1012 - 6 mixed
stmt s1,s2,s3; variable v1,v2,v3;
Select s1 such that Uses(s1,v1) and Modifies(s1,v2) and Parent*(s1,s2) and Follows*(s2,s3) and Uses(s1,v3) and Modifies(s2,v2)
None
5000
1013 - 7 mixed
stmt s1,s2,s3,s4; variable v1,v2,v3;
Select s1 such that Uses(s1,v1) and Modifies(s1,v2) and Parent*(s1,s2) and Follows*(s2,s3) and Uses(s1,v3) and Modifies(s2,v2) and Parent*(s3,s4)
None
5000
1014 - 8 mixed
stmt s1,s2,s3,s4,s5; variable v1,v2,v3;
Select s1 such that Uses(s1,v1) and Modifies(s1,v2) and Parent*(s1,s2) and Follows*(s2,s3) and Uses(s1,v3) and Modifies(s2,v2) and Parent*(s3,s4) and Follows*(s4,s5)
None
5000
1015 - mixed 2 tuple
stmt s1,s2,s3; variable v1,v2,v3;
Select <s1,s2> such that Uses(s1,v1) and Modifies(s1,v2) and Parent*(s1,s2) and Follows*(s2,s3) and Uses(s1,v3) and Modifies(s2,v2)
None
5000
1016 - mixed 3 tuple
stmt s1,s2,s3; variable v1,v2,v3;
Select <s1,s2,s3> such that Uses(s1,v1) and Modifies(s1,v2) and Parent*(s1,s2) and Follows*(s2,s3) and Uses(s1,v3) and Modifies(s2,v2)
None
5000
1017 - mixed 4 tuple
stmt s1,s2,s3; variable v1,v2,v3;
Select <s1,s2,s3,v1> such that Uses(s1,v1) and Modifies(s1,v2) and Parent*(s1,s2) and Follows*(s2,s3) and Uses(s1,v3) and Modifies(s2,v2)
None
5000
1018 - mixed 5 tuple
stmt s1,s2,s3; variable v1,v2,v3;
Select <s1,s2,s3,v1,v2> such that Uses(s1,v1) and Modifies(s1,v2) and Parent*(s1,s2) and Follows*(s2,s3) and Uses(s1,v3) and Modifies(s2,v2)
None
5000
1019 - 4 mixed 2 group
stmt s1,s2,s3,s4; variable v1,v2;
Select s1 such that Uses(s1,v1) and Modifies(s1,v2) and Parent*(s2,s3) and Follows*(s3,s4)
None
5000
1020 - 5 mixed 2 group
stmt s1,s2,s3,s4,s5; variable v1,v2;
Select s1 such that Uses(s1,v1) and Modifies(s1,v2) and Parent*(s2,s3) and Follows*(s3,s4) and Next(s4,s5)
None
5000
1021 - 6 mixed 2 group
stmt s1,s2,s3,s4,s5,s6; variable v1,v2;
Select s1 such that Uses(s1,v1) and Modifies(s1,v2) and Parent*(s2,s3) and Follows*(s3,s4) and Next(s4,s5) and Next(s1,s6)
None
5000
1022 - 7 mixed 2 group
stmt s1,s2,s3,s4,s5,s6; variable v1,v2,v3;
Select s1 such that Uses(s1,v1) and Modifies(s1,v2) and Parent*(s2,s3) and Follows*(s3,s4) and Next(s4,s5) and Next(s1,s6) and Uses(s1,v3)
None
5000
1023 - 8 mixed 2 group
stmt s1,s2,s3,s4,s5,s6; variable v1,v2,v3,v4;
Select s1 such that Uses(s1,v1) and Modifies(s1,v2) and Parent*(s2,s3) and Follows*(s3,s4) and Next(s4,s5) and Next(s1,s6) and Uses(s1,v3) and Modifies(s2,v4)
None
5000
1024 - 2 group mixed 2 tuple
stmt s1,s2,s3,s4,s5,s6; variable v1,v2;
Select <s1,s2> such that Uses(s1,v1) and Modifies(s1,v2) and Parent*(s2,s3) and Follows*(s3,s4) and Next(s4,s5) and Next(s1,s6)
None
5000
1025 - 2 group mixed 3 tuple
stmt s1,s2,s3,s4,s5,s6; variable v1,v2;
Select <s1,s2,s3> such that Uses(s1,v1) and Modifies(s1,v2) and Parent*(s2,s3) and Follows*(s3,s4) and Next(s4,s5) and Next(s1,s6)
None
5000
1026 - 2 group mixed 4 tuple
stmt s1,s2,s3,s4,s5,s6; variable v1,v2;
Select <s1,s2,s3,s4> such that Uses(s1,v1) and Modifies(s1,v2) and Parent*(s2,s3) and Follows*(s3,s4) and Next(s4,s5) and Next(s1,s6)
None
5000
1027 - 2 group mixed 5 tuple
stmt s1,s2,s3,s4,s5,s6; variable v1,v2;
Select <s1,s2,s3,s4,s5> such that Uses(s1,v1) and Modifies(s1,v2) and Parent*(s2,s3) and Follows*(s3,s4) and Next(s4,s5) and Next(s1,s6)
None
5000
