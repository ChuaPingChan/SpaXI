procedure A {
 	x = 1;  						//1
 	y = 2 * z;  					//2
 	call B;  						//3
 	z = p - y;  					//4
 	if q then {  					//5
 		z = x + 24;					//6
		call C;						//7
	} else {
 		while z { 					//8
 			y = x * q - 5;			//9
 			z = z - 1; 				//10
		}
 		y = x + y * z + p * q;		//11
 		call C;						//12
	}
 	i = x + j + z;					//13
 	call D;							//14
}

procedure B {
	p = x * 10;						//15
 	q = y + y * 10;					//16
 	while t {						//17
 		a = 5 * p - 5;				//18
 		x = 1 + y;					//19
	}
 	q = p * 5; 						//20
}

procedure C {
	i = x * 10;						//21
 	j = x + y * 10;					//22
 	if i then {						//23
 		x = j + 2;					//24
 		call D;						//25
	}
	else {
 		y = i + x + y * z;			//26
	}
}

procedure D {
 	q = i * x * j + y + p * q;		//27
 	if q then{						//28
 		r = i * j;					//29
 		while q {					//30
			if r then {				//31
				q = r + i;			//32
				while q {			//33
					q = q - 1;		//34
					call B;  		//35
				}
			} else {			
				q = r + j;			//36
				if q then {			//37
					q = i * q + j - z;	//38
				} else {
					q = r + 14;		//39
				}
			} 		
 		}
 	} else {
 		r = x - (3 + 12 * z)  + q;	//40
 		while r{					//41
 			x = 24 * (z + i);		//42
 			while x{				//43
 				if y then {			//44
 					if q then {		//45
 						s = 17 + i * y - z;		//46
 						call B;					//47
 					} else {
 						s = (13 + i) * (y - z); //48
 					}
 				} else {
 					s = ((8 + x) * y) - z;		//49
 				}
 			}
 		}
 	}
}