Parameters : Test6_Frozen\1_Demo\Demo_Source.txt Test6_Frozen\1_Demo\Demo_Modifies.txt TestResult\out6_Demo_Modifies.xml
Beginning to parse Simple Program.
End of parsing Simple Program.
Release
Beginning to evaluate Query File.
1 - Modifies retrieve all statements that modifies
stmt s, s1; assign a, a1, a2; while w, w1; if ifstmt, iftstmt1; procedure p; variable v; constant c; prog_line n, n1, n2; call ca1, ca2;
Select s such that Modifies(s, _)
1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19
5000
Evaluating query 1 - Modifies retrieve all statements that modifies
prog_line is an Unnamedvar 
_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Modifies="1" UnnamedVar="2" SuchThat="1" CondNum="5" RelNum="1" 
Your answer: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
Correct answer: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
2 - Modifies retrieve all procedures that modifies
stmt s, s1; assign a, a1, a2; while w, w1; if ifstmt, iftstmt1; procedure p; variable v; constant c; prog_line n, n1, n2; call ca1, ca2;
Select p such that Modifies(p, _)
one,two,three
5000
Evaluating query 2 - Modifies retrieve all procedures that modifies
prog_line is an Unnamedvar 
_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Modifies="1" UnnamedVar="2" SuchThat="1" CondNum="5" RelNum="1" 
Your answer: one two three 
Correct answer: one two three 
3 - Modifies retrieve single statement
stmt s, s1; assign a, a1, a2; while w, w1; if ifstmt, iftstmt1; procedure p; variable v; constant c; prog_line n, n1, n2; call ca1, ca2;
Select s such that Modifies(s, _) with s.stmt# = 1
1
5000
Evaluating query 3 - Modifies retrieve single statement
prog_line is an Unnamedvar 
_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Modifies="1" UnnamedVar="2" SuchThat="1" With="1" CondNum="6" RelNum="1" 
Your answer: 1 
Correct answer: 1 
4 - Modifies retrieve single procedure that modify
stmt s, s1; assign a, a1, a2; while w, w1; if ifstmt, iftstmt1; procedure p; variable v; constant c; prog_line n, n1, n2; call ca1, ca2;
Select p such that Modifies(p, _) with p.procName = "three"
three
5000
Evaluating query 4 - Modifies retrieve single procedure that modify
prog_line is an Unnamedvar 
_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Modifies="1" UnnamedVar="2" SuchThat="1" With="1" CondNum="6" RelNum="1" 
Your answer: three 
Correct answer: three 
3.2 - Modifies retrieve single statement
stmt s, s1; assign a, a1, a2; while w, w1; if ifstmt, iftstmt1; procedure p; variable v; constant c; prog_line n, n1, n2; call ca1, ca2;
Select v such that Modifies(1, v)
x
5000
Evaluating query 3.2 - Modifies retrieve single statement
prog_line is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Modifies="1" UnnamedVar="1" SuchThat="1" CondNum="4" RelNum="1" 
Your answer: x 
Correct answer: x 
4.2 - Modifies retrieve single procedure that modify
stmt s, s1; assign a, a1, a2; while w, w1; if ifstmt, iftstmt1; procedure p; variable v; constant c; prog_line n, n1, n2; call ca1, ca2;
Select v such that Modifies("three", v)
i
5000
Evaluating query 4.2 - Modifies retrieve single procedure that modify
prog_line is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Modifies="1" UnnamedVar="1" SuchThat="1" CondNum="4" RelNum="1" 
Your answer: i 
Correct answer: i 
5 - Modifies incorrect argument
stmt s, s1; assign a, a1, a2; while w, w1; if ifstmt, iftstmt1; procedure p; variable v; constant c; prog_line n, n1, n2; call ca1, ca2;
Select BOOLEAN such that Modifies(v, _) 
none
5000
Evaluating query 5 - Modifies incorrect argument
prog_line is an Unnamedvar 
_ is an Unnamedvar 
The final tag string is ReturnBoolean="1" Modifies="1" UnnamedVar="2" SuchThat="1" CondNum="5" RelNum="1" 
Your answer: false 
Correct answer: 
Missing: 
Additional: false 
6 - Modifies incorrect argument
stmt s, s1; assign a, a1, a2; while w, w1; if ifstmt, iftstmt1; procedure p; variable v; constant c; prog_line n, n1, n2; call ca1, ca2;
Select c such that Modifies(_, _)
none
5000
Evaluating query 6 - Modifies incorrect argument
prog_line is an Unnamedvar 
_, is an Unnamedvar 
_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Modifies="1" UnnamedVar="3" SuchThat="1" CondNum="6" RelNum="1" 
Your answer: 
Correct answer: 
7 - Modifies boundary case
stmt s, s1; assign a, a1, a2; while w, w1; if ifstmt, iftstmt1; procedure p; variable v; constant c; prog_line n, n1, n2; call ca1, ca2;
Select v such that Modifies(0, v)
none
5000
Evaluating query 7 - Modifies boundary case
prog_line is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Modifies="1" UnnamedVar="1" SuchThat="1" CondNum="4" RelNum="1" 
Your answer: 
Correct answer: 
8 - Modifies boundary case
stmt s, s1; assign a, a1, a2; while w, w1; if ifstmt, iftstmt1; procedure p; variable v; constant c; prog_line n, n1, n2; call ca1, ca2;
Select v such that Modifies(20, v)
none
5000
Evaluating query 8 - Modifies boundary case
prog_line is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Modifies="1" UnnamedVar="1" SuchThat="1" CondNum="4" RelNum="1" 
Your answer: 
Correct answer: 
9 - Modifies boundary case
stmt s, s1; assign a, a1, a2; while w, w1; if ifstmt, iftstmt1; procedure p; variable v; constant c; prog_line n, n1, n2; call ca1, ca2;
Select v such that Modifies("yolo", v)
none
5000
Evaluating query 9 - Modifies boundary case
prog_line is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Modifies="1" UnnamedVar="1" SuchThat="1" CondNum="4" RelNum="1" 
Your answer: 
Correct answer: 
End of evaluating Query File.
AutoTester Completed !
