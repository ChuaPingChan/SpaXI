Parameters : Test6_Frozen\16_Simple02\Simple02-Source.txt Test6_Frozen\16_Simple02\Simple02-Queries.txt TestResult\outSimple02.xml
Beginning to parse Simple Program.
End of parsing Simple Program.
Release
Beginning to evaluate Query File.
1 - Test basic function of Parent
stmt s;
Select s such that Parent(s, 7)
6
5000
Evaluating query 1 - Test basic function of Parent
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Parent="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 6 
Correct answer: 6 
2 - Test if Parent considers same nesting level
stmt s;
Select s such that Parent(s, 3)
none
5000
Evaluating query 2 - Test if Parent considers same nesting level
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Parent="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 
Correct answer: 
3 - Test if Parent considers different nesting level in if/else statement
variable v;
Select v such that Parent(10, 12)
x, y, z, i, v
5000
Evaluating query 3 - Test if Parent considers different nesting level in if/else statement
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Parent="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: x z i y v 
Correct answer: x y z i v 
4 - Test basic function of Parent*
variable v;
Select v such that Parent*(6, 10)
none
5000
Evaluating query 4 - Test basic function of Parent*
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Parentstar="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 
Correct answer: 
5 - Test if Parent* considers different container statements
stmt s, s1;
Select s such that Parent*(6, 11)
none
5000
Evaluating query 5 - Test if Parent* considers different container statements
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Parentstar="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 
Correct answer: 
6 - Test if Parent* considers a TRUE Parent
stmt s;
Select s such that Parent*(s, 12)
10
5000
Evaluating query 6 - Test if Parent* considers a TRUE Parent
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Parentstar="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 10 
Correct answer: 10 
7 - Test basic function of Follows
stmt s;
Select s such that Follows(s, 2)
1
5000
Evaluating query 7 - Test basic function of Follows
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Follows="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 1 
Correct answer: 1 
8 - Test for invalid procedure Follows
variable v;
Select v such that Follows("First", "Second")
none
5000
Evaluating query 8 - Test for invalid procedure Follows
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Follows="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 
Correct answer: 
9 - Test if Follows considers statements in different nesting level
procedure p;
Select p such that Follows(6, 7)
none
5000
Evaluating query 9 - Test if Follows considers statements in different nesting level
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Follows="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 
Correct answer: 
10 - Test basic function of Follows*
stmt s;
Select s such that Follows*(s, 6)
4, 5 
5000
Evaluating query 10 - Test basic function of Follows*
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Followsstar="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 4 5 
Correct answer: 4 5 
11 - Test if Follows* considered all stmt lists in the same nesting level 
stmt s;
Select s such that Follows*(s, 15)
4, 5, 6, 10, 13, 14
5000
Evaluating query 11 - Test if Follows* considered all stmt lists in the same nesting level 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Followsstar="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 4 5 6 10 13 14 
Correct answer: 4 5 6 10 13 14 
12 - Test if Follows* considers statements in different nesting level
procedure p;
Select p such that Follows*(4, 9)
none
5000
Evaluating query 12 - Test if Follows* considers statements in different nesting level
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Followsstar="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 
Correct answer: 
13 - Test basic function of Modifies
variable v;
Select v such that Modifies(1, v)
x
5000
Evaluating query 13 - Test basic function of Modifies
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Modifies="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: x 
Correct answer: x 
14 - Test basic function of Modifies for container statement, in this case it is if statement
if ifstat;
Select ifstat such that Modifies(ifstat, "x")
10
5000
Evaluating query 14 - Test basic function of Modifies for container statement, in this case it is if statement
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Modifies="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 10 
Correct answer: 10 
15 - Test basic function of Modifies for container statement, in this case it is while statement
while w;
Select w such that Modifies(w, "x")
6
5000
Evaluating query 15 - Test basic function of Modifies for container statement, in this case it is while statement
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Modifies="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 6 
Correct answer: 6 
16 - Test basic function of Uses
stmt s;
Select s such that Uses(s, "x")
3, 6, 7, 10, 11, 13, 15
5000
Evaluating query 16 - Test basic function of Uses
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Uses="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 3 6 7 10 11 13 15 
Correct answer: 3 6 7 10 11 13 15 
17 - Test if Uses considers container statements
while w;
Select w such that Uses(w, "i")
6
5000
Evaluating query 17 - Test if Uses considers container statements
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Uses="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 6 
Correct answer: 6 
18 - Test if Uses considers procedures
procedure p;
Select p such that Uses(p,"i")
First, Second
5000
Evaluating query 18 - Test if Uses considers procedures
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Uses="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: First Second 
Correct answer: First Second 
19 - Test basic function of Pattern
assign a;
Select a pattern a(_ , "z")
17
5000
Evaluating query 19 - Test basic function of Pattern
_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" UnnamedVar="1" Pattern="1" CondNum="3" RelNum="0" 
Your answer: 17 
Correct answer: 17 
20 - Test if Pattern recognizes sub expressions/underscores
assign a;
Select a pattern a(_ , _"y"_)
7, 15
5000
Evaluating query 20 - Test if Pattern recognizes sub expressions/underscores
_ is an Unnamedvar 
_"y"_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" UnnamedVar="2" Pattern="1" CondNum="4" RelNum="0" 
Your answer: 7 15 
Correct answer: 7 15 
21 - Test if Pattern recognizes lhs 
assign a;
Select a pattern a("x" , _ )
1, 4, 7, 11, 15
5000
Evaluating query 21 - Test if Pattern recognizes lhs 
_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" UnnamedVar="1" Pattern="1" CondNum="3" RelNum="0" 
Your answer: 1 4 7 11 15 
Correct answer: 1 4 7 11 15 
22 - Combine Modifies and not-existent pattern
stmt s; assign a;
Select s such that Modifies(s, "x") pattern a("x", "x")
none
5000
Evaluating query 22 - Combine Modifies and not-existent pattern
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Modifies="1" Pattern="1" SuchThat="1" CondNum="4" RelNum="1" 
Your answer: 
Correct answer: 
23 - Combine Modifies and pattern
stmt s; assign a;
Select s such that Modifies(s, "x") pattern a("x", _) 
1, 4, 7, 11, 15, 10, 3, 6
5000
Evaluating query 23 - Combine Modifies and pattern
_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Modifies="1" UnnamedVar="1" Pattern="1" SuchThat="1" CondNum="5" RelNum="1" 
Your answer: 1 3 4 6 7 10 11 15 
Correct answer: 1 4 7 11 15 10 3 6 
24 - Combine Parent and pattern
stmt s; assign a;
Select s such that Parent(s, 7) pattern a(_, _)
6
5000
Evaluating query 24 - Combine Parent and pattern
_, is an Unnamedvar 
_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Parent="1" UnnamedVar="2" Pattern="1" SuchThat="1" CondNum="6" RelNum="1" 
Your answer: 6 
Correct answer: 6 
25 - Combine Uses and pattern
stmt s; assign a;
Select s such that Uses(s, "i") pattern a("i", _)
9, 3, 6, 13
5000
Evaluating query 25 - Combine Uses and pattern
_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" UnnamedVar="1" Uses="1" Pattern="1" SuchThat="1" CondNum="5" RelNum="1" 
Your answer: 3 6 9 13 
Correct answer: 9 3 6 13 
26 - Combine Uses and pattern with same assignment stmt
assign a; variable v;
Select a such that Uses(a, "x") pattern a(v, _)
7, 11, 13, 15
5000
Evaluating query 26 - Combine Uses and pattern with same assignment stmt
_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" UnnamedVar="1" Uses="1" Pattern="1" SuchThat="1" CondNum="5" RelNum="1" 
Your answer: 7 11 13 15 
Correct answer: 7 11 13 15 
27 - Combine Uses and pattern with different assignment stmt and variables
assign a, a1, a2;
Select a such that Uses(a2, "z") pattern a1(_ , _)
1, 2, 4, 5, 7, 9, 11, 12, 13, 14, 15, 16 ,17
5000
Evaluating query 27 - Combine Uses and pattern with different assignment stmt and variables
_ is an Unnamedvar 
_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" UnnamedVar="2" Uses="1" Pattern="1" SuchThat="1" CondNum="6" RelNum="1" 
Your answer: 1 2 4 5 7 9 11 12 13 14 15 16 17 
Correct answer: 1 2 4 5 7 9 11 12 13 14 15 16 17 
28 - Combine Uses and pattern with different assignment stmt and variables variation
assign a, a1;
Select a such that Uses(a, "z") pattern a1("z", _)
13, 14, 15, 17
5000
Evaluating query 28 - Combine Uses and pattern with different assignment stmt and variables variation
_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" UnnamedVar="1" Uses="1" Pattern="1" SuchThat="1" CondNum="5" RelNum="1" 
Your answer: 13 14 15 17 
Correct answer: 13 14 15 17 
29 - Combine parent* and pattern
assign a, a1;
Select a such that Parent*(6, a) pattern a1("x", _)
7,9
5000
Evaluating query 29 - Combine parent* and pattern
_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Parentstar="1" UnnamedVar="1" Pattern="1" SuchThat="1" CondNum="5" RelNum="1" 
Your answer: 7 9 
Correct answer: 7 9 
30 - Combine follows and pattern
stmt s; assign a;
Select s such that Follows(1, s) pattern a("z", "3")
2
5000
Evaluating query 30 - Combine follows and pattern
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Follows="1" Pattern="1" SuchThat="1" CondNum="4" RelNum="1" 
Your answer: 2 
Correct answer: 2 
31 - combine pattern and follows*
stmt s; assign a;
Select s pattern a("x",_) such that Follows*(s,6)
4, 5
5000
Evaluating query 31 - combine pattern and follows*
"x",_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Followsstar="1" UnnamedVar="1" Pattern="1" SuchThat="1" CondNum="5" RelNum="1" 
Your answer: 4 5 
Correct answer: 4 5 
End of evaluating Query File.
AutoTester Completed !
