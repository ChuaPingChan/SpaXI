Parameters : Test13_Seven\3_Three\SourceLongTestCase.txt Test13_Seven\3_Three\QueryLongTestCase.txt TestResult\out13_Three_QueryLongTestCase.xml
Beginning to parse Simple Program.
End of parsing Simple Program.
Release
Beginning to evaluate Query File.
1 - Simple

Select BOOLEAN  with "a" = "a"
TRUE
5000
Evaluating query 1 - Simple
The final tag string is ReturnBoolean="1" With="1" CondNum="2" RelNum="0" 
Your answer: true 
Correct answer: TRUE 
Missing: TRUE 
Additional: true 
2 - selecting variables
variable v, v1; assign a; stmt s; procedure p;
Select v with p.procName = "eight" such that Uses(p,v) and Modifies(a,v1) with v1.varName = "eC" such that Uses(a,v) and Follows(_,a) and Follows*(_,a)
eD,eA,eC,eB
5000
Evaluating query 2 - selecting variables
The happen is 2
The happen is 2
The happen is 2
_,a is an Unnamedvar 
_,a is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Follows="1" Followsstar="1" Modifies="1" UnnamedVar="2" Uses="2" SuchThat="2" With="2" CondNum="12" RelNum="5" 
Your answer: eA eB eC eD 
Correct answer: eD eA eC eB 
3 - call long query
variable v, v1; assign a; stmt s; procedure p,p1,p2; call c, c1,c2; while w;
Select <w, c.procName> such that Parent(w,c) with c.procName = p.procName such that Calls(p,p1) and Calls(p1,p2) pattern w(_,_)
95 singleStmt
5000
Evaluating query 3 - call long query
The happen is 2
The happen is 2
_,_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Calls="2" Parent="1" UnnamedVar="1" Pattern="1" SuchThat="2" With="1" CondNum="9" RelNum="3" 
Your answer: 
Correct answer: 95 singleStmt 
Missing: 95 singleStmt 
Additional: 
4 - next* long query
variable v, v1; assign a; stmt s,s1; procedure p,p1,p2; call c, c1,c2; while w;
Select <w,a> such that Next*(s,s1) and Next(a,w) with w.stmt# = s.stmt# such that Next(s,109) pattern w(v,_) such that Uses("notCalledByAnyone", v) such that Uses(a, "notA") and Modifies(a,v)  
108 107, 108 110 
5000
Evaluating query 4 - next* long query
The happen is 2
The happen is 2
v,_ is an Unnamedvar 
The happen is 3
The happen is 4
The happen is 2
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Modifies="1" Next="2" Nextstar="1" UnnamedVar="1" Uses="2" Pattern="1" SuchThat="4" With="1" CondNum="14" RelNum="6" 
Your answer: 108 107 108 110 
Correct answer: 108 107 108 110 
5 - Select statement
variable v, v1; assign a; stmt s,s1; procedure p,p1,p2; call c, c1,c2; while w; if ifs, ifs1, ifs2;
Select s with s.stmt# = ifs.stmt# such that Parent*(ifs, ifs1) and Parent(ifs1, ifs2) pattern ifs1(_,_,_) pattern ifs2("quattroporte",_,_) such that Parent(ifs, a) pattern ifs("lancer",_,_)
133
5000
Evaluating query 5 - Select statement
_,_,_ is an Unnamedvar 
The happen is 2
"quattroporte",_,_ is an Unnamedvar 
The happen is 2
The happen is 2
The happen is 3
"lancer",_,_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Parent="2" Parentstar="1" UnnamedVar="3" Pattern="3" SuchThat="2" With="1" CondNum="13" RelNum="3" 
Your answer: 133 
Correct answer: 133 
6 - Select triple
variable v, v1; assign a; stmt s,s1; procedure p,p1,p2; call c, c1,c2; while w; if ifs, ifs1, ifs2;
Select <a, v, s1> such that Modifies(a,v) pattern a(_,_"fY*(fA+fB)"_) such that Follows(a,s) and Parent(s1,s) and Next*(s1, w) with w.stmt#= 5
8 fStart 7
5000
Evaluating query 6 - Select triple
_,_"fY* is an Unnamedvar 
"_ is an Unnamedvar 
The happen is 2
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Follows="1" Modifies="1" Nextstar="1" Parent="1" UnnamedVar="2" Pattern="1" SuchThat="2" With="1" CondNum="11" RelNum="4" 
Your answer: 8 fStart 7 
Correct answer: 8 fStart 7 
7 - Select while
variable v, v1; assign a; stmt s,s1; procedure p,p1,p2; call c, c1,c2; while w,w1; if ifs, ifs1, ifs2;
Select w such that Uses(a, "sC") pattern a(_,_"sC-(sC+sC)"_) such that Parent(w,a) and Next(w,w1) pattern w1(_,_)
47
5000
Evaluating query 7 - Select while
_,_"sC- is an Unnamedvar 
"_ is an Unnamedvar 
The happen is 2
The happen is 2
_,_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Next="1" Parent="1" UnnamedVar="3" Uses="1" Pattern="2" SuchThat="2" CondNum="11" RelNum="3" 
Your answer: 
Correct answer: 47 
Missing: 47 
Additional: 
8 - Select stmt
variable v, v1; assign a; stmt s,s1; procedure p,p1,p2; call c, c1,c2; while w,w1; if ifs, ifs1, ifs2; constant ct;
Select s with s.stmt# = ct.value and s.stmt# = w.stmt# such that Next*(w,a) and Uses (a, v) with v.varName = "notB" pattern w(v,_)
99
5000
Evaluating query 8 - Select stmt
The happen is 2
v,_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Nextstar="1" UnnamedVar="1" Uses="1" Pattern="1" SuchThat="1" With="2" CondNum="8" RelNum="2" 
Your answer: 
Correct answer: 99 
Missing: 99 
Additional: 
9 - selecting var pass
variable v,v2; assign a;
Select v such that Uses(a,v2) and Modifies(a, v) with v2.varName = "tA" such that Follows*(_,a)
tB, tC, tD
5000
Evaluating query 9 - selecting var pass
The happen is 2
_,a is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Followsstar="1" Modifies="1" UnnamedVar="1" Uses="1" SuchThat="2" With="1" CondNum="8" RelNum="3" 
Your answer: tB tC tD 
Correct answer: tB tC tD 
10 - selecting stmt pass
variable v,v2; assign a;
Select a such that Uses(a,v2) and Modifies(a, v) with v2.varName = "tA" such that Follows*(_,a)
63, 64, 68, 69
5000
Evaluating query 10 - selecting stmt pass
The happen is 2
_,a is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Followsstar="1" Modifies="1" UnnamedVar="1" Uses="1" SuchThat="2" With="1" CondNum="8" RelNum="3" 
Your answer: 63 64 68 69 
Correct answer: 63 64 68 69 
11 - multiclause
while w, w1; variable v; assign a;
Select v such that Modifies(w,v) and Next(w,w1) and Uses(a,v) and Parent(_,w)
sC, sE, fE, fF, fEnd, fJ, fB, fD, sA, notK, notA, notB, notZ, notX, notC, notY, notE, a, b, c
5000
Evaluating query 11 - multiclause
_,w is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Modifies="1" Next="1" Parent="1" UnnamedVar="1" Uses="1" SuchThat="1" CondNum="7" RelNum="4" 
Your answer: fB fE fEnd fD fF fJ sA sC sE notA notB notC notE notK notX notY notZ a b c 
Correct answer: sC sE fE fF fEnd fJ fB fD sA notK notA notB notZ notX notC notY notE a b c 
12 - multiclause empty pattern
constant c; assign a; while w, w1;
Select a with a.stmt# = c.value such that Follows(w,a) and Parent(w1,a) pattern a(_,_"sC-sC"_)

5000
Evaluating query 12 - multiclause empty pattern
_,_"sC-sC"_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Follows="1" Parent="1" UnnamedVar="1" Pattern="1" SuchThat="1" With="1" CondNum="7" RelNum="2" 
Your answer: 
Correct answer: 
13 - multiclause valid pattern
constant c; assign a; while w, w1; stmt s;
Select a with a.stmt# = c.value such that Follows(s,a) and Follows*(w,a) pattern a("fC",_"fX"_)
24
5000
Evaluating query 13 - multiclause valid pattern
"fC",_"fX"_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Follows="1" Followsstar="1" UnnamedVar="1" Pattern="1" SuchThat="1" With="1" CondNum="7" RelNum="2" 
Your answer: 
Correct answer: 24 
Missing: 24 
Additional: 
14 - multiclause
if ifs; assign a; variable v, v1;
Select ifs pattern ifs(v1,_,_) pattern a(_,_"fC"_) such that Modifies(ifs,v) with v.varName = "fEnd" with v1.varName = "fY" with v.varName = "fEnd" with v1.varName = "fY"
7
5000
Evaluating query 14 - multiclause
v1,_,_ is an Unnamedvar 
The happen is 2
_,_"fC"_ is an Unnamedvar 
The happen is 2
The happen is 3
The happen is 4
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Modifies="1" UnnamedVar="2" Pattern="2" SuchThat="1" With="4" CondNum="11" RelNum="1" 
Your answer: 7 
Correct answer: 7 
15 - multiclause working
if ifs; assign a; variable v;
Select ifs pattern ifs("fY",_,_) pattern a(_,_"fC"_) such that Modifies(ifs,v) with v.varName = "fEnd"
7
5000
Evaluating query 15 - multiclause working
"fY",_,_ is an Unnamedvar 
The happen is 2
_,_"fC"_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Modifies="1" UnnamedVar="2" Pattern="2" SuchThat="1" With="1" CondNum="8" RelNum="1" 
Your answer: 7 
Correct answer: 7 
16 - multiclause
if ifs; assign a; variable v;
Select ifs pattern ifs(_,_,_) pattern a(_,_"fC"_) such that Modifies(ifs,v) with v.varName = "fEnd"
31,7,17
5000
Evaluating query 16 - multiclause
_,_,_ is an Unnamedvar 
The happen is 2
_,_"fC"_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Modifies="1" UnnamedVar="2" Pattern="2" SuchThat="1" With="1" CondNum="8" RelNum="1" 
Your answer: 7 17 31 
Correct answer: 31 7 17 
17 - multiclause pass
while w,w2; procedure p,p1,p2;
Select w2 such that Calls(p,p1) and Calls(p1,p2) with p.procName = "first" such that Parent(w,w2)
95,96,98,88,93,99,100,101,47,48,49,87
5000
Evaluating query 17 - multiclause pass
The happen is 2
The happen is 2
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Calls="2" Parent="1" SuchThat="2" With="1" CondNum="7" RelNum="3" 
Your answer: 47 48 49 87 88 93 95 96 98 99 100 101 
Correct answer: 95 96 98 88 93 99 100 101 47 48 49 87 
18 - multiclause
while w; procedure p,p1;
Select w such that Calls(p,p1) and Calls(p1,_) with p.procName = "first" such that Parent(_,w) pattern w(_,_)
48,49,9,96,33,47,79,101,93,87,88,95,98,99,100,108
5000
Evaluating query 18 - multiclause
The happen is 2
p1,_ is an Unnamedvar 
The happen is 2
_,w is an Unnamedvar 
_,_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Calls="2" Parent="1" UnnamedVar="3" Pattern="1" SuchThat="2" With="1" CondNum="11" RelNum="3" 
Your answer: 9 33 47 48 49 79 87 88 93 95 96 98 99 100 101 108 
Correct answer: 48 49 9 96 33 47 79 101 93 87 88 95 98 99 100 108 
19 - multiclause
stmt s; constant ct; variable v; call c;
Select s with s.stmt# = ct.value such that Parent(_, s) and Modifies(s,v) and Uses(c,v)
8,10,11,14,20
5000
Evaluating query 19 - multiclause
_, is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Modifies="1" Parent="1" UnnamedVar="1" Uses="1" SuchThat="1" With="1" CondNum="7" RelNum="3" 
Your answer: 
Correct answer: 8 10 11 14 20 
Missing: 10 11 14 20 8 
Additional: 
20 - multiclause 
variable v, v1; assign a; stmt s,s1; procedure p,p1,p2; call c, c1,c2; while w,w1; if ifs, ifs1, ifs2; constant ct;
Select p1 such that Calls(p,p1) and Calls*(p1,p2) and Modifies(p1,v) with v.varName = "b" such that Uses(p1,v)
singleStmt, noNesting
5000
Evaluating query 20 - multiclause 
The happen is 2
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Calls="1" Callsstar="1" Modifies="1" Uses="1" SuchThat="2" With="1" CondNum="8" RelNum="4" 
Your answer: singleStmt noNesting 
Correct answer: singleStmt noNesting 
21 - multiclause
variable v, v1; assign a; stmt s,s1; procedure p,p1,p2; call c, c1,c2; while w,w1; if ifs, ifs1, ifs2; constant ct;
Select v such that Uses("unrelatedProcedure", v) and Uses(s, v) and Next(w,s)
LEL, b, joke
5000
Evaluating query 21 - multiclause
The happen is 2
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Next="1" Uses="2" SuchThat="1" CondNum="5" RelNum="3" 
Your answer: b LEL joke 
Correct answer: LEL b joke 
22 - multiclause 
variable v, v1; assign a; stmt s,s1; procedure p,p1,p2; call c, c1,c2; while w,w1; if ifs, ifs1, ifs2; constant ct;
Select v such that Uses("nestedIfStatements", v) and Modifies(p, v) and Next*(w,s) with p.procName = "nestedIfStatements"
lancer, murceiago, quattroporte, b, gallardo, mustang, p1, California
5000
Evaluating query 22 - multiclause 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Modifies="1" Nextstar="1" Uses="1" SuchThat="1" With="1" CondNum="6" RelNum="3" 
Your answer: b lancer gallardo murceiago quattroporte mustang p1 California 
Correct answer: lancer murceiago quattroporte b gallardo mustang p1 California 
End of evaluating Query File.
AutoTester Completed !
