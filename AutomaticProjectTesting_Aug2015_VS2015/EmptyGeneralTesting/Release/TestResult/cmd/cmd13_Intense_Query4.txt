Parameters : Test13_Seven\4_Intense\Source4.txt Test13_Seven\4_Intense\Query4.txt TestResult\out13_Intense_Query4.xml
Beginning to parse Simple Program.
End of parsing Simple Program.
Release
Beginning to evaluate Query File.
1 - All :: All variables?
variable v;
Select v
a,b,c,d,e,i,k,m,x,y,z
5000
Evaluating query 1 - All :: All variables?
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" CondNum="1" RelNum="0" 
Your answer: a x y b c m z k d i e 
Correct answer: a b c d e i k m x y z 
2 - All :: All statements?
stmt s;
Select s
1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74
5000
Evaluating query 2 - All :: All statements?
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" CondNum="1" RelNum="0" 
Your answer: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 
Correct answer: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 
3 - All :: All while statements?
while w;
Select w
5,15,21,26,41,48,51,52,69
5000
Evaluating query 3 - All :: All while statements?
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" CondNum="1" RelNum="0" 
Your answer: 5 15 21 26 41 48 51 52 69 
Correct answer: 5 15 21 26 41 48 51 52 69 
4 - All :: All if statements?
if i;
Select i
4,12,18,29,33,34,57,63,64,65,71
5000
Evaluating query 4 - All :: All if statements?
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" CondNum="1" RelNum="0" 
Your answer: 4 12 18 29 33 34 57 63 64 65 71 
Correct answer: 4 12 18 29 33 34 57 63 64 65 71 
5 - All :: All call statements?
call c;
Select c
3,10,36,50,56
5000
Evaluating query 5 - All :: All call statements?
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" CondNum="1" RelNum="0" 
Your answer: 3 10 36 50 56 
Correct answer: 3 10 36 50 56 
6 - All :: All assign statements?
assign a;
Select a
1,2,6,7,8,9,11,13,14,16,17,19,20,22,23,24,25,27,28,30,31,32,35,37,38,39,40,42,43,44,45,46,47,49,53,54,55,58,59,60,61,62,66,67,68,70,72,73,74
5000
Evaluating query 6 - All :: All assign statements?
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" CondNum="1" RelNum="0" 
Your answer: 1 2 6 7 8 9 11 13 14 16 17 19 20 22 23 24 25 27 28 30 31 32 35 37 38 39 40 42 43 44 45 46 47 49 53 54 55 58 59 60 61 62 66 67 68 70 72 73 74 
Correct answer: 1 2 6 7 8 9 11 13 14 16 17 19 20 22 23 24 25 27 28 30 31 32 35 37 38 39 40 42 43 44 45 46 47 49 53 54 55 58 59 60 61 62 66 67 68 70 72 73 74 
7 - All :: All procedures?
procedure p;
Select p
p,q,a,d
5000
Evaluating query 7 - All :: All procedures?
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" CondNum="1" RelNum="0" 
Your answer: p a q d 
Correct answer: p q a d 
8 - All :: All procedures names?
procedure p;
Select p.procName
p,q,a,d
5000
Evaluating query 8 - All :: All procedures names?
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" CondNum="1" RelNum="0" 
Your answer: p a q d 
Correct answer: p q a d 
9 - All :: All call procNames?
call c;
Select c.procName
a,q,d
5000
Evaluating query 9 - All :: All call procNames?
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" CondNum="1" RelNum="0" 
Your answer: 3 10 36 50 56 
Correct answer: a q d 
Missing: a d q 
Additional: 10 3 36 50 56 
10 - All :: All constants?
constant c;
Select c
1,2,3,5,8
5000
Evaluating query 10 - All :: All constants?
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" CondNum="1" RelNum="0" 
Your answer: 1 2 3 5 8 
Correct answer: 1 2 3 5 8 
11 - Parent, ParentStar ::
stmt s; 
Select s such that Parent(s, 11)
4
5000
Evaluating query 11 - Parent, ParentStar ::
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Parent="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 4 
Correct answer: 4 
12 - Parent, ParentStar :: 
stmt s;
Select s such that Parent(15, s)
16,17,18,45
5000
Evaluating query 12 - Parent, ParentStar :: 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Parent="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 16 17 18 45 
Correct answer: 16 17 18 45 
13 - Parent, ParentStar :: 
assign a;
Select a such that Parent(4, a)
8,9,11
5000
Evaluating query 13 - Parent, ParentStar :: 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Parent="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 8 9 11 
Correct answer: 8 9 11 
14 - Parent, ParentStar :: 
call c;
Select c such that Parent(4, c)
10
5000
Evaluating query 14 - Parent, ParentStar :: 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Parent="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 10 
Correct answer: 10 
15 - Parent, ParentStar ::
if i;
Select i such that Parent(4, i)
none
5000
Evaluating query 15 - Parent, ParentStar ::
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Parent="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 
Correct answer: 
16 - Parent, ParentStar ::
stmt s;
Select s such that Parent*(s, 28)
12,15,18,21,26
5000
Evaluating query 16 - Parent, ParentStar ::
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Parentstar="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 12 15 18 21 26 
Correct answer: 12 15 18 21 26 
17 - Parent, ParentStar ::
assign a;
Select a such that Parent*(12, a)
13,14,16,17,19,20,22,23,24,25,27,28,30,31,32,35,37,38,39,40,42,43,44,45,46,47,49
5000
Evaluating query 17 - Parent, ParentStar ::
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Parentstar="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 13 14 16 17 19 20 22 23 24 25 27 28 30 31 32 35 37 38 39 40 42 43 44 45 46 47 49 
Correct answer: 13 14 16 17 19 20 22 23 24 25 27 28 30 31 32 35 37 38 39 40 42 43 44 45 46 47 49 
18 - Parent, ParentStar ::
stmt s;
Select s such that Parent*(s, 5)
4
5000
Evaluating query 18 - Parent, ParentStar ::
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Parentstar="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 4 
Correct answer: 4 
19 - Parent, ParentStar ::
stmt s;
Select s such that Parent*(8, s)
none
5000
Evaluating query 19 - Parent, ParentStar ::
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Parentstar="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 
Correct answer: 
20 - Parent, ParentStar ::
stmt s;
Select s such that Parent*(s, 1)
none
5000
Evaluating query 20 - Parent, ParentStar ::
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Parentstar="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 
Correct answer: 
21 - Parent, ParentStar ::
stmt s;
Select BOOLEAN such that Parent(s,_)
TRUE
5000
Evaluating query 21 - Parent, ParentStar ::
s,_ is an Unnamedvar 
The final tag string is ReturnBoolean="1" Parent="1" UnnamedVar="1" SuchThat="1" CondNum="4" RelNum="1" 
Your answer: true 
Correct answer: TRUE 
Missing: TRUE 
Additional: true 
22 - Parent, ParentStar ::
stmt s;
Select BOOLEAN such that Parent*(s,_)
TRUE
5000
Evaluating query 22 - Parent, ParentStar ::
s,_ is an Unnamedvar 
The final tag string is ReturnBoolean="1" Parentstar="1" UnnamedVar="1" SuchThat="1" CondNum="4" RelNum="1" 
Your answer: true 
Correct answer: TRUE 
Missing: TRUE 
Additional: true 
23 - Parent, ParentStar ::
stmt foo;
Select BOOLEAN such that Parent(_,foo)
TRUE
5000
Evaluating query 23 - Parent, ParentStar ::
_,foo is an Unnamedvar 
The final tag string is ReturnBoolean="1" Parent="1" UnnamedVar="1" SuchThat="1" CondNum="4" RelNum="1" 
Your answer: true 
Correct answer: TRUE 
Missing: TRUE 
Additional: true 
24 - Parent, ParentStar ::
stmt foo;
Select BOOLEAN such that Parent*(_,foo)
TRUE
5000
Evaluating query 24 - Parent, ParentStar ::
_,foo is an Unnamedvar 
The final tag string is ReturnBoolean="1" Parentstar="1" UnnamedVar="1" SuchThat="1" CondNum="4" RelNum="1" 
Your answer: true 
Correct answer: TRUE 
Missing: TRUE 
Additional: true 
25 - Parent, ParentStar ::
stmt foo;
Select BOOLEAN such that Parent(_,_)
TRUE
5000
Evaluating query 25 - Parent, ParentStar ::
_,_ is an Unnamedvar 
The final tag string is ReturnBoolean="1" Parent="1" UnnamedVar="1" SuchThat="1" CondNum="4" RelNum="1" 
Your answer: true 
Correct answer: TRUE 
Missing: TRUE 
Additional: true 
26 - Parent, ParentStar ::
stmt foo;
Select BOOLEAN such that Parent(1,9)
FALSE
5000
Evaluating query 26 - Parent, ParentStar ::
The final tag string is ReturnBoolean="1" Parent="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: false 
Correct answer: FALSE 
Missing: FALSE 
Additional: false 
27 - Parent, ParentStar ::
stmt foo;
Select BOOLEAN such that Parent(63,66)
FALSE
5000
Evaluating query 27 - Parent, ParentStar ::
The final tag string is ReturnBoolean="1" Parent="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: false 
Correct answer: FALSE 
Missing: FALSE 
Additional: false 
28 - Parent, ParentStar ::
stmt foo;
Select BOOLEAN such that Parent*(63,66)
TRUE
5000
Evaluating query 28 - Parent, ParentStar ::
The final tag string is ReturnBoolean="1" Parentstar="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: true 
Correct answer: TRUE 
Missing: TRUE 
Additional: true 
29 - Parent, ParentStar ::
stmt foo;
Select foo such that Parent*(foo,foo)
none
5000
Evaluating query 29 - Parent, ParentStar ::
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Parentstar="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 
Correct answer: 
30 - Parent, ParentStar ::
stmt foo;
Select BOOLEAN such that Parent(foo,foo)
FALSE
5000
Evaluating query 30 - Parent, ParentStar ::
The final tag string is ReturnBoolean="1" Parent="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: false 
Correct answer: FALSE 
Missing: FALSE 
Additional: false 
31 - Follows, FollowsStar ::
stmt s; 
Select s such that Follows(s, 11)
10
5000
Evaluating query 31 - Follows, FollowsStar ::
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Follows="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 10 
Correct answer: 10 
32 - Follows, FollowsStar :: 
stmt s;
Select s such that Follows(15, s)
46
5000
Evaluating query 32 - Follows, FollowsStar :: 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Follows="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 46 
Correct answer: 46 
33 - Follows, FollowsStar :: 
assign a;
Select a such that Follows(57, a)
61
5000
Evaluating query 33 - Follows, FollowsStar :: 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Follows="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 61 
Correct answer: 61 
34 - Follows, FollowsStar :: 
call c;
Select c such that Follows(55, c)
56
5000
Evaluating query 34 - Follows, FollowsStar :: 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Follows="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 56 
Correct answer: 56 
35 - Follows, FollowsStar ::
if i;
Select i such that Follows(62, i)
63
5000
Evaluating query 35 - Follows, FollowsStar ::
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Follows="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 63 
Correct answer: 63 
36 - Follows, FollowsStar ::
stmt s;
Select s such that Follows*(s, 26)
22,23,24,25
5000
Evaluating query 36 - Follows, FollowsStar ::
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Followsstar="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 22 23 24 25 
Correct answer: 22 23 24 25 
37 - Follows, FollowsStar ::
assign a;
Select a such that Follows*(16, a)
17,45
5000
Evaluating query 37 - Follows, FollowsStar ::
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Followsstar="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 17 45 
Correct answer: 17 45 
38 - Follows, FollowsStar ::
stmt s;
Select s such that Follows*(s, 12)
none
5000
Evaluating query 38 - Follows, FollowsStar ::
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Followsstar="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 
Correct answer: 
39 - Follows, FollowsStar ::
stmt s;
Select s such that Follows*(50, s)
none
5000
Evaluating query 39 - Follows, FollowsStar ::
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Followsstar="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 
Correct answer: 
40 - Follows, FollowsStar ::
stmt s;
Select s such that Follows*(s, 54)
53
5000
Evaluating query 40 - Follows, FollowsStar ::
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Followsstar="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 53 
Correct answer: 53 
41 - Follows, FollowsStar ::
stmt s;
Select BOOLEAN such that Follows(s,_)
TRUE
5000
Evaluating query 41 - Follows, FollowsStar ::
s,_ is an Unnamedvar 
The final tag string is ReturnBoolean="1" Follows="1" UnnamedVar="1" SuchThat="1" CondNum="4" RelNum="1" 
Your answer: true 
Correct answer: TRUE 
Missing: TRUE 
Additional: true 
42 - Follows, FollowsStar ::
stmt s;
Select BOOLEAN such that Follows*(s,_)
TRUE
5000
Evaluating query 42 - Follows, FollowsStar ::
s,_ is an Unnamedvar 
The final tag string is ReturnBoolean="1" Followsstar="1" UnnamedVar="1" SuchThat="1" CondNum="4" RelNum="1" 
Your answer: true 
Correct answer: TRUE 
Missing: TRUE 
Additional: true 
43 - Follows, FollowsStar ::
stmt foo;
Select BOOLEAN such that Follows(_,foo)
TRUE
5000
Evaluating query 43 - Follows, FollowsStar ::
_,foo is an Unnamedvar 
The final tag string is ReturnBoolean="1" Follows="1" UnnamedVar="1" SuchThat="1" CondNum="4" RelNum="1" 
Your answer: true 
Correct answer: TRUE 
Missing: TRUE 
Additional: true 
44 - Follows, FollowsStar ::
stmt foo;
Select BOOLEAN such that Follows*(_,foo)
TRUE
5000
Evaluating query 44 - Follows, FollowsStar ::
_,foo is an Unnamedvar 
The final tag string is ReturnBoolean="1" Followsstar="1" UnnamedVar="1" SuchThat="1" CondNum="4" RelNum="1" 
Your answer: true 
Correct answer: TRUE 
Missing: TRUE 
Additional: true 
45 - Follows, FollowsStar ::
stmt foo;
Select BOOLEAN such that Follows(_,_)
TRUE
5000
Evaluating query 45 - Follows, FollowsStar ::
_,_ is an Unnamedvar 
The final tag string is ReturnBoolean="1" Follows="1" UnnamedVar="1" SuchThat="1" CondNum="4" RelNum="1" 
Your answer: true 
Correct answer: TRUE 
Missing: TRUE 
Additional: true 
46 - Follows, FollowsStar ::
stmt foo;
Select BOOLEAN such that Follows(14,46)
FALSE
5000
Evaluating query 46 - Follows, FollowsStar ::
The final tag string is ReturnBoolean="1" Follows="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: false 
Correct answer: FALSE 
Missing: FALSE 
Additional: false 
47 - Follows, FollowsStar ::
stmt foo;
Select BOOLEAN such that Follows(15,46)
TRUE
5000
Evaluating query 47 - Follows, FollowsStar ::
The final tag string is ReturnBoolean="1" Follows="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: true 
Correct answer: TRUE 
Missing: TRUE 
Additional: true 
48 - Follows, FollowsStar ::
stmt foo;
Select BOOLEAN such that Follows*(13,46)
TRUE
5000
Evaluating query 48 - Follows, FollowsStar ::
The final tag string is ReturnBoolean="1" Followsstar="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: true 
Correct answer: TRUE 
Missing: TRUE 
Additional: true 
49 - Follows, FollowsStar ::
stmt foo;
Select BOOLEAN such that Follows*(foo,foo)
FALSE
5000
Evaluating query 49 - Follows, FollowsStar ::
The final tag string is ReturnBoolean="1" Followsstar="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: false 
Correct answer: FALSE 
Missing: FALSE 
Additional: false 
50 - Follows, FollowsStar ::
stmt foo;
Select BOOLEAN such that Follows*(foo,foo)
FALSE
5000
Evaluating query 50 - Follows, FollowsStar ::
The final tag string is ReturnBoolean="1" Followsstar="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: false 
Correct answer: FALSE 
Missing: FALSE 
Additional: false 
51 - Modifies, Typed :: Modifies(INTEGER,_)
variable v;
Select v such that Modifies(11,v)
y
5000
Evaluating query 51 - Modifies, Typed :: Modifies(INTEGER,_)
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Modifies="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: y 
Correct answer: y 
52 - Modifies, Typed :: Modifies(INTEGER,_)
variable v;
Select v such that Modifies(21,v)
a,b,c,e,x
5000
Evaluating query 52 - Modifies, Typed :: Modifies(INTEGER,_)
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Modifies="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: a x b c e 
Correct answer: a b c e x 
53 - Modifies, Typed :: Modifies(INTEGER,_)

Select BOOLEAN such that Modifies(12,_)
TRUE
5000
Evaluating query 53 - Modifies, Typed :: Modifies(INTEGER,_)
12,_ is an Unnamedvar 
The final tag string is ReturnBoolean="1" Modifies="1" UnnamedVar="1" SuchThat="1" CondNum="4" RelNum="1" 
Your answer: true 
Correct answer: TRUE 
Missing: TRUE 
Additional: true 
54 - Modifies, Typed :: Modifies(INTEGER,IDENT)

Select BOOLEAN such that Modifies(13,"y")
FALSE
5000
Evaluating query 54 - Modifies, Typed :: Modifies(INTEGER,IDENT)
The final tag string is ReturnBoolean="1" Modifies="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: false 
Correct answer: FALSE 
Missing: FALSE 
Additional: false 
55 - Modifies, Typed :: Modifies(INTEGER,SYNONYM)
variable v;
Select v such that Modifies(6,v)
m
5000
Evaluating query 55 - Modifies, Typed :: Modifies(INTEGER,SYNONYM)
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Modifies="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: m 
Correct answer: m 
56 - Modifies, Typed :: Modifies(INTEGER,SYNONYM)
variable v;
Select v.varName such that Modifies(12,v)
a,b,c,e,m,i,k,x,y
5000
Evaluating query 56 - Modifies, Typed :: Modifies(INTEGER,SYNONYM)
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Modifies="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: a x y b c m k i e 
Correct answer: a b c e m i k x y 
57 - Modifies, Typed :: Modifies(SYNONYM,IDENT)
procedure p;
Select p such that Modifies(p,"e")
q,a,p
5000
Evaluating query 57 - Modifies, Typed :: Modifies(SYNONYM,IDENT)
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Modifies="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: p a q 
Correct answer: q a p 
58 - Modifies, Typed :: Modifies(SYNONYM,_)
call c;
Select c such that Modifies(c,_)
3,10,36,50,56
5000
Evaluating query 58 - Modifies, Typed :: Modifies(SYNONYM,_)
c,_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Modifies="1" UnnamedVar="1" SuchThat="1" CondNum="4" RelNum="1" 
Your answer: 3 10 36 50 56 
Correct answer: 3 10 36 50 56 
59 - Modifies, Typed :: Modifies(SYNONYM,_)
procedure p;
Select BOOLEAN such that Modifies(p,_)
TRUE
5000
Evaluating query 59 - Modifies, Typed :: Modifies(SYNONYM,_)
p,_ is an Unnamedvar 
The final tag string is ReturnBoolean="1" Modifies="1" UnnamedVar="1" SuchThat="1" CondNum="4" RelNum="1" 
Your answer: true 
Correct answer: TRUE 
Missing: TRUE 
Additional: true 
60 - Modifies, Typed :: Modifies(SYNONYM,SYNONYM)
stmt s; variable v;
Select s such that Modifies(s,v)
1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74
5000
Evaluating query 60 - Modifies, Typed :: Modifies(SYNONYM,SYNONYM)
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Modifies="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 
Correct answer: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 
61 - Modifies, Typed :: Modifies(SYNONYM,SYNONYM)
procedure p; variable v;
Select p such that Modifies(p,v)
a,d,p,q
5000
Evaluating query 61 - Modifies, Typed :: Modifies(SYNONYM,SYNONYM)
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Modifies="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: p a q d 
Correct answer: a d p q 
62 - Modifies, Typed :: Modifies(IDENT,SYNONYM)
variable v;
Select v such that Modifies("p",v)
a,b,c,m,k,x,y,e,i
5000
Evaluating query 62 - Modifies, Typed :: Modifies(IDENT,SYNONYM)
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Modifies="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: a x y b c m k i e 
Correct answer: a b c m k x y e i 
63 - Modifies, Typed :: Modifies(IDENT,_)
call c;
Select c.procName such that Modifies("q",_)
a,d,q
5000
Evaluating query 63 - Modifies, Typed :: Modifies(IDENT,_)
"q",_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Modifies="1" UnnamedVar="1" SuchThat="1" CondNum="4" RelNum="1" 
Your answer: 3 10 36 50 56 
Correct answer: a d q 
Missing: a d q 
Additional: 10 3 36 50 56 
64 - Modifies, Typed :: Modifies(IDENT,IDENT)
prog_line n;
Select n such that Modifies("q","x")
1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74
5000
Evaluating query 64 - Modifies, Typed :: Modifies(IDENT,IDENT)
prog_line is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Modifies="1" UnnamedVar="1" SuchThat="1" CondNum="4" RelNum="1" 
Your answer: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 
Correct answer: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 
65 - Modifies, Typed :: Modifies(IDENT,IDENT)

Select BOOLEAN such that Modifies(14,_)
TRUE
5000
Evaluating query 65 - Modifies, Typed :: Modifies(IDENT,IDENT)
14,_ is an Unnamedvar 
The final tag string is ReturnBoolean="1" Modifies="1" UnnamedVar="1" SuchThat="1" CondNum="4" RelNum="1" 
Your answer: true 
Correct answer: TRUE 
Missing: TRUE 
Additional: true 
66 - Modifies, Typed :: Modifies(IDENT,IDENT)

Select BOOLEAN such that Modifies(18,"b")
TRUE
5000
Evaluating query 66 - Modifies, Typed :: Modifies(IDENT,IDENT)
The final tag string is ReturnBoolean="1" Modifies="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: true 
Correct answer: TRUE 
Missing: TRUE 
Additional: true 
67 - Modifies, Typed :: Modifies(IDENT,IDENT)
prog_line n;
Select BOOLEAN such that Modifies("q","x")
TRUE
5000
Evaluating query 67 - Modifies, Typed :: Modifies(IDENT,IDENT)
prog_line is an Unnamedvar 
The final tag string is ReturnBoolean="1" Modifies="1" UnnamedVar="1" SuchThat="1" CondNum="4" RelNum="1" 
Your answer: true 
Correct answer: TRUE 
Missing: TRUE 
Additional: true 
68 - Modifies, Typed :: Modifies(IDENT,IDENT)
prog_line n;
Select BOOLEAN such that Modifies(n,_)
TRUE
5000
Evaluating query 68 - Modifies, Typed :: Modifies(IDENT,IDENT)
prog_line is an Unnamedvar 
n,_ is an Unnamedvar 
The final tag string is ReturnBoolean="1" Modifies="1" UnnamedVar="2" SuchThat="1" CondNum="5" RelNum="1" 
Your answer: true 
Correct answer: TRUE 
Missing: TRUE 
Additional: true 
69 - Modifies, Typed :: Modifies(IDENT,IDENT)
prog_line n;
Select BOOLEAN such that Modifies(42,"x")
FALSE
5000
Evaluating query 69 - Modifies, Typed :: Modifies(IDENT,IDENT)
prog_line is an Unnamedvar 
The final tag string is ReturnBoolean="1" Modifies="1" UnnamedVar="1" SuchThat="1" CondNum="4" RelNum="1" 
Your answer: false 
Correct answer: FALSE 
Missing: FALSE 
Additional: false 
70 - Modifies, Typed :: Modifies(IDENT,IDENT)

Select BOOLEAN such that Modifies(36,"k")
TRUE
5000
Evaluating query 70 - Modifies, Typed :: Modifies(IDENT,IDENT)
The final tag string is ReturnBoolean="1" Modifies="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: true 
Correct answer: TRUE 
Missing: TRUE 
Additional: true 
71 - Uses, Typed :: Uses(INTEGER,_)
variable v;
Select v such that Uses(11,v)
x,b
5000
Evaluating query 71 - Uses, Typed :: Uses(INTEGER,_)
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Uses="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: x b 
Correct answer: x b 
72 - Uses, Typed :: Uses(INTEGER,_)
variable v;
Select v such that Uses(21,v)
b,c,d,e,x,z
5000
Evaluating query 72 - Uses, Typed :: Uses(INTEGER,_)
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Uses="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: x b c z d e 
Correct answer: b c d e x z 
73 - Uses, Typed :: Uses(INTEGER,_)

Select BOOLEAN such that Uses(12,_)
TRUE
5000
Evaluating query 73 - Uses, Typed :: Uses(INTEGER,_)
12,_ is an Unnamedvar 
The final tag string is ReturnBoolean="1" UnnamedVar="1" Uses="1" SuchThat="1" CondNum="4" RelNum="1" 
Your answer: true 
Correct answer: TRUE 
Missing: TRUE 
Additional: true 
74 - Uses, Typed :: Uses(INTEGER,IDENT)

Select BOOLEAN such that Uses(13,"y")
TRUE
5000
Evaluating query 74 - Uses, Typed :: Uses(INTEGER,IDENT)
The final tag string is ReturnBoolean="1" Uses="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: true 
Correct answer: TRUE 
Missing: TRUE 
Additional: true 
75 - Uses, Typed :: Uses(INTEGER,SYNONYM)
variable v;
Select v such that Uses(6,v)
m
5000
Evaluating query 75 - Uses, Typed :: Uses(INTEGER,SYNONYM)
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Uses="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: m 
Correct answer: m 
76 - Uses, Typed :: Uses(INTEGER,SYNONYM)
variable v;
Select v.varName such that Uses(12,v)
b,c,d,e,m,i,k,x,y,z
5000
Evaluating query 76 - Uses, Typed :: Uses(INTEGER,SYNONYM)
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Uses="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: x y b c m z k d i e 
Correct answer: b c d e m i k x y z 
77 - Uses, Typed :: Uses(SYNONYM,IDENT)
procedure p;
Select p such that Uses(p,"e")
q,a,p
5000
Evaluating query 77 - Uses, Typed :: Uses(SYNONYM,IDENT)
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Uses="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: p a q 
Correct answer: q a p 
78 - Uses, Typed :: Uses(SYNONYM,_)
call c;
Select c such that Uses(c,_)
3,10,36,50,56
5000
Evaluating query 78 - Uses, Typed :: Uses(SYNONYM,_)
c,_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" UnnamedVar="1" Uses="1" SuchThat="1" CondNum="4" RelNum="1" 
Your answer: 3 10 36 50 56 
Correct answer: 3 10 36 50 56 
79 - Uses, Typed :: Uses(SYNONYM,_)
procedure p;
Select BOOLEAN such that Uses(p,_)
TRUE
5000
Evaluating query 79 - Uses, Typed :: Uses(SYNONYM,_)
p,_ is an Unnamedvar 
The final tag string is ReturnBoolean="1" UnnamedVar="1" Uses="1" SuchThat="1" CondNum="4" RelNum="1" 
Your answer: true 
Correct answer: TRUE 
Missing: TRUE 
Additional: true 
80 - Uses, Typed :: Uses(SYNONYM,SYNONYM)
stmt s; variable v;
Select s such that Uses(s,v)
1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74
5000
Evaluating query 80 - Uses, Typed :: Uses(SYNONYM,SYNONYM)
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Uses="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 1 2 3 4 5 6 7 8 9 10 11 12 13 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 
Correct answer: 1 2 3 4 5 6 7 8 9 10 11 12 13 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 
81 - Uses, Typed :: Uses(SYNONYM,SYNONYM)
procedure p; variable v;
Select p such that Uses(p,v)
a,d,p,q
5000
Evaluating query 81 - Uses, Typed :: Uses(SYNONYM,SYNONYM)
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Uses="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: p a q d 
Correct answer: a d p q 
82 - Uses, Typed :: Uses(IDENT,SYNONYM)
variable v;
Select v such that Uses("p",v)
b,d,m,x,y,z,c,e,i,k
5000
Evaluating query 82 - Uses, Typed :: Uses(IDENT,SYNONYM)
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Uses="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: x y b c m z k d i e 
Correct answer: b d m x y z c e i k 
83 - Uses, Typed :: Uses(IDENT,_)
call c;
Select c.procName such that Uses("q",_)
a,d,q
5000
Evaluating query 83 - Uses, Typed :: Uses(IDENT,_)
"q",_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" UnnamedVar="1" Uses="1" SuchThat="1" CondNum="4" RelNum="1" 
Your answer: 3 10 36 50 56 
Correct answer: a d q 
Missing: a d q 
Additional: 10 3 36 50 56 
84 - Uses, Typed :: Uses(IDENT,IDENT)
prog_line n;
Select n such that Uses("q","x")
1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74
5000
Evaluating query 84 - Uses, Typed :: Uses(IDENT,IDENT)
prog_line is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" UnnamedVar="1" Uses="1" SuchThat="1" CondNum="4" RelNum="1" 
Your answer: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 
Correct answer: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 
85 - Uses, Typed :: Uses(IDENT,IDENT)

Select BOOLEAN such that Uses(14,_)
FALSE
5000
Evaluating query 85 - Uses, Typed :: Uses(IDENT,IDENT)
14,_ is an Unnamedvar 
The final tag string is ReturnBoolean="1" UnnamedVar="1" Uses="1" SuchThat="1" CondNum="4" RelNum="1" 
Your answer: false 
Correct answer: FALSE 
Missing: FALSE 
Additional: false 
86 - Uses, Typed :: Uses(IDENT,IDENT)

Select BOOLEAN such that Uses(18,"b")
TRUE
5000
Evaluating query 86 - Uses, Typed :: Uses(IDENT,IDENT)
The final tag string is ReturnBoolean="1" Uses="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: true 
Correct answer: TRUE 
Missing: TRUE 
Additional: true 
87 - Uses, Typed :: Uses(IDENT,IDENT)
prog_line n;
Select BOOLEAN such that Uses("q","x")
TRUE
5000
Evaluating query 87 - Uses, Typed :: Uses(IDENT,IDENT)
prog_line is an Unnamedvar 
The final tag string is ReturnBoolean="1" UnnamedVar="1" Uses="1" SuchThat="1" CondNum="4" RelNum="1" 
Your answer: true 
Correct answer: TRUE 
Missing: TRUE 
Additional: true 
88 - Uses, Typed :: Uses(IDENT,IDENT)
prog_line n;
Select BOOLEAN such that Uses(n,_)
TRUE
5000
Evaluating query 88 - Uses, Typed :: Uses(IDENT,IDENT)
prog_line is an Unnamedvar 
n,_ is an Unnamedvar 
The final tag string is ReturnBoolean="1" UnnamedVar="2" Uses="1" SuchThat="1" CondNum="5" RelNum="1" 
Your answer: true 
Correct answer: TRUE 
Missing: TRUE 
Additional: true 
89 - Uses, Typed :: Uses(IDENT,IDENT)
prog_line n;
Select BOOLEAN such that Uses(42,"lala")
FALSE
5000
Evaluating query 89 - Uses, Typed :: Uses(IDENT,IDENT)
prog_line is an Unnamedvar 
The final tag string is ReturnBoolean="1" UnnamedVar="1" Uses="1" SuchThat="1" CondNum="4" RelNum="1" 
Your answer: false 
Correct answer: FALSE 
Missing: FALSE 
Additional: false 
90 - Uses, Typed :: Uses(IDENT,IDENT)

Select BOOLEAN such that Uses(36,"k")
TRUE
5000
Evaluating query 90 - Uses, Typed :: Uses(IDENT,IDENT)
The final tag string is ReturnBoolean="1" Uses="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: true 
Correct answer: TRUE 
Missing: TRUE 
Additional: true 
91 - Next, NextStar ::
stmt s; 
Select s such that Next(s, 11)
10
5000
Evaluating query 91 - Next, NextStar ::
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Next="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 10 
Correct answer: 10 
92 - Next, NextStar :: 
stmt s;
Select s such that Next(15, s)
16,46
5000
Evaluating query 92 - Next, NextStar :: 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Next="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 16 46 
Correct answer: 16 46 
93 - Next, NextStar :: 
assign a;
Select a such that Next(57, a)
58,59
5000
Evaluating query 93 - Next, NextStar :: 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Next="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 58 59 
Correct answer: 58 59 
94 - Next, NextStar :: 
call c;
Select c such that Next(55, c)
56
5000
Evaluating query 94 - Next, NextStar :: 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Next="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 56 
Correct answer: 56 
95 - Next, NextStar ::
if i;
Select i such that Next(62, i)
63
5000
Evaluating query 95 - Next, NextStar ::
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Next="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 63 
Correct answer: 63 
96 - Next, NextStar ::
stmt s;
Select s such that Next*(s, 26)
12,13,14,15,16,17,19,20,18,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45
5000
Evaluating query 96 - Next, NextStar ::
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Nextstar="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
Correct answer: 12 13 14 15 16 17 19 20 18 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
97 - Next, NextStar ::
assign a;
Select a such that Next*(16, a)
16,17,19,20,22,23,24,25,27,28,30,31,32,35,37,38,39,40,42,43,44,45,46
5000
Evaluating query 97 - Next, NextStar ::
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Nextstar="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 16 17 19 20 22 23 24 25 27 28 30 31 32 35 37 38 39 40 42 43 44 45 46 
Correct answer: 16 17 19 20 22 23 24 25 27 28 30 31 32 35 37 38 39 40 42 43 44 45 46 
98 - Next, NextStar ::
stmt s;
Select s such that Next*(s, 12)
none
5000
Evaluating query 98 - Next, NextStar ::
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Nextstar="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 
Correct answer: 
99 - Next, NextStar ::
stmt s;
Select s such that Next*(50, s)
48,49,50
5000
Evaluating query 99 - Next, NextStar ::
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Nextstar="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 48 49 50 
Correct answer: 48 49 50 
100 - Next, NextStar ::
stmt s;
Select s such that Next*(s, 54)
51,52,53,54
5000
Evaluating query 100 - Next, NextStar ::
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Nextstar="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 51 52 53 54 
Correct answer: 51 52 53 54 
101 - Next, NextStar ::
stmt s;
Select BOOLEAN such that Next(s,_)
TRUE
5000
Evaluating query 101 - Next, NextStar ::
s,_ is an Unnamedvar 
The final tag string is ReturnBoolean="1" Next="1" UnnamedVar="1" SuchThat="1" CondNum="4" RelNum="1" 
Your answer: true 
Correct answer: TRUE 
Missing: TRUE 
Additional: true 
102 - Next, NextStar ::
stmt s;
Select BOOLEAN such that Next*(s,_)
TRUE
5000
Evaluating query 102 - Next, NextStar ::
s,_ is an Unnamedvar 
The final tag string is ReturnBoolean="1" Nextstar="1" UnnamedVar="1" SuchThat="1" CondNum="4" RelNum="1" 
Your answer: true 
Correct answer: TRUE 
Missing: TRUE 
Additional: true 
103 - Next, NextStar ::
stmt foo;
Select BOOLEAN such that Next(_,foo)
TRUE
5000
Evaluating query 103 - Next, NextStar ::
_,foo is an Unnamedvar 
The final tag string is ReturnBoolean="1" Next="1" UnnamedVar="1" SuchThat="1" CondNum="4" RelNum="1" 
Your answer: true 
Correct answer: TRUE 
Missing: TRUE 
Additional: true 
104 - Next, NextStar ::
stmt foo;
Select BOOLEAN such that Next*(_,foo)
TRUE
5000
Evaluating query 104 - Next, NextStar ::
_,foo is an Unnamedvar 
The final tag string is ReturnBoolean="1" Nextstar="1" UnnamedVar="1" SuchThat="1" CondNum="4" RelNum="1" 
Your answer: true 
Correct answer: TRUE 
Missing: TRUE 
Additional: true 
105 - Next, NextStar ::
stmt foo;
Select BOOLEAN such that Next(_,_)
TRUE
5000
Evaluating query 105 - Next, NextStar ::
_,_ is an Unnamedvar 
The final tag string is ReturnBoolean="1" Next="1" UnnamedVar="1" SuchThat="1" CondNum="4" RelNum="1" 
Your answer: true 
Correct answer: TRUE 
Missing: TRUE 
Additional: true 
106 - Next, NextStar ::
stmt foo;
Select BOOLEAN such that Next(14,46)
FALSE
5000
Evaluating query 106 - Next, NextStar ::
The final tag string is ReturnBoolean="1" Next="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: false 
Correct answer: FALSE 
Missing: FALSE 
Additional: false 
107 - Next, NextStar ::
stmt foo;
Select BOOLEAN such that Next(15,46)
TRUE
5000
Evaluating query 107 - Next, NextStar ::
The final tag string is ReturnBoolean="1" Next="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: true 
Correct answer: TRUE 
Missing: TRUE 
Additional: true 
108 - Next, NextStar ::
stmt foo;
Select BOOLEAN such that Next*(1,74)
FALSE
5000
Evaluating query 108 - Next, NextStar ::
The final tag string is ReturnBoolean="1" Nextstar="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: false 
Correct answer: FALSE 
Missing: FALSE 
Additional: false 
109 - Next, NextStar ::
stmt foo;
Select BOOLEAN such that Next*(foo,foo)
TRUE
5000
Evaluating query 109 - Next, NextStar ::
The final tag string is ReturnBoolean="1" Nextstar="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: true 
Correct answer: TRUE 
Missing: TRUE 
Additional: true 
110 - Next, NextStar ::
stmt foo;
Select BOOLEAN such that Next(foo,foo)
FALSE
5000
Evaluating query 110 - Next, NextStar ::
The final tag string is ReturnBoolean="1" Next="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: false 
Correct answer: FALSE 
Missing: FALSE 
Additional: false 
111 - Affects :: 
assign a; 
Select a such that Affects (6, a)
6,7,8
5000
Evaluating query 111 - Affects :: 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Affects="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 
Correct answer: 6 7 8 
Missing: 6 7 8 
Additional: 
112 - Affects ::
assign a; 
Select a such that Affects (55, a)
58, 59, 60
5000
Evaluating query 112 - Affects ::
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Affects="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 
Correct answer: 58 59 60 
Missing: 58 59 60 
Additional: 
113 - Affects ::
assign a; 
Select a such that Affects (14,_)
1,2,6,7,8,9,11,13,14,16,17,19,20,22,23,24,25,27,28,30,31,32,35,37,38,39,40,42,43,44,45,46,47,49,53,54,55,58,59,60,61,62,66,67,68,70,72,73,74
5000
Evaluating query 113 - Affects ::
14,_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Affects="1" UnnamedVar="1" SuchThat="1" CondNum="4" RelNum="1" 
Your answer: 
Correct answer: 1 2 6 7 8 9 11 13 14 16 17 19 20 22 23 24 25 27 28 30 31 32 35 37 38 39 40 42 43 44 45 46 47 49 53 54 55 58 59 60 61 62 66 67 68 70 72 73 74 
Missing: 1 11 13 14 16 17 19 2 20 22 23 24 25 27 28 30 31 32 35 37 38 39 40 42 43 44 45 46 47 49 53 54 55 58 59 6 60 61 62 66 67 68 7 70 72 73 74 8 9 
Additional: 
114 - Affects ::
assign a; 
Select BOOLEAN such that Affects (17, 49)
FALSE
5000
Evaluating query 114 - Affects ::
The final tag string is Affects="1" ReturnBoolean="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: false 
Correct answer: FALSE 
Missing: FALSE 
Additional: false 
115 - Affects ::
assign a; 
Select a such that Affects (23, 1)
none
5000
Evaluating query 115 - Affects ::
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Affects="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 
Correct answer: 
116 - Affects ::
assign a; 
Select a such that Affects (23, a)
16, 19, 22, 24, 27, 28, 32, 45
5000
Evaluating query 116 - Affects ::
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Affects="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 
Correct answer: 16 19 22 24 27 28 32 45 
Missing: 16 19 22 24 27 28 32 45 
Additional: 
117 - Affects ::
assign a; 
Select BOOLEAN such that Affects (62,_)
TRUE
5000
Evaluating query 117 - Affects ::
62,_ is an Unnamedvar 
The final tag string is Affects="1" ReturnBoolean="1" UnnamedVar="1" SuchThat="1" CondNum="4" RelNum="1" 
Your answer: false 
Correct answer: TRUE 
Missing: TRUE 
Additional: false 
118 - AffectsStar ::
assign a; 
Select a such that Affects* (23, a)
16,19,22,24,27,28,32,45,25,31,46,17,20,38,39,23,35,42,44,43
5000
Evaluating query 118 - AffectsStar ::
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Affectsstar="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 
Correct answer: 16 19 22 24 27 28 32 45 25 31 46 17 20 38 39 23 35 42 44 43 
Missing: 16 17 19 20 22 23 24 25 27 28 31 32 35 38 39 42 43 44 45 46 
Additional: 
119 - AffectsStar ::
assign a; 
Select a such that Affects* (53, a)
54, 55, 58, 59, 60, 61 
5000
Evaluating query 119 - AffectsStar ::
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Affectsstar="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 
Correct answer: 54 55 58 59 60 61 
Missing: 54 55 58 59 60 61 
Additional: 
120 - Affects ::
assign a; 
Select BOOLEAN such that Affects* (_,_)
TRUE
5000
Evaluating query 120 - Affects ::
_,_ is an Unnamedvar 
The final tag string is Affectsstar="1" ReturnBoolean="1" UnnamedVar="1" SuchThat="1" CondNum="4" RelNum="1" 
Your answer: false 
Correct answer: TRUE 
Missing: TRUE 
Additional: false 
121 - AffectsStar ::
assign a; 
Select a such that Affects* (a, 32)
28,23,13,24,14,16,17,20,25,27,30,32,40,43,39,37
5000
Evaluating query 121 - AffectsStar ::
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Affectsstar="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 
Correct answer: 28 23 13 24 14 16 17 20 25 27 30 32 40 43 39 37 
Missing: 13 14 16 17 20 23 24 25 27 28 30 32 37 39 40 43 
Additional: 
122 - AffectsStar ::
assign a; 
Select a such that Affects* (17, a)
17,19,38,39,42,45,46,20,16,22,32,27,31,44,43,35
5000
Evaluating query 122 - AffectsStar ::
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Affectsstar="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 
Correct answer: 17 19 38 39 42 45 46 20 16 22 32 27 31 44 43 35 
Missing: 16 17 19 20 22 27 31 32 35 38 39 42 43 44 45 46 
Additional: 
123 - Affects::
assign a;
Select BOOLEAN such that Affects (9, 11)
FALSE
5000
Evaluating query 123 - Affects::
The final tag string is Affects="1" ReturnBoolean="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: false 
Correct answer: FALSE 
Missing: FALSE 
Additional: false 
124 - Affects::
if i;
Select i.stmt# such that Affects (13, 16)
4,12,18,29,33,34,57,63,64,65,71
5000
Evaluating query 124 - Affects::
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Affects="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 
Correct answer: 4 12 18 29 33 34 57 63 64 65 71 
Missing: 12 18 29 33 34 4 57 63 64 65 71 
Additional: 
125 - Affects::
assign a;
Select BOOLEAN such that Affects (17, 19)
TRUE
5000
Evaluating query 125 - Affects::
The final tag string is Affects="1" ReturnBoolean="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: false 
Correct answer: TRUE 
Missing: TRUE 
Additional: false 
126 - Affects::
assign a;
Select BOOLEAN such that Affects (20, 27)
TRUE
5000
Evaluating query 126 - Affects::
The final tag string is Affects="1" ReturnBoolean="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: false 
Correct answer: TRUE 
Missing: TRUE 
Additional: false 
127 - Affects::
assign a;
Select BOOLEAN such that Affects (_,58)
TRUE
5000
Evaluating query 127 - Affects::
_,58 is an Unnamedvar 
The final tag string is Affects="1" ReturnBoolean="1" UnnamedVar="1" SuchThat="1" CondNum="4" RelNum="1" 
Your answer: false 
Correct answer: TRUE 
Missing: TRUE 
Additional: false 
128 - Affects::
assign a;
Select a such that Affects (a, 13)
none
5000
Evaluating query 128 - Affects::
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Affects="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 
Correct answer: 
129 - Affects::
assign a;
Select a such that Affects (a, 72)
72
5000
Evaluating query 129 - Affects::
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Affects="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 
Correct answer: 72 
Missing: 72 
Additional: 
130 - Affects::
assign a;
Select a such that Affects (a, 27)
27, 28,23,20
5000
Evaluating query 130 - Affects::
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Affects="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 
Correct answer: 27 28 23 20 
Missing: 20 23 27 28 
Additional: 
131 - Affects::
assign a;
Select a such that Affects (a, 45)
27,37,39,17,20,23,28,13
5000
Evaluating query 131 - Affects::
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Affects="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 
Correct answer: 27 37 39 17 20 23 28 13 
Missing: 13 17 20 23 27 28 37 39 
Additional: 
132 - Affects::
assign a;
Select a such that Affects (a, 54)
53
5000
Evaluating query 132 - Affects::
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Affects="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 
Correct answer: 53 
Missing: 53 
Additional: 
133 - Affects::
assign a;
Select a such that Affects (a, 68)
62
5000
Evaluating query 133 - Affects::
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Affects="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 
Correct answer: 62 
Missing: 62 
Additional: 
134 - Affects::
assign a;
Select a such that Affects (6, a)
6,7,8
5000
Evaluating query 134 - Affects::
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Affects="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 
Correct answer: 6 7 8 
Missing: 6 7 8 
Additional: 
135 - Affects::
assign a;
Select a such that Affects (11, a)
none
5000
Evaluating query 135 - Affects::
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Affects="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 
Correct answer: 
136 - Affects::
assign a;
Select a such that Affects (24, a)
16, 23, 25
5000
Evaluating query 136 - Affects::
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Affects="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 
Correct answer: 16 23 25 
Missing: 16 23 25 
Additional: 
137 - Affects::
assign a;
Select a such that Affects (30, a)
24
5000
Evaluating query 137 - Affects::
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Affects="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 
Correct answer: 24 
Missing: 24 
Additional: 
138 - Affects::
assign a;
Select a such that Affects (74, a)
none
5000
Evaluating query 138 - Affects::
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Affects="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 
Correct answer: 
139 - Affects::
assign a;
Select a such that Affects (58, a)
none
5000
Evaluating query 139 - Affects::
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Affects="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 
Correct answer: 
140 - Affects::
assign a; constant c;
Select c.value such that Affects (a,a)
1,2,3,5,8
5000
Evaluating query 140 - Affects::
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Affects="1" SuchThat="1" CondNum="3" RelNum="1" 
Your answer: 
Correct answer: 1 2 3 5 8 
Missing: 1 2 3 5 8 
Additional: 
141 - AssignPattern, Typed, ImplStmtLine :: Which assignments have subexpression 'm'?
assign a;
Select a pattern a(_, _"      m  "_)
2,6,7,8,13,30,32,38,40,45,53,55,58,59,62,72,73
5000
Evaluating query 141 - AssignPattern, Typed, ImplStmtLine :: Which assignments have subexpression 'm'?
_, is an Unnamedvar 
_" is an Unnamedvar 
"_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" UnnamedVar="3" Pattern="1" CondNum="5" RelNum="0" 
Your answer: 2 6 7 8 13 30 32 38 40 45 53 55 58 59 62 72 73 
Correct answer: 2 6 7 8 13 30 32 38 40 45 53 55 58 59 62 72 73 
142 - AssignPattern, Typed, ImplStmtLine :: Which assignments have 'm' on the left side and subexpression 'i' on the right side?
assign a;
Select a pattern a("  m", _"  i "_)
none
5000
Evaluating query 142 - AssignPattern, Typed, ImplStmtLine :: Which assignments have 'm' on the left side and subexpression 'i' on the right side?
_" is an Unnamedvar 
"_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" UnnamedVar="2" Pattern="1" CondNum="4" RelNum="0" 
Your answer: 
Correct answer: 
143 - AssignPattern, Typed, ImplStmtLine :: Which variables appear on the left side of assignments with subexpression 'i' on the right side?
variable v; assign a;
Select v pattern a(v, _"  i    "_)
a,x,b,y,i
5000
Evaluating query 143 - AssignPattern, Typed, ImplStmtLine :: Which variables appear on the left side of assignments with subexpression 'i' on the right side?
_" is an Unnamedvar 
"_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" UnnamedVar="2" Pattern="1" CondNum="4" RelNum="0" 
Your answer: a x y b i 
Correct answer: a x b y i 
144 - AssignPattern, Typed, ImplStmtLine :: Which assignments have x on the left side?
assign a;
Select a pattern a("    x", _)
9,14,17,20,27,49,53
5000
Evaluating query 144 - AssignPattern, Typed, ImplStmtLine :: Which assignments have x on the left side?
_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" UnnamedVar="1" Pattern="1" CondNum="3" RelNum="0" 
Your answer: 9 14 17 20 27 49 53 
Correct answer: 9 14 17 20 27 49 53 
145 - AssignPattern, Typed, ImplStmtLine :: Which are all the assignment statements?
assign a;
Select a pattern a(_,_)
1,2,6,7,8,9,11,13,14,16,17,19,20,22,23,24,25,27,28,30,31,32,35,37,38,39,40,42,43,44,45,46,47,49,53,54,55,58,59,60,61,62,66,67,68,70,72,73,74
5000
Evaluating query 145 - AssignPattern, Typed, ImplStmtLine :: Which are all the assignment statements?
_,_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" UnnamedVar="1" Pattern="1" CondNum="3" RelNum="0" 
Your answer: 1 2 6 7 8 9 11 13 14 16 17 19 20 22 23 24 25 27 28 30 31 32 35 37 38 39 40 42 43 44 45 46 47 49 53 54 55 58 59 60 61 62 66 67 68 70 72 73 74 
Correct answer: 1 2 6 7 8 9 11 13 14 16 17 19 20 22 23 24 25 27 28 30 31 32 35 37 38 39 40 42 43 44 45 46 47 49 53 54 55 58 59 60 61 62 66 67 68 70 72 73 74 
146 - AssignPattern, Typed, ImplStmtLine :: Which variables appear on both sides?
variable v; assign a;
Select v pattern a(v,"            2- 8 ")
x
5000
Evaluating query 146 - AssignPattern, Typed, ImplStmtLine :: Which variables appear on both sides?
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Pattern="1" CondNum="2" RelNum="0" 
Your answer: x 
Correct answer: x 
147 - AssignPattern, Typed, ImplStmtLine :: Pattern matching?
assign a;
Select a pattern a(_,_" b   +        d "_)
none
5000
Evaluating query 147 - AssignPattern, Typed, ImplStmtLine :: Pattern matching?
_,_" is an Unnamedvar 
"_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" UnnamedVar="2" Pattern="1" CondNum="4" RelNum="0" 
Your answer: 
Correct answer: 
148 - AssignPattern, Typed, ImplStmtLine :: Pattern matching?
assign a;
Select a pattern a(_,_" i      - k"_)
none
5000
Evaluating query 148 - AssignPattern, Typed, ImplStmtLine :: Pattern matching?
_,_" is an Unnamedvar 
k"_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" UnnamedVar="2" Pattern="1" CondNum="4" RelNum="0" 
Your answer: 
Correct answer: 
149 - AssignPattern, Typed, ImplStmtLine :: Pattern matching?
assign a;
Select a pattern a(_,_" b-m-x "_)
58,73
5000
Evaluating query 149 - AssignPattern, Typed, ImplStmtLine :: Pattern matching?
_,_" is an Unnamedvar 
"_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" UnnamedVar="2" Pattern="1" CondNum="4" RelNum="0" 
Your answer: 58 73 
Correct answer: 58 73 
150 - AssignPattern, Typed, ImplStmtLine :: Pattern matching?
assign a;
Select a pattern a(_,_"3"_)
2,16,19,23,45,46,74
5000
Evaluating query 150 - AssignPattern, Typed, ImplStmtLine :: Pattern matching?
_,_"3"_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" UnnamedVar="1" Pattern="1" CondNum="3" RelNum="0" 
Your answer: 2 16 19 23 45 46 74 
Correct answer: 2 16 19 23 45 46 74 
151 - IfPattern, Typed, ImplStmtLine :: Pattern matching?
if i;
Select BOOLEAN pattern i(_,_,_)
TRUE
5000
Evaluating query 151 - IfPattern, Typed, ImplStmtLine :: Pattern matching?
_,_,_ is an Unnamedvar 
The final tag string is ReturnBoolean="1" UnnamedVar="1" Pattern="1" CondNum="3" RelNum="0" 
Your answer: true 
Correct answer: TRUE 
Missing: TRUE 
Additional: true 
152 - IfPattern, Typed, ImplStmtLine :: Pattern matching?
if i; variable v;
Select v pattern i(_,_,_)
a,b,c,d,e,i,k,m,x,y,z
5000
Evaluating query 152 - IfPattern, Typed, ImplStmtLine :: Pattern matching?
_,_,_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" UnnamedVar="1" Pattern="1" CondNum="3" RelNum="0" 
Your answer: a x y b c m z k d i e 
Correct answer: a b c d e i k m x y z 
153 - IfPattern, Typed, ImplStmtLine :: Pattern matching?
if i; variable v;
Select v pattern i(v,_,_)
b,i,y,z,m,k,x
5000
Evaluating query 153 - IfPattern, Typed, ImplStmtLine :: Pattern matching?
v,_,_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" UnnamedVar="1" Pattern="1" CondNum="3" RelNum="0" 
Your answer: x y b m z k i 
Correct answer: b i y z m k x 
154 - IfPattern, Typed, ImplStmtLine :: Pattern matching?
if i; variable v;
Select v.varName pattern i(" x",_,_)
a,b,c,d,e,i,k,m,x,y,z
5000
Evaluating query 154 - IfPattern, Typed, ImplStmtLine :: Pattern matching?
x",_,_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" UnnamedVar="1" Pattern="1" CondNum="3" RelNum="0" 
Your answer: a x y b c m z k d i e 
Correct answer: a b c d e i k m x y z 
155 - IfPattern, Typed, ImplStmtLine :: Pattern matching?
if i; stmt s;
Select i.stmt# pattern i("k   ",_,_)
65
5000
Evaluating query 155 - IfPattern, Typed, ImplStmtLine :: Pattern matching?
",_,_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" UnnamedVar="1" Pattern="1" CondNum="3" RelNum="0" 
Your answer: 65 
Correct answer: 65 
156 - IfPattern, Typed, ImplStmtLine :: Pattern matching?
if i; stmt s;
Select s pattern i("      STARBUCKS",_,_)
none
5000
Evaluating query 156 - IfPattern, Typed, ImplStmtLine :: Pattern matching?
STARBUCKS",_,_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" UnnamedVar="1" Pattern="1" CondNum="3" RelNum="0" 
Your answer: 
Correct answer: 
157 - IfPattern, Typed, ImplStmtLine :: Pattern matching?
if i; variable v;
Select i pattern i(v,_,_)
4,12,18,29,33,34,57,63,64,65,71
5000
Evaluating query 157 - IfPattern, Typed, ImplStmtLine :: Pattern matching?
v,_,_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" UnnamedVar="1" Pattern="1" CondNum="3" RelNum="0" 
Your answer: 4 12 18 29 33 34 57 63 64 65 71 
Correct answer: 4 12 18 29 33 34 57 63 64 65 71 
158 - IfPattern, Typed, ImplStmtLine :: Pattern matching?
assign a; if i;
Select i pattern i(" tHISiSalONGiDENTITY",_,_)
none
5000
Evaluating query 158 - IfPattern, Typed, ImplStmtLine :: Pattern matching?
tHISiSalONGiDENTITY",_,_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" UnnamedVar="1" Pattern="1" CondNum="3" RelNum="0" 
Your answer: 
Correct answer: 
159 - IfPattern, Typed, ImplStmtLine :: Pattern matching?
assign a; if i;
Select a pattern i("z",_,_)
1,2,6,7,8,9,11,13,14,16,17,19,20,22,23,24,25,27,28,30,31,32,35,37,38,39,40,42,43,44,45,46,47,49,53,54,55,58,59,60,61,62,66,67,68,70,72,73,74
5000
Evaluating query 159 - IfPattern, Typed, ImplStmtLine :: Pattern matching?
"z",_,_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" UnnamedVar="1" Pattern="1" CondNum="3" RelNum="0" 
Your answer: 1 2 6 7 8 9 11 13 14 16 17 19 20 22 23 24 25 27 28 30 31 32 35 37 38 39 40 42 43 44 45 46 47 49 53 54 55 58 59 60 61 62 66 67 68 70 72 73 74 
Correct answer: 1 2 6 7 8 9 11 13 14 16 17 19 20 22 23 24 25 27 28 30 31 32 35 37 38 39 40 42 43 44 45 46 47 49 53 54 55 58 59 60 61 62 66 67 68 70 72 73 74 
160 - IfPattern, Typed, ImplStmtLine :: Pattern matching?
variable v; if i; assign AvERYlONGaSSIGNnAMEwHICHiSuSEDtOtEST;
Select AvERYlONGaSSIGNnAMEwHICHiSuSEDtOtEST pattern i("i",_,_)
1,2,6,7,8,9,11,13,14,16,17,19,20,22,23,24,25,27,28,30,31,32,35,37,38,39,40,42,43,44,45,46,47,49,53,54,55,58,59,60,61,62,66,67,68,70,72,73,74
5000
Evaluating query 160 - IfPattern, Typed, ImplStmtLine :: Pattern matching?
"i",_,_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" UnnamedVar="1" Pattern="1" CondNum="3" RelNum="0" 
Your answer: 1 2 6 7 8 9 11 13 14 16 17 19 20 22 23 24 25 27 28 30 31 32 35 37 38 39 40 42 43 44 45 46 47 49 53 54 55 58 59 60 61 62 66 67 68 70 72 73 74 
Correct answer: 1 2 6 7 8 9 11 13 14 16 17 19 20 22 23 24 25 27 28 30 31 32 35 37 38 39 40 42 43 44 45 46 47 49 53 54 55 58 59 60 61 62 66 67 68 70 72 73 74 
161 - WhilePattern, Typed, ImplStmtLine :: Pattern matching?
while w;
Select BOOLEAN pattern w(_,_)
TRUE
5000
Evaluating query 161 - WhilePattern, Typed, ImplStmtLine :: Pattern matching?
_,_ is an Unnamedvar 
The final tag string is ReturnBoolean="1" UnnamedVar="1" Pattern="1" CondNum="3" RelNum="0" 
Your answer: true 
Correct answer: TRUE 
Missing: TRUE 
Additional: true 
162 - WhilePattern, Typed, ImplStmtLine :: Pattern matching?
while w; variable v;
Select v pattern w(_,_)
a,b,c,d,e,i,k,m,x,y,z
5000
Evaluating query 162 - WhilePattern, Typed, ImplStmtLine :: Pattern matching?
_,_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" UnnamedVar="1" Pattern="1" CondNum="3" RelNum="0" 
Your answer: a x y b c m z k d i e 
Correct answer: a b c d e i k m x y z 
163 - WhilePattern, Typed, ImplStmtLine :: Pattern matching?
while w; variable v;
Select v pattern w(v,_)
b,i,y,z,m,k,x,d
5000
Evaluating query 163 - WhilePattern, Typed, ImplStmtLine :: Pattern matching?
v,_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" UnnamedVar="1" Pattern="1" CondNum="3" RelNum="0" 
Your answer: x y b m z k d i 
Correct answer: b i y z m k x d 
164 - WhilePattern, Typed, ImplStmtLine :: Pattern matching?
while w; variable v;
Select v.varName pattern w("x",_)
a,b,c,d,e,i,k,m,x,y,z
5000
Evaluating query 164 - WhilePattern, Typed, ImplStmtLine :: Pattern matching?
"x",_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" UnnamedVar="1" Pattern="1" CondNum="3" RelNum="0" 
Your answer: a x y b c m z k d i e 
Correct answer: a b c d e i k m x y z 
165 - WhilePattern, Typed, ImplStmtLine :: Pattern matching?
while w; stmt s;
Select w.stmt# pattern w("k",_)
48
5000
Evaluating query 165 - WhilePattern, Typed, ImplStmtLine :: Pattern matching?
"k",_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" UnnamedVar="1" Pattern="1" CondNum="3" RelNum="0" 
Your answer: 48 
Correct answer: 48 
166 - WhilePattern, Typed, ImplStmtLine :: Pattern matching?
while w; stmt s;
Select s pattern w("STARBUCKSSUCKS      ",_)
none
5000
Evaluating query 166 - WhilePattern, Typed, ImplStmtLine :: Pattern matching?
",_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" UnnamedVar="1" Pattern="1" CondNum="3" RelNum="0" 
Your answer: 
Correct answer: 
167 - WhilePattern, Typed, ImplStmtLine :: Pattern matching?
while w; variable v;
Select w pattern w(v,_)
5,15,21,26,41,48,51,52,69
5000
Evaluating query 167 - WhilePattern, Typed, ImplStmtLine :: Pattern matching?
v,_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" UnnamedVar="1" Pattern="1" CondNum="3" RelNum="0" 
Your answer: 5 15 21 26 41 48 51 52 69 
Correct answer: 5 15 21 26 41 48 51 52 69 
168 - WhilePattern, Typed, ImplStmtLine :: Pattern matching?
variable v; while w;
Select w pattern w(v,_)
5,15,21,26,41,48,51,52,69
5000
Evaluating query 168 - WhilePattern, Typed, ImplStmtLine :: Pattern matching?
v,_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" UnnamedVar="1" Pattern="1" CondNum="3" RelNum="0" 
Your answer: 5 15 21 26 41 48 51 52 69 
Correct answer: 5 15 21 26 41 48 51 52 69 
169 - WhilePattern, Typed, ImplStmtLine :: Pattern matching?
assign a; while w;
Select a pattern w("z",_)
1,2,6,7,8,9,11,13,14,16,17,19,20,22,23,24,25,27,28,30,31,32,35,37,38,39,40,42,43,44,45,46,47,49,53,54,55,58,59,60,61,62,66,67,68,70,72,73,74
5000
Evaluating query 169 - WhilePattern, Typed, ImplStmtLine :: Pattern matching?
"z",_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" UnnamedVar="1" Pattern="1" CondNum="3" RelNum="0" 
Your answer: 1 2 6 7 8 9 11 13 14 16 17 19 20 22 23 24 25 27 28 30 31 32 35 37 38 39 40 42 43 44 45 46 47 49 53 54 55 58 59 60 61 62 66 67 68 70 72 73 74 
Correct answer: 1 2 6 7 8 9 11 13 14 16 17 19 20 22 23 24 25 27 28 30 31 32 35 37 38 39 40 42 43 44 45 46 47 49 53 54 55 58 59 60 61 62 66 67 68 70 72 73 74 
170 - WhilePattern, Typed, ImplStmtLine :: Pattern matching?
variable v; while w;
Select w pattern w("ThisIsAVeryLongIdentityIsForTestingNotForFun",_)
none
5000
Evaluating query 170 - WhilePattern, Typed, ImplStmtLine :: Pattern matching?
"ThisIsAVeryLongIdentityIsForTestingNotForFun",_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" UnnamedVar="1" Pattern="1" CondNum="3" RelNum="0" 
Your answer: 
Correct answer: 
171 - With, Typed :: assign1.stmt# = stmt.stmt#
assign a; stmt s;
Select s with a.stmt# = s.stmt#
1,2,6,7,8,9,11,13,14,16,17,19,20,22,23,24,25,27,28,30,31,32,35,37,38,39,40,42,43,44,45,46,47,49,53,54,55,58,59,60,61,62,66,67,68,70,72,73,74
5000
Evaluating query 171 - With, Typed :: assign1.stmt# = stmt.stmt#
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" With="1" CondNum="2" RelNum="0" 
Your answer: 1 2 6 7 8 9 11 13 14 16 17 19 20 22 23 24 25 27 28 30 31 32 35 37 38 39 40 42 43 44 45 46 47 49 53 54 55 58 59 60 61 62 66 67 68 70 72 73 74 
Correct answer: 1 2 6 7 8 9 11 13 14 16 17 19 20 22 23 24 25 27 28 30 31 32 35 37 38 39 40 42 43 44 45 46 47 49 53 54 55 58 59 60 61 62 66 67 68 70 72 73 74 
172 - With, Typed :: assign1.stmt# = stmt.stmt#
assign a; stmt s;
Select a with a.stmt# = s.stmt#
1,2,6,7,8,9,11,13,14,16,17,19,20,22,23,24,25,27,28,30,31,32,35,37,38,39,40,42,43,44,45,46,47,49,53,54,55,58,59,60,61,62,66,67,68,70,72,73,74
5000
Evaluating query 172 - With, Typed :: assign1.stmt# = stmt.stmt#
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" With="1" CondNum="2" RelNum="0" 
Your answer: 1 2 6 7 8 9 11 13 14 16 17 19 20 22 23 24 25 27 28 30 31 32 35 37 38 39 40 42 43 44 45 46 47 49 53 54 55 58 59 60 61 62 66 67 68 70 72 73 74 
Correct answer: 1 2 6 7 8 9 11 13 14 16 17 19 20 22 23 24 25 27 28 30 31 32 35 37 38 39 40 42 43 44 45 46 47 49 53 54 55 58 59 60 61 62 66 67 68 70 72 73 74 
173 - With, Typed :: assign1.stmt# = c.value
assign a; constant c;
Select a with a.stmt# = c.value
1,2,8
5000
Evaluating query 173 - With, Typed :: assign1.stmt# = c.value
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" With="1" CondNum="2" RelNum="0" 
Your answer: 
Correct answer: 1 2 8 
Missing: 1 2 8 
Additional: 
174 - With, Typed :: assign1.stmt# = 27
assign a;
Select BOOLEAN with a.stmt# = 27
TRUE
5000
Evaluating query 174 - With, Typed :: assign1.stmt# = 27
The final tag string is ReturnBoolean="1" With="1" CondNum="2" RelNum="0" 
Your answer: true 
Correct answer: TRUE 
Missing: TRUE 
Additional: true 
175 - With, Typed :: assign1.stmt# = 200
assign a; 
Select BOOLEAN with a.stmt# = 200
FALSE
5000
Evaluating query 175 - With, Typed :: assign1.stmt# = 200
The final tag string is ReturnBoolean="1" With="1" CondNum="2" RelNum="0" 
Your answer: false 
Correct answer: FALSE 
Missing: FALSE 
Additional: false 
176 - With, Typed :: while.stmt# = if.stmt#
while w; if i;
Select BOOLEAN with w.stmt# = i.stmt#
FALSE
5000
Evaluating query 176 - With, Typed :: while.stmt# = if.stmt#
The final tag string is ReturnBoolean="1" With="1" CondNum="2" RelNum="0" 
Your answer: true 
Correct answer: FALSE 
Missing: FALSE 
Additional: true 
177 - With, Typed :: while.stmt# = t.stmt#
while w; assign t;
Select BOOLEAN with w.stmt# = t.stmt#
FALSE
5000
Evaluating query 177 - With, Typed :: while.stmt# = t.stmt#
The final tag string is ReturnBoolean="1" With="1" CondNum="2" RelNum="0" 
Your answer: false 
Correct answer: FALSE 
Missing: FALSE 
Additional: false 
178 - With, Typed :: while.stmt# = t.stmt#
while w; stmt t;
Select w with w.stmt# = t.stmt#
5,15,21,26,41,48,51,52,69
5000
Evaluating query 178 - With, Typed :: while.stmt# = t.stmt#
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" With="1" CondNum="2" RelNum="0" 
Your answer: 5 15 21 26 41 48 51 52 69 
Correct answer: 5 15 21 26 41 48 51 52 69 
179 - With, Typed :: while.stmt# = stmt number
while w; stmt t;
Select w with w.stmt# = 69
69
5000
Evaluating query 179 - With, Typed :: while.stmt# = stmt number
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" With="1" CondNum="2" RelNum="0" 
Your answer: 69 
Correct answer: 69 
180 - With, Typed :: while.stmt# = big number
while w; stmt t;
Select w with w.stmt# = 169
none
5000
Evaluating query 180 - With, Typed :: while.stmt# = big number
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" With="1" CondNum="2" RelNum="0" 
Your answer: 
Correct answer: 
181 - With, Typed :: if.stmt# = calls.stmt#
if i; call c;
Select BOOLEAN with i.stmt# = c.stmt#
FALSE
5000
Evaluating query 181 - With, Typed :: if.stmt# = calls.stmt#
The final tag string is ReturnBoolean="1" With="1" CondNum="2" RelNum="0" 
Your answer: true 
Correct answer: FALSE 
Missing: FALSE 
Additional: true 
182 - With, Typed :: if.stmt# = calls.stmt#
if i; call c;
Select BOOLEAN with i.stmt# = i.stmt#
TRUE
5000
Evaluating query 182 - With, Typed :: if.stmt# = calls.stmt#
The final tag string is ReturnBoolean="1" With="1" CondNum="2" RelNum="0" 
Your answer: true 
Correct answer: TRUE 
Missing: TRUE 
Additional: true 
183 - With, Typed :: if.stmt# = calls.stmt#
if i; while w;
Select BOOLEAN with i.stmt# = w.stmt#
FALSE
5000
Evaluating query 183 - With, Typed :: if.stmt# = calls.stmt#
The final tag string is ReturnBoolean="1" With="1" CondNum="2" RelNum="0" 
Your answer: true 
Correct answer: FALSE 
Missing: FALSE 
Additional: true 
184 - With, Typed :: if.stmt# = calls.stmt#
if i; stmt w;
Select i with i.stmt# = w.stmt#
4,12,18,29,33,34,57,63,64,65,71
5000
Evaluating query 184 - With, Typed :: if.stmt# = calls.stmt#
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" With="1" CondNum="2" RelNum="0" 
Your answer: 
Correct answer: 4 12 18 29 33 34 57 63 64 65 71 
Missing: 12 18 29 33 34 4 57 63 64 65 71 
Additional: 
185 - With, Typed :: if.stmt# = calls.stmt#
if i; stmt w;
Select w with i.stmt# = 71
1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74
5000
Evaluating query 185 - With, Typed :: if.stmt# = calls.stmt#
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" With="1" CondNum="2" RelNum="0" 
Your answer: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 
Correct answer: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 
186 - With, Typed :: calls.stmt# = stmt.stmt#
call c; stmt s;
Select c.stmt# with c.stmt# = s.stmt#
3,10,36,50,56
5000
Evaluating query 186 - With, Typed :: calls.stmt# = stmt.stmt#
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" With="1" CondNum="2" RelNum="0" 
Your answer: 3 10 36 50 56 
Correct answer: 3 10 36 50 56 
187 - With, Typed :: calls.stmt# = stmt.stmt#
call c; stmt s;
Select c.procName with c.stmt# = 3
a
5000
Evaluating query 187 - With, Typed :: calls.stmt# = stmt.stmt#
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" With="1" CondNum="2" RelNum="0" 
Your answer: 3 
Correct answer: a 
Missing: a 
Additional: 3 
188 - With, Typed :: calls.stmt# = stmt.stmt#
call c; procedure p;
Select c.procName with c.procName = p.procName
a,q,d
5000
Evaluating query 188 - With, Typed :: calls.stmt# = stmt.stmt#
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" With="1" CondNum="2" RelNum="0" 
Your answer: 3 
Correct answer: a q d 
Missing: a d q 
Additional: 3 
189 - With, Typed :: calls.stmt# = stmt.stmt#
call c; procedure p;
Select c with c.procName = p.procName
3,10,36,50,56
5000
Evaluating query 189 - With, Typed :: calls.stmt# = stmt.stmt#
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" With="1" CondNum="2" RelNum="0" 
Your answer: 3 
Correct answer: 3 10 36 50 56 
Missing: 10 36 50 56 
Additional: 
190 - With, Typed :: calls.stmt# = INTEGER
call c; procedure p;
Select c.stmt# with c.procName = "OLALA"
none
5000
Evaluating query 190 - With, Typed :: calls.stmt# = INTEGER
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" With="1" CondNum="2" RelNum="0" 
Your answer: 
Correct answer: 
191 - With, Typed :: prog_line = stmt.stmt#
prog_line n; stmt s;
Select n with n = s.stmt#
1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74
5000
Evaluating query 191 - With, Typed :: prog_line = stmt.stmt#
prog_line is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" UnnamedVar="1" With="1" CondNum="3" RelNum="0" 
Your answer: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 
Correct answer: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 
192 - With, Typed :: prog_line = assign.stmt#
prog_line n; assign a;
Select n with n = a.stmt#
1,2,6,7,8,9,11,13,14,16,17,19,20,22,23,24,25,27,28,30,31,32,35,37,38,39,40,42,43,44,45,46,47,49,53,54,55,58,59,60,61,62,66,67,68,70,72,73,74
5000
Evaluating query 192 - With, Typed :: prog_line = assign.stmt#
prog_line is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" UnnamedVar="1" With="1" CondNum="3" RelNum="0" 
Your answer: 1 2 6 7 8 9 11 13 14 16 17 19 20 22 23 24 25 27 28 30 31 32 35 37 38 39 40 42 43 44 45 46 47 49 53 54 55 58 59 60 61 62 66 67 68 70 72 73 74 
Correct answer: 1 2 6 7 8 9 11 13 14 16 17 19 20 22 23 24 25 27 28 30 31 32 35 37 38 39 40 42 43 44 45 46 47 49 53 54 55 58 59 60 61 62 66 67 68 70 72 73 74 
193 - With, Typed :: prog_line = while.stmt#
prog_line n; while w;
Select n with n = w.stmt#
5,15,21,26,41,48,51,52,69
5000
Evaluating query 193 - With, Typed :: prog_line = while.stmt#
prog_line is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" UnnamedVar="1" With="1" CondNum="3" RelNum="0" 
Your answer: 5 15 21 26 41 48 51 52 69 
Correct answer: 5 15 21 26 41 48 51 52 69 
194 - With, Typed :: prog_line = if.stmt#
prog_line n; if q;
Select n with n = q.stmt#
4,12,18,29,33,34,57,63,64,65,71
5000
Evaluating query 194 - With, Typed :: prog_line = if.stmt#
prog_line is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" UnnamedVar="1" With="1" CondNum="3" RelNum="0" 
Your answer: 1 2 3 5 8 
Correct answer: 4 12 18 29 33 34 57 63 64 65 71 
Missing: 12 18 29 33 34 4 57 63 64 65 71 
Additional: 1 2 3 5 8 
195 - With, Typed :: prog_line = calls.stmt#
prog_line n; call c;
Select n with n = 600
none
5000
Evaluating query 195 - With, Typed :: prog_line = calls.stmt#
prog_line is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" UnnamedVar="1" With="1" CondNum="3" RelNum="0" 
Your answer: 
Correct answer: 
196 - With, Typed :: variable.varName = procedure.procName
variable v; procedure p;
Select p with v.varName = p.procName
a,d
5000
Evaluating query 196 - With, Typed :: variable.varName = procedure.procName
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" With="1" CondNum="2" RelNum="0" 
Your answer: a d 
Correct answer: a d 
197 - With, Typed :: variable.varName = procedure.procName
procedure p; call c;
Select p with c.procName = p.procName
a,d,q
5000
Evaluating query 197 - With, Typed :: variable.varName = procedure.procName
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" With="1" CondNum="2" RelNum="0" 
Your answer: a q d 
Correct answer: a d q 
198 - With, Typed :: variable.varName = procedure.procName
procedure p; call c; variable v;
Select p with c.procName = p.procName and v.varName = p.procName
a,d
5000
Evaluating query 198 - With, Typed :: variable.varName = procedure.procName
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" With="1" CondNum="2" RelNum="0" 
Your answer: a d 
Correct answer: a d 
199 - With, Typed :: variable.varName = procedure.procName
procedure RONALDO;
Select RONALDO.procName with RONALDO.procName = "GERMANY"
none
5000
Evaluating query 199 - With, Typed :: variable.varName = procedure.procName
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" With="1" CondNum="2" RelNum="0" 
Your answer: 
Correct answer: 
200 - With, Typed :: variable.varName = procedure.procName
procedure RAYMOND;
Select RAYMOND with RAYMOND.procName = "a"
a
5000
Evaluating query 200 - With, Typed :: variable.varName = procedure.procName
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" With="1" CondNum="2" RelNum="0" 
Your answer: a 
Correct answer: a 
201 - With, Typed :: prog_line = constant.value
prog_line n; constant c;
Select c.value with n = c.value
1,2,3,5,8
5000
Evaluating query 201 - With, Typed :: prog_line = constant.value
prog_line is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" UnnamedVar="1" With="1" CondNum="3" RelNum="0" 
Your answer: 
Correct answer: 1 2 3 5 8 
Missing: 1 2 3 5 8 
Additional: 
202 - With, Typed :: prog_line = constant.value
prog_line n; constant c;
Select c with c.value = 5
5
5000
Evaluating query 202 - With, Typed :: prog_line = constant.value
prog_line is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" UnnamedVar="1" With="1" CondNum="3" RelNum="0" 
Your answer: 5 
Correct answer: 5 
203 - With, Typed :: prog_line = constant.value
while s; constant c;
Select c with c.value = s.stmt#
5
5000
Evaluating query 203 - With, Typed :: prog_line = constant.value
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" With="1" CondNum="2" RelNum="0" 
Your answer: 
Correct answer: 5 
Missing: 5 
Additional: 
204 - With, Typed :: prog_line = constant.value
if i; constant c;
Select c with c.value = i.stmt#
none
5000
Evaluating query 204 - With, Typed :: prog_line = constant.value
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" With="1" CondNum="2" RelNum="0" 
Your answer: 
Correct answer: 
205 - With, Typed :: prog_line = constant.value
if i; constant c;
Select c with c.value = 15
none
5000
Evaluating query 205 - With, Typed :: prog_line = constant.value
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" With="1" CondNum="2" RelNum="0" 
Your answer: 
Correct answer: 
206 - With, Typed :: variable.varName = IDENT
variable v;
Select v with v.varName = "abc"
none
5000
Evaluating query 206 - With, Typed :: variable.varName = IDENT
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" With="1" CondNum="2" RelNum="0" 
Your answer: 
Correct answer: 
207 - With, Typed :: variable.varName = IDENT
variable v;
Select v.varName with v.varName = "a"
a
5000
Evaluating query 207 - With, Typed :: variable.varName = IDENT
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" With="1" CondNum="2" RelNum="0" 
Your answer: a 
Correct answer: a 
208 - With, Typed :: variable.varName = IDENT
variable v; procedure BLUEBERRY;
Select v with v.varName = BLUEBERRY.procName
a,d
5000
Evaluating query 208 - With, Typed :: variable.varName = IDENT
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" With="1" CondNum="2" RelNum="0" 
Your answer: a d 
Correct answer: a d 
209 - With, Typed :: variable.varName = IDENT
variable v; call BLUEBERRY;
Select v.varName with v.varName = BLUEBERRY.procName
a,d
5000
Evaluating query 209 - With, Typed :: variable.varName = IDENT
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" With="1" CondNum="2" RelNum="0" 
Your answer: a d 
Correct answer: a d 
210 - With, Typed :: variable.varName = IDENT
variable v,V; call BLUEBERRY;
Select V with v.varName = V.varName
a,b,c,d,e,i,k,m,x,y,z
5000
Evaluating query 210 - With, Typed :: variable.varName = IDENT
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" With="1" CondNum="2" RelNum="0" 
Your answer: a x y b c m z k d i e 
Correct answer: a b c d e i k m x y z 
211 - With, Typed :: prog_line = stmt.stmt#
prog_line n; stmt s;
Select s with n = s.stmt#
1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74
5000
Evaluating query 211 - With, Typed :: prog_line = stmt.stmt#
prog_line is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" UnnamedVar="1" With="1" CondNum="3" RelNum="0" 
Your answer: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 
Correct answer: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 
212 - With, Typed :: prog_line = stmt.stmt#
stmt s; constant c;
Select s.stmt# with s.stmt# = c.value
1,2,3,5,8
5000
Evaluating query 212 - With, Typed :: prog_line = stmt.stmt#
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" With="1" CondNum="2" RelNum="0" 
Your answer: 
Correct answer: 1 2 3 5 8 
Missing: 1 2 3 5 8 
Additional: 
213 - With, Typed :: prog_line = stmt.stmt#
stmt s;
Select s.stmt# with s.stmt# = 500
none
5000
Evaluating query 213 - With, Typed :: prog_line = stmt.stmt#
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" With="1" CondNum="2" RelNum="0" 
Your answer: 
Correct answer: 
214 - With, Typed :: prog_line = stmt.stmt#
stmt s; 
Select BOOLEAN with s.stmt# = 35 and s.stmt# = 50 with s.stmt# = 40
FALSE
5000
Evaluating query 214 - With, Typed :: prog_line = stmt.stmt#
The happen is 2
The final tag string is ReturnBoolean="1" With="2" CondNum="3" RelNum="0" 
Your answer: false 
Correct answer: FALSE 
Missing: FALSE 
Additional: false 
215 - With, Typed :: prog_line = stmt.stmt#
stmt s; call c;
Select s.stmt# with s.stmt# = c.stmt#
3,10,36,50,56
5000
Evaluating query 215 - With, Typed :: prog_line = stmt.stmt#
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" With="1" CondNum="2" RelNum="0" 
Your answer: 3 10 36 50 56 
Correct answer: 3 10 36 50 56 
216 - With, Typed :: Mixed
stmt s; call c; variable v; procedure p;
Select c.procName with s.stmt# = c.stmt# and c.procName = p.procName and p.procName = v.varName
a,d
5000
Evaluating query 216 - With, Typed :: Mixed
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" With="1" CondNum="2" RelNum="0" 
Your answer: 3 
Correct answer: a d 
Missing: a d 
Additional: 3 
217 - With, Typed :: Mixed
stmt s; call c; variable v; procedure p;
Select p.procName with s.stmt# = c.stmt# and c.procName = p.procName and p.procName = v.varName
a,d
5000
Evaluating query 217 - With, Typed :: Mixed
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" With="1" CondNum="2" RelNum="0" 
Your answer: d 
Correct answer: a d 
Missing: a 
Additional: 
218 - With, Typed :: Mixed
stmt s; call c; variable v; procedure p;
Select c with s.stmt# = c.stmt# and c.procName = p.procName and p.procName = v.varName
3,36,50,56
5000
Evaluating query 218 - With, Typed :: Mixed
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" With="1" CondNum="2" RelNum="0" 
Your answer: 3 
Correct answer: 3 36 50 56 
Missing: 36 50 56 
Additional: 
219 - With, Typed :: Mixed
stmt s; call c; variable v; procedure p;
Select v.varName with v.varName = c.procName and c.stmt# = s.stmt#
a,d
5000
Evaluating query 219 - With, Typed :: Mixed
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" With="1" CondNum="2" RelNum="0" 
Your answer: a d 
Correct answer: a d 
220 - With, Typed :: Mixed
stmt s; call c; variable v; assign a; while w;
Select a with a.stmt# = s.stmt# and w.stmt# = s.stmt# and c.procName = v.varName
none
5000
Evaluating query 220 - With, Typed :: Mixed
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" With="1" CondNum="2" RelNum="0" 
Your answer: 
Correct answer: 
221 - Multiple_Clauses, Typed :: Follows and Affects
stmt s; variable v;
Select v such that Follows*(s,s) and Affects(13,16)
none
5000
Evaluating query 221 - Multiple_Clauses, Typed :: Follows and Affects
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Affects="1" Followsstar="1" SuchThat="1" CondNum="4" RelNum="2" 
Your answer: 
Correct answer: 
222 - Multiple_Clauses, Typed :: Follows and Affects
assign a;
Select a such that Follows(15,46) and Affects(a, 72)
72
5000
Evaluating query 222 - Multiple_Clauses, Typed :: Follows and Affects
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Affects="1" Follows="1" SuchThat="1" CondNum="4" RelNum="2" 
Your answer: 
Correct answer: 72 
Missing: 72 
Additional: 
223 - Multiple_Clauses, Typed :: Modifies and Uses
variable v;
Select v such that Modifies(21,v) and Uses(11,v)
b,x
5000
Evaluating query 223 - Multiple_Clauses, Typed :: Modifies and Uses
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Modifies="1" Uses="1" SuchThat="1" CondNum="4" RelNum="2" 
Your answer: x b 
Correct answer: b x 
224 - Multiple_Clauses, Typed :: Affects* and Next
assign a; 
Select a such that Affects* (23, a) and Next*(16, a)
16,17,19,20,22,23,24,25,27,28,31,32,35,38,39,42,43,44,45,46
5000
Evaluating query 224 - Multiple_Clauses, Typed :: Affects* and Next
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Affectsstar="1" Nextstar="1" SuchThat="1" CondNum="4" RelNum="2" 
Your answer: 
Correct answer: 16 17 19 20 22 23 24 25 27 28 31 32 35 38 39 42 43 44 45 46 
Missing: 16 17 19 20 22 23 24 25 27 28 31 32 35 38 39 42 43 44 45 46 
Additional: 
225 - Multiple_Clauses, Typed :: Next* and Parent*
assign a; 
Select a such that Next*(35, a) and Parent*(21, a)
22,23,24,25,27,28
5000
Evaluating query 225 - Multiple_Clauses, Typed :: Next* and Parent*
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Nextstar="1" Parentstar="1" SuchThat="1" CondNum="4" RelNum="2" 
Your answer: 22 23 24 25 27 28 
Correct answer: 22 23 24 25 27 28 
226 - Multiple_Clauses, Typed :: Parent* and Follows
assign a; 
Select a such that Parent*(21, a) and Follows(a, 26)
25
5000
Evaluating query 226 - Multiple_Clauses, Typed :: Parent* and Follows
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Follows="1" Parentstar="1" SuchThat="1" CondNum="4" RelNum="2" 
Your answer: 25 
Correct answer: 25 
227 - Multiple_Clauses, Typed :: Parent* and Uses
assign a; variable v;
Select v.varName such that Parent*(21, a) and Uses(a, v)
b,c,d,e,x
5000
Evaluating query 227 - Multiple_Clauses, Typed :: Parent* and Uses
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Parentstar="1" Uses="1" SuchThat="1" CondNum="4" RelNum="2" 
Your answer: x b c d e 
Correct answer: b c d e x 
228 - Multiple_Clauses, Typed :: Parent* and Modifies
assign a; variable v;
Select v.varName such that Parent*(21, a) and Modifies(a, v)
a,b,c,e,x
5000
Evaluating query 228 - Multiple_Clauses, Typed :: Parent* and Modifies
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Modifies="1" Parentstar="1" SuchThat="1" CondNum="4" RelNum="2" 
Your answer: a x b c e 
Correct answer: a b c e x 
229 - Multiple_Clauses, Typed :: Next* and Next*
while w;
Select w such that Next*(51,w) and Next*(w,61)
51,52
5000
Evaluating query 229 - Multiple_Clauses, Typed :: Next* and Next*
The happen is 2
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Nextstar="2" SuchThat="1" CondNum="4" RelNum="2" 
Your answer: 51 52 
Correct answer: 51 52 
230 - Multiple_Clauses, Typed :: Affects* and Follows
assign a;
Select a such that Affects(65,a) and Follows(a,70)
none
5000
Evaluating query 230 - Multiple_Clauses, Typed :: Affects* and Follows
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Affects="1" Follows="1" SuchThat="1" CondNum="4" RelNum="2" 
Your answer: 
Correct answer: 
231 - Multiple_Clauses, Typed :: Affects and Next*
assign a;
Select a such that Affects(62,a) and Next*(a,74)
67,68,70
5000
Evaluating query 231 - Multiple_Clauses, Typed :: Affects and Next*
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Affects="1" Nextstar="1" SuchThat="1" CondNum="4" RelNum="2" 
Your answer: 
Correct answer: 67 68 70 
Missing: 67 68 70 
Additional: 
232 - Multiple_Clauses, Typed :: IfPattern and Affects
assign a; if i;
Select a pattern i("  z  ",_,_) such that Affects(62,a)
67,68,70,74
5000
Evaluating query 232 - Multiple_Clauses, Typed :: IfPattern and Affects
",_,_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Affects="1" UnnamedVar="1" Pattern="1" SuchThat="1" CondNum="5" RelNum="1" 
Your answer: 
Correct answer: 67 68 70 74 
Missing: 67 68 70 74 
Additional: 
233 - Multiple_Clauses, Typed :: IfPattern and Affects
if i;
Select BOOLEAN pattern i(_,_,_) such that Affects(_,_)
TRUE
5000
Evaluating query 233 - Multiple_Clauses, Typed :: IfPattern and Affects
_,_,_ is an Unnamedvar 
_,_ is an Unnamedvar 
The final tag string is Affects="1" ReturnBoolean="1" UnnamedVar="2" Pattern="1" SuchThat="1" CondNum="6" RelNum="1" 
Your answer: false 
Correct answer: TRUE 
Missing: TRUE 
Additional: false 
234 - Multiple_Clauses, Typed :: IfPattern and Affects*
if i;
Select BOOLEAN pattern i(_,_,_) such that Affects*(_,_)
TRUE
5000
Evaluating query 234 - Multiple_Clauses, Typed :: IfPattern and Affects*
_,_,_ is an Unnamedvar 
_,_ is an Unnamedvar 
The final tag string is Affectsstar="1" ReturnBoolean="1" UnnamedVar="2" Pattern="1" SuchThat="1" CondNum="6" RelNum="1" 
Your answer: false 
Correct answer: TRUE 
Missing: TRUE 
Additional: false 
235 - Multiple_Clauses, Typed :: Affects and With
assign a; 
Select a such that Affects (14,_) with a.stmt# = 25
25
5000
Evaluating query 235 - Multiple_Clauses, Typed :: Affects and With
14,_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Affects="1" UnnamedVar="1" SuchThat="1" With="1" CondNum="5" RelNum="1" 
Your answer: 
Correct answer: 25 
Missing: 25 
Additional: 
236 - Multiple_Clauses, Typed :: Uses and With
procedure p;
Select p such that Uses(p,"e") with p.procName = "q"
q
5000
Evaluating query 236 - Multiple_Clauses, Typed :: Uses and With
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Uses="1" SuchThat="1" With="1" CondNum="4" RelNum="1" 
Your answer: q 
Correct answer: q 
237 - Multiple_Clauses, Typed :: Uses and With
prog_line n;
Select n such that Uses("q   ","x") with n = 90
none
5000
Evaluating query 237 - Multiple_Clauses, Typed :: Uses and With
prog_line is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" UnnamedVar="1" Uses="1" SuchThat="1" With="1" CondNum="5" RelNum="1" 
Your answer: 
Correct answer: 
238 - Multiple_Clauses, Typed :: Parent* and Follows*
assign a;
Select a such that Parent*(12, a) and Follows*(13,a)
14,46
5000
Evaluating query 238 - Multiple_Clauses, Typed :: Parent* and Follows*
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Followsstar="1" Parentstar="1" SuchThat="1" CondNum="4" RelNum="2" 
Your answer: 14 46 
Correct answer: 14 46 
239 - Multiple_Clauses, Typed :: Affects* and Follows*
assign a;
Select a such that Affects*(1,a) and Follows*(13,a)
none
5000
Evaluating query 239 - Multiple_Clauses, Typed :: Affects* and Follows*
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Affectsstar="1" Followsstar="1" SuchThat="1" CondNum="4" RelNum="2" 
Your answer: 
Correct answer: 
240 - Multiple_Clauses, Typed :: Affects* and Follows*
assign a;
Select a such that Affects*(1,a) and Follows*(13,a)
none
5000
Evaluating query 240 - Multiple_Clauses, Typed :: Affects* and Follows*
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Affectsstar="1" Followsstar="1" SuchThat="1" CondNum="4" RelNum="2" 
Your answer: 
Correct answer: 
241 - Multiple_Clauses, Typed :: Parent* Next* Affects
assign a; variable foo;
Select a such that Parent*(12, a) and Next*(16,a) and Affects(24,a)
16,23,25
5000
Evaluating query 241 - Multiple_Clauses, Typed :: Parent* Next* Affects
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Affects="1" Nextstar="1" Parentstar="1" SuchThat="1" CondNum="5" RelNum="3" 
Your answer: 
Correct answer: 16 23 25 
Missing: 16 23 25 
Additional: 
242 - Multiple_Clauses, Typed :: Affects* Follows* Affects
assign a;
Select a such that Affects*(9,a) and Follows*(1,a) and Affects(9,a)
none
5000
Evaluating query 242 - Multiple_Clauses, Typed :: Affects* Follows* Affects
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Affects="1" Affectsstar="1" Followsstar="1" SuchThat="1" CondNum="5" RelNum="3" 
Your answer: 
Correct answer: 
243 - Multiple_Clauses, Typed ::
stmt s;
Select s such that Follows*(12,s) and Follows(12,s) and Follows*(_,_)
none
5000
Evaluating query 243 - Multiple_Clauses, Typed ::
The happen is 2
_,_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Follows="1" Followsstar="2" UnnamedVar="1" SuchThat="1" CondNum="6" RelNum="3" 
Your answer: 
Correct answer: 
244 - Multiple_Clauses, Typed ::
stmt s;
Select s such that Parent*(15,s) and Parent(15,s) and Parent*(_,_)
16,17,18,45
5000
Evaluating query 244 - Multiple_Clauses, Typed ::
The happen is 2
_,_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Parent="1" Parentstar="2" UnnamedVar="1" SuchThat="1" CondNum="6" RelNum="3" 
Your answer: 16 17 18 45 
Correct answer: 16 17 18 45 
252 - Multiple_Clauses, Typed ::
while w; stmt s; variable v;
Select w.stmt# pattern w("k ",_) such that Modifies(s,v) and Next*(50, s) with s.stmt# = 48
48
5000
Evaluating query 252 - Multiple_Clauses, Typed ::
",_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Modifies="1" Nextstar="1" UnnamedVar="1" Pattern="1" SuchThat="1" With="1" CondNum="7" RelNum="2" 
Your answer: 48 
Correct answer: 48 
253 - Multiple_Clauses, Typed ::
while w; stmt s; variable v;
Select w.stmt# pattern w(" k",_) such that Modifies(s,v) and Next*(50, s)
48
5000
Evaluating query 253 - Multiple_Clauses, Typed ::
k",_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Modifies="1" Nextstar="1" UnnamedVar="1" Pattern="1" SuchThat="1" CondNum="6" RelNum="2" 
Your answer: 48 
Correct answer: 48 
254 - Multiple_Clauses, Typed ::
assign a;
Select a pattern a(_,_"b+ d   "_) such that Affects* (23, a) and Next*(16, a)
none
5000
Evaluating query 254 - Multiple_Clauses, Typed ::
_,_"b+ is an Unnamedvar 
"_ is an Unnamedvar 
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Affectsstar="1" Nextstar="1" UnnamedVar="2" Pattern="1" SuchThat="1" CondNum="7" RelNum="2" 
Your answer: 
Correct answer: 
261 - Multiple_Clauses, Typed ::
assign a; stmt s;
Select a such that Affects* (17, a) and Follows*(16, a) such that Next*(a,s) and Next*(a,23)
17,45
5000
Evaluating query 261 - Multiple_Clauses, Typed ::
The happen is 2
The happen is 2
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Affectsstar="1" Followsstar="1" Nextstar="2" SuchThat="2" CondNum="7" RelNum="4" 
Your answer: 
Correct answer: 17 45 
Missing: 17 45 
Additional: 
262 - Multiple_Clauses, Typed ::
assign a; stmt s;
Select a such that Affects* (17, a) and Follows*(16, a) such that Next*(a,s) and Next*(a,23) with a.stmt# = 17
17
5000
Evaluating query 262 - Multiple_Clauses, Typed ::
The happen is 2
The happen is 2
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Affectsstar="1" Followsstar="1" Nextstar="2" SuchThat="2" With="1" CondNum="8" RelNum="4" 
Your answer: 
Correct answer: 17 
Missing: 17 
Additional: 
263 - Multiple_Clauses, Typed ::
assign a; stmt s;
Select a such that Affects* (17, a) and Follows*(16, a) such that Next*(a,s) and Next*(a,23) with a.stmt# = 45
45
5000
Evaluating query 263 - Multiple_Clauses, Typed ::
The happen is 2
The happen is 2
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Affectsstar="1" Followsstar="1" Nextstar="2" SuchThat="2" With="1" CondNum="8" RelNum="4" 
Your answer: 
Correct answer: 45 
Missing: 45 
Additional: 
264 - Multiple_Clauses, Typed ::
assign a; stmt s, s1, s2, s3;
Select a such that Follows(s1, s2) and Follows(s2,s3) and Modifies("a","y") and Parent*(s2,a) and Affects(s,s)
16,17,19,20,22,23,25,27,28,30,31,32,35,37,38,40,42,43,44,45,58,60,66,67,68,24,39,59,70,72,73
5000
Evaluating query 264 - Multiple_Clauses, Typed ::
The happen is 2
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Affects="1" Follows="2" Modifies="1" Parentstar="1" SuchThat="1" CondNum="7" RelNum="5" 
Your answer: 
Correct answer: 16 17 19 20 22 23 25 27 28 30 31 32 35 37 38 40 42 43 44 45 58 60 66 67 68 24 39 59 70 72 73 
Missing: 16 17 19 20 22 23 24 25 27 28 30 31 32 35 37 38 39 40 42 43 44 45 58 59 60 66 67 68 70 72 73 
Additional: 
265 - Multiple_Clauses, Typed ::
assign a; stmt s1, s2, s3; procedure p1,p2;
Select a such that Follows(s1, s2) and Follows(s2,s3) and Affects*(35,a) and Calls(p1,p2) with p1.procName = "a"
none
5000
Evaluating query 265 - Multiple_Clauses, Typed ::
The happen is 2
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Affectsstar="1" Calls="1" Follows="2" SuchThat="1" With="1" CondNum="7" RelNum="4" 
Your answer: 
Correct answer: 
266 - Multiple_Clauses, Typed ::
assign a; stmt s1, s2, s3; procedure p1,p2;
Select a such that Follows(s1, s2) and Follows(s2,s3) and Affects*(55,a) and Calls(p1,p2) with p1.procName = "a"
58,59,60,61
5000
Evaluating query 266 - Multiple_Clauses, Typed ::
The happen is 2
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Affectsstar="1" Calls="1" Follows="2" SuchThat="1" With="1" CondNum="7" RelNum="4" 
Your answer: 
Correct answer: 58 59 60 61 
Missing: 58 59 60 61 
Additional: 
267 - Multiple_Clauses, Typed ::
assign a; stmt s1, s2, s3; procedure p1,p2;
Select s2 such that Follows(s1, s2) and Follows(s2,s3) and Affects*(55,a) and Calls(p1,p2) with p1.procName = "a"
2,3,10,14,15,17,18,20,21,23,24,25,36,43,55,56,57,63
5000
Evaluating query 267 - Multiple_Clauses, Typed ::
The happen is 2
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Affectsstar="1" Calls="1" Follows="2" SuchThat="1" With="1" CondNum="7" RelNum="4" 
Your answer: 
Correct answer: 2 3 10 14 15 17 18 20 21 23 24 25 36 43 55 56 57 63 
Missing: 10 14 15 17 18 2 20 21 23 24 25 3 36 43 55 56 57 63 
Additional: 
268 - Multiple_Clauses, Typed ::
assign a; stmt s1, s2, s3; procedure p1,p2;
Select p1 such that Follows(s1, s2) and Follows(s2,s3) and Affects*(55,a) and Calls*(p1,p2) with p2.procName = "a"
p, q
5000
Evaluating query 268 - Multiple_Clauses, Typed ::
The happen is 2
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Affectsstar="1" Callsstar="1" Follows="2" SuchThat="1" With="1" CondNum="7" RelNum="4" 
Your answer: 
Correct answer: p q 
Missing: p q 
Additional: 
269 - Multiple_Clauses, Typed ::
constant co; variable v; if i; call c1,c2;procedure p1,p2;
Select i pattern i(v,_,_) such that Modifies(i,v) and Next*(c1,i) with c2.stmt# = co.value such that Calls(p1,p2)
4,33,34
5000
Evaluating query 269 - Multiple_Clauses, Typed ::
v,_,_ is an Unnamedvar 
The happen is 2
No ReturnBoolean, ReturnTuple=1 
The final tag string is ReturnTuple="1" Calls="1" Modifies="1" Nextstar="1" UnnamedVar="1" Pattern="1" SuchThat="2" With="1" CondNum="9" RelNum="3" 
TIMEOUT
Warning: Thread Refused to Stop
