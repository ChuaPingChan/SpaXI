1 - USES-boolean: fixed-fixed (regular stmt)

Select BOOLEAN such that Uses(26, "how")
TRUE
5000
2 - USES-stmt: fixed-fixed (while stmt)
stmt s;
Select s such that Uses(27, "how")
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40
5000
3 - USES-boolean: fixed-fixed (within while stmt)

Select BOOLEAN such that Uses(14, "d")
TRUE
5000
4 - USES-boolean: fixed-fixed (if stmt)

Select BOOLEAN such that Uses(34, "keyboard")
TRUE
5000
5 - USES-boolean: fixed-fixed (within if stmt)

Select BOOLEAN such that Uses(33, "gpu")
TRUE
5000
6 - USES-call: fixed-fixed
call c;
Select c such that Uses(13, "keyboard")
3, 13, 29
5000
7 - USES-boolean: fixed-fixed (across proc)

Select BOOLEAN such that Uses(3, "mouse")
TRUE
5000
8 - USES-stmt: fixed-fixed (stmt-FALSE)
stmt s;
Select s such that Uses(18, "d")
none
5000
9 - USES-boolean: fixed-fixed (proc)

Select BOOLEAN such that Uses("proc2", "how")
TRUE
5000
10 - USES-procedure: fixed-fixed (across proc)
procedure p;
Select p such that Uses("proc1", "mouse")
proc1, proc2, proc3
5000
11 - USES-boolean: fixed-fixed (proc-FALSE)

Select BOOLEAN such that Uses("proc3", "f")
FALSE
5000
12 - USES-stmt: syn-syn (tuple)
stmt s; variable v;
Select <s,v> such that Uses(s, v)
1 b, 1 c, 1 d, 2 a, 2 c, 2 d, 3 how, 3 why, 3 what, 3 keyboard, 3 button, 3 speakers, 3 cpu, 3 gpu, 3 ram, 3 money, 3 parts, 3 mouse, 4 a, 4 b, 4 c, 4 d, 4 e, 4 f, 4 g, 4 h, 4 keyboard, 4 button, 4 speakers, 4 cpu, 4 gpu, 4 ram, 4 money, 4 parts, 4 mouse, 5 c, 6 a, 6 b, 6 d, 6 f, 6 g, 6 h, 6 keyboard, 6 button, 6 speakers, 6 cpu, 6 gpu, 6 ram, 6 money, 6 parts, 6 mouse, 7 f, 7 g, 7 h, 8 a, 8 d, 8 f, 8 h, 9 a, 9 d, 9 h, 10 f, 10 g, 10 h, 11 a, 11 b, 11 f, 11 h, 12 a, 12 b, 12 h, 13 keyboard, 13 button, 13 speakers, 13 cpu, 13 gpu, 13 ram, 13 money, 13 parts, 13 mouse, 14 a, 14 b, 14 c, 14 d, 14 e, 14 f, 14 g, 14 h, 15 c, 15 d, 16 d, 16 e, 17 e, 17 f, 18 a, 18 e, 19 a, 19 b, 19 c, 19 d, 19 e, 19 g, 19 h, 20 a, 20 c, 20 d, 20 e, 21 b, 21 d, 21 e, 22 d, 22 e, 23 a, 23 c, 23 g, 23 h, 24 how, 24 why, 25 why, 25 what, 26 how, 26 what, 27 how, 27 why, 27 what, 27 keyboard, 27 button, 27 speakers, 27 cpu, 27 gpu, 27 ram, 27 money, 27 parts, 27 mouse, 28 why, 28 how, 28 what, 28 keyboard, 28 button, 28 speakers, 28 cpu, 28 gpu, 28 ram, 28 money, 28 parts, 28 mouse, 29 keyboard, 29 button, 29 speakers, 29 cpu, 29 gpu, 29 ram, 29 money, 29 parts, 29 mouse, 30 how, 30 why, 30 what, 31 keyboard, 31 button, 31 speakers, 32 cpu, 32 gpu, 33 mouse, 33 keyboard, 33 speakers, 33 ram, 33 money, 33 parts, 33 cpu, 33 gpu, 34 keyboard, 34 speakers, 34 ram, 34 money, 34 parts, 34 gpu, 34 cpu, 35 speakers, 35 ram, 35 money, 35 parts, 35 gpu, 36 ram, 36 money, 36 parts, 36 gpu, 37 money, 37 parts, 37 gpu, 38 parts, 38 money, 38 gpu, 39 money, 39 cpu, 39 gpu, 40 mouse, 40 keyboard, 40 gpu, 40 cpu
5000
13 - USES-procedure: syn-syn (tuple)
procedure p; variable v;
Select <p,v> such that Uses(p, v)
proc1 a, proc1 b, proc1 c, proc1 d, proc1 e, proc1 f, proc1 g, proc1 h, proc1 how, proc1 why, proc1 what, proc1 keyboard, proc1 button, proc1 speakers, proc1 cpu, proc1 gpu, proc1 ram, proc1 money, proc1 parts, proc1 mouse, proc2 how, proc2 why, proc2 what, proc2 keyboard, proc2 button, proc2 speakers, proc2 cpu, proc2 gpu, proc2 ram, proc2 money, proc2 parts, proc2 mouse, proc3 keyboard, proc3 button, proc3 speakers, proc3 cpu, proc3 gpu, proc3 ram, proc3 money, proc3 parts, proc3 mouse
5000
14 - USES-assign: syn-syn
assign a; variable v;
Select a such that Uses(a, v)
1, 2, 5, 7, 9, 10, 12, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 30, 31, 32, 37, 38, 39, 40
5000
15 - USES-while: syn-syn
while w; variable v;
Select w such that Uses(w, v)
4, 8, 11, 14, 21, 27, 36
5000
16 - USES-if: syn-syn
if i; variable v;
Select i such that Uses(i, v)
6, 19, 28, 33, 34, 35
5000
17 - USES-call: syn-syn
call c; variable v;
Select c such that Uses(c, v)
3, 13, 29
5000
18 - USES-procedure: syn-syn
procedure p; variable v;
Select p such that Uses(p, v)
proc1, proc2, proc3
5000
19 - USES-variable: syn-syn
stmt s; variable v;
Select v such that Uses(s, v)
a, b, c, d, e, f, g, h, how, why, what, keyboard, button, speakers, cpu, gpu, ram, money, parts, mouse
5000
21 - USES-variable: fixed-syn (regular stmt)
variable v;
Select v such that Uses(26, v)
how, what
5000
22 - USES-variable: fixed-syn (while stmt)
variable v;
Select v such that Uses(4, v)
a, b, c, d, e, f, g, h, keyboard, button, speakers, cpu, gpu, ram, money, parts, mouse
5000
23 - USES-variable: fixed-syn (if stmt)
variable v;
Select v such that Uses(33, v)
mouse, keyboard, speakers, ram, money, parts, gpu, cpu
5000
24 - USES-variable: fixed-syn (call stmt)
variable v;
Select v such that Uses(29, v)
keyboard, button, speakers, cpu, gpu, ram, money, parts, mouse
5000
25 - USES-variable: fixed-syn (procedure)
variable v;
Select v such that Uses("proc2", v)
how, why, what, keyboard, button, speakers, cpu, gpu, ram, money, parts, mouse
5000
26 - USES-stmt: syn-fixed
stmt s;
Select s such that Uses(s, "speakers")
3, 4, 6, 13, 27, 28, 29, 31, 33, 34, 35
5000
27 - USES-assign: syn-fixed
assign a;
Select a such that Uses(a, "why")
24, 25, 30
5000
28 - USES-while: syn-fixed
while w;
Select w such that Uses(w, "cpu")
4, 27
5000
29 - USES-if: syn-fixed
if i;
Select i such that Uses(i, "what")
28
5000
30 - USES-call: syn-fixed
call c;
Select c such that Uses(c, "what")
3
5000
31 - USES-procedure: syn-fixed
procedure p;
Select p such that Uses(p, "ram")
proc1, proc2, proc3
5000
32 - USES-variable: syn-fixed
stmt s; variable v;
Select v such that Uses(s, "lastPokemon")
none
5000
33 - USES-boolean: fixed-generic

Select BOOLEAN such that Uses(14, _)
TRUE
5000
35 - USES-assign: syn-generic
assign a;
Select a such that Uses(a, _)
1, 2, 5, 7, 9, 10, 12, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 30, 31, 32, 37, 38, 39, 40
5000
36 - USES-while: syn-generic
while w;
Select w such that Uses(w, _)
4, 8, 11, 14, 21, 27, 36
5000
37 - USES-if: syn-generic
if i;
Select i such that Uses(i, _)
6, 19, 28, 33, 34, 35
5000
38 - USES-call: syn-generic
call c;
Select c such that Uses(c, _)
3, 13, 29
5000
39 - USES-procedure: syn-generic
procedure p;
Select p such that Uses(p, _)
proc1, proc2, proc3
5000
40 - USES-variable: syn-generic
stmt s; variable v;
Select v such that Uses(s, _)
a, b, c, d, e, f, g, h, how, why, what, keyboard, button, speakers, cpu, gpu, ram, money, parts, mouse, iranoutofnames
5000
42 - USES-assign: pattern-right defined (match select)
assign a;
Select a such that Uses(a, _) pattern a(_, _"d+e"_)
20
5000
43 - USES-assign: pattern-right defined (does not match select)
assign a1, a2;
Select a1 such that Uses(a1, "c") pattern a2(_, _"69"_)
1, 2, 5, 15, 20, 23
5000
44 - USES-assign: pattern-left defined (match select)
assign a;
Select a such that Uses(a, _) pattern a("mouse", _)
31, 39
5000
45 - USES-assign: pattern-left defined (does not match select)
assign a1, a2;
Select a1 such that Uses(a1, "f") pattern a2("iranoutofnames", _)
7, 10, 17
5000
46 - USES-assign: pattern-left defined synonym
assign a; variable v;
Select a such that Uses(14, v) pattern a(v, _)
1, 2, 5, 7, 9, 10, 12, 15, 16, 17, 18, 20, 22, 23
5000
47 - USES-assign: pattern-both defined (match select)
assign a;
Select a such that Uses(a, _) pattern a("how", _"how"_)
30
5000
48 - USES-assign: pattern-both defined (does not match select)
assign a1, a2;
Select a1 such that Uses(a1, "why") pattern a2("iranoutofnames", _"mouse*(keyboard + gpu)"_)
24, 25, 30
5000
49 - USES-assign: pattern-both defined, left synonym
assign a; variable v;
Select a such that Uses(a, v) pattern a(v, _"g"_)
none
5000
50 - USES-while: pattern (match select)
while w;
Select w such that Uses(w, _) pattern w("how", _)
27
5000
51 - USES-while: pattern (does not match select)
while w1, w2;
Select w1 such that Uses(w1, _) pattern w2("how", _)
4, 8, 11, 14, 21, 27, 36
5000
52 - USES-if: pattern (match select)
if i;
Select i such that Uses(i, _) pattern i("b", _, _)
6
5000
53 - USES-if: pattern (does not match select)
assign a; if i;
Select a such that Uses(a, _) pattern i("mouse", _, _)
1, 2, 5, 7, 9, 10, 12, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 30, 31, 32, 37, 38, 39, 40
5000
54 - USES: 2 clauses (similar) - fixed-fixed, fixed-fixed

Select BOOLEAN such that Uses(24, "why") and Uses(31, "speakers")
TRUE
5000
55 - USES: 2 clauses (similar) - syn-syn, syn-syn
assign a1, a2; variable v;
Select <a1,a2> such that Uses(a1, v) and Uses(a2, v)
1 1, 1 2, 1 5, 1 9, 1 12, 1 15, 1 16, 1 20, 1 22, 1 23, 2 1, 2 2, 2 5, 2 9, 2 12, 2 15, 2 16, 2 18, 2 20, 2 22, 2 23, 5 1, 5 2, 5 5, 5 15, 5 20, 5 23, 7 7, 7 9, 7 10, 7 12, 7 17, 7 23, 9 1, 9 2, 9 7, 9 9, 9 10, 9 12, 9 15, 9 16, 9 18, 9 20, 9 22, 9 23, 10 7, 10 9, 10 10, 10 12, 10 17, 10 23, 12 1, 12 2, 12 7, 12 9, 12 10, 12 12, 12 18, 12 20, 12 23, 15 1, 15 2, 15 5, 15 9, 15 15, 15 16, 15 20, 15 22, 15 23, 16 1, 16 2, 16 9, 16 15, 16 16, 16 17, 16 18, 16 20, 16 22, 17 7, 17 10, 17 16, 17 17, 17 18, 17 20, 17 22, 18 2, 18 9, 18 12, 18 16, 18 17, 18 18, 18 20, 18 22, 18 23, 20 1, 20 2, 20 5, 20 9, 20 12, 20 15, 20 16, 20 17, 20 18, 20 20, 20 22, 20 23, 22 1, 22 2, 22 9, 22 15, 22 16, 22 17, 22 18, 22 20, 22 22, 23 1, 23 2, 23 5, 23 7, 23 9, 23 10, 23 12, 23 15, 23 18, 23 20, 23 23, 24 24, 24 25, 24 26, 24 30, 25 24, 25 25, 25 26, 25 30, 26 24, 26 25, 26 26, 26 30, 30 24, 30 25, 30 26, 30 30, 31 31, 31 40, 32 32, 32 37, 32 38, 32 39, 32 40, 37 32, 37 37, 37 38, 37 39, 37 40, 38 32, 38 37, 38 38, 38 39, 38 40, 39 32, 39 37, 39 38, 39 39, 39 40, 40 31, 40 32, 40 37, 40 38, 40 39, 40 40
5000
56 - USES: 2 clauses (similar) - fixed-syn, fixed-syn
variable v;
Select v such that Uses(19, v) and Uses(23, v)
a, c, g, h
5000
57 - USES: 2 clauses (similar) - syn-fixed, syn-fixed
stmt s; assign a;
Select s such that Uses(s, "how") and Uses(a, "money")
3, 24, 26, 27, 28, 30
5000
58 - USES: 2 clauses (similar) - fixed-generic, fixed-generic

Select BOOLEAN such that Uses(23, _) and Uses(40, _)
TRUE
5000
60 - USES: 2 clauses (similar) - syn-generic, syn-generic
if i; while w;
Select <i,w> such that Uses(i, _) and Uses(w, _)
6 4, 6 8, 6 11, 6 14, 6 21, 6 27, 6 36, 19 4, 19 8, 19 11, 19 14, 19 21, 19 27, 19 36, 28 4, 28 8, 28 11, 28 14, 28 21, 28 27, 28 36, 33 4, 33 8, 33 11, 33 14, 33 21, 33 27, 33 36, 34 4, 34 8, 34 11, 34 14, 34 21, 34 27, 34 36, 35 4, 35 8, 35 11, 35 14, 35 21, 35 27, 35 36
5000
62 - USES: 2 clauses (mixed) - fixed-fixed, fixed-syn
variable v;
Select v such that Uses(17, "f") and Uses(39, v)
money, cpu, gpu
5000
63 - USES: 2 clauses (mixed) - syn-syn, syn-fixed
procedure p; variable v;
Select p such that Uses(p, v) and Uses(p, "keyboard")
proc1, proc2, proc3
5000
66 - USES: 2 clauses (mixed) - syn-fixed, syn-generic
stmt s;
Select s such that Uses(s, "h") and Uses(s, _)
4, 6, 7, 8, 9, 10, 11, 12, 14, 19, 23
5000
71 - USES: stmt# - select clause (has results)
assign a;
Select a.stmt# such that Uses(a, "d")
1, 2, 9, 15, 16, 20, 22
5000
72 - USES: stmt# - select clause (no results)
assign a;
Select a.stmt# such that Uses(a, "iranoutofnames")
none
5000
73 - USES: stmt# - with clause (has results)
assign a;
Select a such that Uses(a, "d") with a.stmt# = 20
20
5000
74 - USES: stmt# - with clause (no results)
assign a;
Select a such that Uses(a, "d") with a.stmt# = 20 and s.stmt# = 9
none
5000
75 - USES: procName - select clause (has results)
procedure p;
Select p.procName such that Uses(p, "how")
proc1, proc2
5000
76 - USES: procName - select clause (no results)
procedure p;
Select p.procName such that Uses(p, "iranoutofnames")
none
5000
77 - USES: procName - with clause (has results)
procedure p;
Select BOOLEAN such that Uses(p, "mouse") with p.procName = "proc1"
TRUE
5000
78 - USES: procName - with clause (no results)
procedure p;
Select BOOLEAN such that Uses(p, "ram") with p.procName = "proc4"
FALSE
5000
79 - USES: procName - select clause (call-has results)
call c;
Select c.procName such that Uses(c, "gpu")
proc2, proc3
5000
80 - USES: procName - select clause (call-no results)
call c;
Select c.procName such that Uses(c, "iranoutofnames")
none
5000
81 - USES: procName - with clause (call-has results)
call c;
Select c such that Uses(c, _) with c.procName = "proc3"
13, 29
5000
82 - USES: procName - with clause (call-no results)
call c;
Select c such that Uses(c, _) with c.procName = "proc1"
none
5000
83 - USES: varName - select clause (has results)
variable v;
Select v.varName such that Uses(26, v)
how, what
5000
84 - USES: varName - with clause (has results)
variable v;
Select BOOLEAN such that Uses(19, v) with v.varName = "e"
TRUE
5000
85 - USES: varName - with clause (no results)
variable v;
Select BOOLEAN such that Uses(19, v) with v.varName = "money"
FALSE
5000
86 - USES: const - with clause (has results)
variable v; constant c;
Select c such that Uses(37, v) with c.value = 9001
9001
5000
87 - USES: const - with clause (no results)
variable v; constant c;
Select BOOLEAN such that Uses(17, v) with c.value = 6
FALSE
5000
88 - USES: prog_line
prog_line n;
Select n such that Uses(n, "parts")
3, 4, 6, 13, 27, 28, 29, 33, 34, 35, 36, 37, 38
5000
89 - USES: stmt overflow
variable v;
Select v such that Uses(45, v)
none
5000
90 - USES: stmt underflow
variable v;
Select v such that Uses(-1, v)
none
5000
91 - USES: stmt underflow
variable v;
Select v such that Uses(0, v)
none
5000
92 - USES: non-existent variable
assign a;
Select a such that Uses(a, "helloworld")
none
5000
93 - MODIFIES-boolean: fixed-fixed (regular stmt)

Select BOOLEAN such that Modifies(26, "why")
TRUE
5000
94 - MODIFIES-boolean: fixed-fixed (within while stmt)

Select BOOLEAN such that Modifies(14, "d")
TRUE
5000
95 - MODIFIES-boolean: fixed-fixed (within if stmt)

Select BOOLEAN such that Modifies(33, "cpu")
TRUE
5000
96 - MODIFIES-call: fixed-fixed
call c;
Select c such that Modifies(13, "mouse")
3, 13, 29
5000
97 - MODIFIES-boolean: fixed-fixed (across proc)

Select BOOLEAN such that Modifies(3, "mouse")
TRUE
5000
98 - MODIFIES-stmt: fixed-fixed (stmt-FALSE)
stmt s;
Select s such that Modifies(18, "d")
none
5000
99 - MODIFIES-boolean: fixed-fixed (proc)

Select BOOLEAN such that Modifies("proc2", "how")
TRUE
5000
100 - MODIFIES-procedure: fixed-fixed (across proc)
procedure p;
Select p such that Modifies("proc1", "mouse")
proc1, proc2, proc3
5000
101 - MODIFIES-boolean: fixed-fixed (proc-FALSE)

Select BOOLEAN such that Modifies("proc3", "f")
FALSE
5000
102 - MODIFIES-stmt: syn-syn (tuple)
stmt s; variable v;
Select <s,v> such that Modifies(s, v)
1 a, 2 b, 3 what, 3 how, 3 why, 3 mouse, 3 ram, 3 cpu, 3 keyboard, 3 iranoutofnames, 4 d, 4 e, 4 g, 4 b, 4 c, 4 f, 4 mouse, 4 ram, 4 cpu, 4 keyboard, 4 iranoutofnames, 5 d, 6 e, 6 g, 6 mouse, 6 ram, 6 cpu, 6 keyboard, 6 iranoutofnames, 7 e, 8 g, 9 g, 10 e, 11 g, 12 g, 13 mouse, 13 ram, 13 cpu, 13 keyboard, 13 iranoutofnames, 14 b, 14 c, 14 d, 14 f, 15 b, 16 c, 17 d, 18 f, 19 b, 19 c, 20 b, 21 c, 22 c, 23 b, 24 what, 25 how, 26 why, 27 how, 27 mouse, 27 ram, 27 cpu, 27 keyboard, 27 iranoutofnames, 28 how, 28 mouse, 28 ram, 28 cpu, 28 keyboard, 28 iranoutofnames, 29 mouse, 29 ram, 29 cpu, 29 keyboard, 29 iranoutofnames, 30 how, 31 mouse, 32 ram, 33 cpu, 33 keyboard, 33 mouse, 33 iranoutofnames, 34 cpu, 34 keyboard, 34 mouse, 35 cpu, 35 keyboard, 36 cpu, 37 cpu, 38 keyboard, 39 mouse, 40 iranoutofnames
5000
103 - MODIFIES-procedure: syn-syn (tuple)
procedure p; variable v;
Select <p,v> such that Modifies(p, v)
proc1 a, proc1 b, proc1 c, proc1 d, proc1 e, proc1 f, proc1 g, proc1 how, proc1 why, proc1 what, proc1 mouse, proc1 ram, proc1 cpu, proc1 keyboard, proc1 iranoutofnames, proc2 how, proc2 why, proc2 what, proc2 mouse, proc2 ram, proc2 cpu, proc2 keyboard, proc2 iranoutofnames, proc3 mouse, proc3 ram, proc3 cpu, proc3 keyboard, proc3 iranoutofnames
5000
104 - MODIFIES-assign: syn-syn
assign a; variable v;
Select a such that Modifies(a, v)
1, 2, 5, 7, 9, 10, 12, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 30, 31, 32, 37, 38, 39, 40
5000
105 - MODIFIES-while: syn-syn
while w; variable v;
Select w such that Modifies(w, v)
4, 8, 11, 14, 21, 27, 36
5000
106 - MODIFIES-if: syn-syn
if i; variable v;
Select i such that Modifies(i, v)
6, 19, 28, 33, 34, 35
5000
107 - MODIFIES-call: syn-syn
call c; variable v;
Select c such that Modifies(c, v)
3, 13, 29
5000
108 - MODIFIES-procedure: syn-syn
procedure p; variable v;
Select p such that Modifies(p, v)
proc1, proc2, proc3
5000
109 - MODIFIES-variable: syn-syn
stmt s; variable v;
Select v such that Modifies(s, v)
a, b, c, d, e, f, g, how, why, what, mouse, ram, cpu, keyboard, iranoutofnames
5000
111 - MODIFIES-variable: fixed-syn (regular stmt)
variable v;
Select v such that Modifies(26, v)
why
5000
112 - MODIFIES-variable: fixed-syn (while stmt)
variable v;
Select v such that Modifies(4, v)
b, c, d, e, f, g, mouse, ram, cpu, keyboard, iranoutofnames
5000
113 - MODIFIES-variable: fixed-syn (if stmt)
variable v;
Select v such that Modifies(33, v)
cpu, keyboard, mouse, iranoutofnames
5000
114 - MODIFIES-variable: fixed-syn (call stmt)
variable v;
Select v such that Modifies(29, v)
mouse, ram, cpu, keyboard, iranoutofnames
5000
115 - MODIFIES-variable: fixed-syn (procedure)
variable v;
Select v such that Modifies("proc2", v)
how, why, what, mouse, ram, cpu, keyboard, iranoutofnames
5000
116 - MODIFIES-stmt: syn-fixed
stmt s;
Select s such that Modifies(s, "speakers")
none
5000
117 - MODIFIES-assign: syn-fixed
assign a;
Select a such that Modifies(a, "why")
26
5000
118 - MODIFIES-while: syn-fixed
while w;
Select w such that Modifies(w, "cpu")
4, 27, 36
5000
119 - MODIFIES-if: syn-fixed
if i;
Select i such that Modifies(i, "how")
28
5000
120 - MODIFIES-call: syn-fixed
call c;
Select c such that Modifies(c, "keyboard")
3, 13, 29
5000
121 - MODIFIES-procedure: syn-fixed
procedure p;
Select p such that Modifies(p, "ram")
proc1, proc2, proc3
5000
122 - MODIFIES-variable: syn-fixed
stmt s; variable v;
Select v such that Modifies(s, "iranoutofnames")
a, b, c, d, e, f, g, h, how, why, what, mouse, keyboard, button, speakers, ram, cpu, gpu, parts, money, iranoutofnames
5000
123 - MODIFIES-boolean: fixed-generic

Select BOOLEAN such that Modifies(14, _)
TRUE
5000
125 - MODIFIES-assign: syn-generic
assign a;
Select a such that Modifies(a, _)
1, 2, 5, 7, 9, 10, 12, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 30, 31, 32, 37, 38, 39, 40
5000
126 - MODIFIES-while: syn-generic
while w;
Select w such that Modifies(w, _)
4, 8, 11, 14, 21, 27, 36
5000
127 - MODIFIES-if: syn-generic
if i;
Select i such that Modifies(i, _)
6, 19, 28, 33, 34, 35
5000
128 - MODIFIES-call: syn-generic
call c;
Select c such that Modifies(c, _)
3, 13, 29
5000
129 - MODIFIES-procedure: syn-generic
procedure p;
Select p such that Modifies(p, _)
proc1, proc2, proc3
5000
130 - MODIFIES-variable: syn-generic
stmt s; variable v;
Select v such that Modifies(s, _)
a, b, c, d, e, f, g, h, how, why, what, keyboard, button, speakers, cpu, gpu, ram, money, parts, mouse, iranoutofnames
5000
132 - MODIFIES-assign: pattern-right defined (match select)
assign a;
Select a such that Modifies(a, _) pattern a(_, _"d+e"_)
20
5000
133 - MODIFIES-assign: pattern-right defined (does not match select)
assign a1, a2;
Select a1 such that Modifies(a1, "c") pattern a2(_, _"69"_)
16, 22
5000
134 - MODIFIES-assign: pattern-left defined (match select)
assign a;
Select a such that Modifies(a, _) pattern a("mouse", _)
31, 39
5000
135 - MODIFIES-assign: pattern-left defined (does not match select)
assign a1, a2;
Select a1 such that Modifies(a1, "f") pattern a2("iranoutofnames", _)
18
5000
136 - MODIFIES-assign: pattern-left defined synonym
assign a; variable v;
Select a such that Modifies(14, v) pattern a(v, _)
2, 5, 15, 16, 17, 18, 20, 22, 23
5000
137 - MODIFIES-assign: pattern-both defined (match select)
assign a;
Select a such that Modifies(a, _) pattern a("how", _"how"_)
30
5000
138 - MODIFIES-assign: pattern-both defined (does not match select)
assign a1, a2;
Select a1 such that Modifies(a1, "why") pattern a2("iranoutofnames", _"mouse*(keyboard + gpu)"_)
26
5000
139 - MODIFIES-assign: pattern-both defined, left synonym
assign a; variable v;
Select a such that Modifies(a, v) pattern a(v, _"g"_)
7, 10, 23
5000
140 - MODIFIES-while: pattern (match select)
while w;
Select w such that Modifies(w, _) pattern w("how", _)
27
5000
141 - MODIFIES-while: pattern (does not match select)
while w1, w2;
Select w1 such that Modifies(w1, _) pattern w2("how", _)
4, 8, 11, 14, 21, 27, 36
5000
142 - MODIFIES-if: pattern (match select)
if i;
Select i such that Modifies(i, _) pattern i("b", _, _)
6
5000
143 - MODIFIES-if: pattern (does not match select)
assign a; if i;
Select a such that Modifies(a, _) pattern i("mouse", _, _)
1, 2, 5, 7, 9, 10, 12, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 30, 31, 32, 37, 38, 39, 40
5000
144 - MODIFIES: 2 clauses (similar) - fixed-fixed, fixed-fixed

Select BOOLEAN such that Modifies(24, "what") and Modifies(31, "mouse")
TRUE
5000
145 - MODIFIES: 2 clauses (similar) - syn-syn, syn-syn
assign a1, a2; variable v;
Select <a1,a2> such that Modifies(a1, v) and Modifies(a2, v)
1 1, 2 2, 2 15, 2 20, 2 23, 5 5, 5 17, 7 7, 7 10, 9 9, 9 12, 10 7, 10 10, 12 9, 12 12, 15 2, 15 15, 15 20, 15 23, 16 16, 16 22, 17 5, 17 17, 18 18, 20 2, 20 15, 20 20, 20 23, 22 16, 22 22, 23 2, 23 15, 23 20, 23 23, 24 24, 25 25, 25 30, 26 26, 30 25, 30 30, 31 31, 31 39, 32 32, 37 37, 38 38, 39 31, 39 39, 40 40
5000
146 - MODIFIES: 2 clauses (similar) - fixed-syn, fixed-syn
variable v;
Select v such that Modifies(19, v) and Modifies(23, v)
b
5000
147 - MODIFIES: 2 clauses (similar) - syn-fixed, syn-fixed
stmt s; assign a;
Select s such that Modifies(s, "how") and Modifies(a, "money")
none
5000
148 - MODIFIES: 2 clauses (similar) - fixed-generic, fixed-generic

Select BOOLEAN such that Modifies(23, _) and Modifies(40, _)
TRUE
5000
150 - MODIFIES: 2 clauses (similar) - syn-generic, syn-generic
if i; while w;
Select <i,w> such that Modifies(i, _) and Modifies(w, _)
6 4, 6 8, 6 11, 6 14, 6 21, 6 27, 6 36, 19 4, 19 8, 19 11, 19 14, 19 21, 19 27, 19 36, 28 4, 28 8, 28 11, 28 14, 28 21, 28 27, 28 36, 33 4, 33 8, 33 11, 33 14, 33 21, 33 27, 33 36, 34 4, 34 8, 34 11, 34 14, 34 21, 34 27, 34 36, 35 4, 35 8, 35 11, 35 14, 35 21, 35 27, 35 36
5000
152 - MODIFIES: 2 clauses (mixed) - fixed-fixed, fixed-syn
variable v;
Select v such that Modifies(17, "d") and Modifies(39, v)
mouse
5000
153 - MODIFIES: 2 clauses (mixed) - syn-syn, syn-fixed
procedure p; variable v;
Select p such that Modifies(p, v) and Modifies(p, "keyboard")
proc1, proc2, proc3
5000
156 - MODIFIES: 2 clauses (mixed) - syn-fixed, syn-generic
stmt s;
Select s such that Modifies(s, "g") and Modifies(s, _)
4, 6, 8, 9, 11, 12
5000
161 - MODIFIES: stmt# - select clause (has results)
assign a;
Select a.stmt# such that Modifies(a, "d")
5, 17
5000
162 - MODIFIES: stmt# - select clause (no results)
assign a;
Select a.stmt# such that Modifies(a, "iranoutofnames")
40
5000
163 - MODIFIES: stmt# - with clause (has results)
assign a;
Select a such that Modifies(a, "d") with a.stmt# = 17
17
5000
164 - MODIFIES: stmt# - with clause (no results)
assign a;
Select a such that Modifies(a, "d") with a.stmt# = 5 and s.stmt# = 17
none
5000
165 - MODIFIES: procName - select clause (has results)
procedure p;
Select p.procName such that Modifies(p, "how")
proc1, proc2
5000
166 - MODIFIES: procName - select clause (no results)
procedure p;
Select p.procName such that Modifies(p, "iranoutofnames")
proc1, proc2, proc3
5000
167 - MODIFIES: procName - with clause (has results)
procedure p;
Select BOOLEAN such that Modifies(p, "mouse") with p.procName = "proc1"
TRUE
5000
168 - MODIFIES: procName - with clause (no results)
procedure p;
Select BOOLEAN such that Modifies(p, "ram") with p.procName = "proc4"
FALSE
5000
169 - MODIFIES: procName - select clause (call-has results)
call c;
Select c.procName such that Modifies(c, "cpu")
proc2, proc3
5000
170 - MODIFIES: procName - select clause (call-no results)
call c;
Select c.procName such that Modifies(c, "speakers")
none
5000
171 - MODIFIES: procName - with clause (call-has results)
call c;
Select c such that Modifies(c, _) with c.procName = "proc3"
13, 29
5000
172 - MODIFIES: procName - with clause (call-no results)
call c;
Select c such that Modifies(c, _) with c.procName = "proc1"
none
5000
173 - MODIFIES: varName - select clause (has results)
variable v;
Select v.varName such that Modifies(26, v)
why
5000
174 - MODIFIES: varName - with clause (has results)
variable v;
Select BOOLEAN such that Modifies(19, v) with v.varName = "b"
TRUE
5000
175 - MODIFIES: varName - with clause (no results)
variable v;
Select BOOLEAN such that Modifies(19, v) with v.varName = "e"
FALSE
5000
176 - MODIFIES: const - with clause (has results)
variable v; constant c;
Select c such that Modifies(37, v) with c.value = 9001
9001
5000
177 - MODIFIES: const - with clause (no results)
variable v; constant c;
Select BOOLEAN such that Modifies(17, v) with c.value = 6
FALSE
5000
178 - MODIFIES: prog_line
prog_line n;
Select n such that Modifies(n, "keyboard")
3, 4, 6, 13, 27, 28, 29, 33, 34, 35, 38
5000
179 - MODIFIES: stmt overflow
variable v;
Select v such that Modifies(45, v)
none
5000
180 - MODIFIES: stmt underflow
variable v;
Select v such that Modifies(-1, v)
none
5000
181 - MODIFIES: stmt underflow
variable v;
Select v such that Modifies(0, v)
none
5000
182 - MODIFIES: non-existent variable
assign a;
Select a such that Modifies(a, "helloworld")
none
5000
183 - PARENT-boolean: fixed-fixed (while stmt)

Select BOOLEAN such that Parent(27, 28)
TRUE
5000
184 - PARENT-stmt: fixed-fixed (nested under while stmt)
stmt s;
Select s such that Parent(27, 30)
none
5000
185 - PARENT-boolean: fixed-fixed (if stmt, if block)

Select BOOLEAN such that Parent(34, 35)
TRUE
5000
186 - PARENT-boolean: fixed-fixed (if stmt, else block)

Select BOOLEAN such that Parent(34, 39)
TRUE
5000
187 - PARENT-stmt: fixed-fixed (nested under if stmt)
stmt s;
Select s such that Parent(33, 39)
none
5000
188 - PARENT-stmt: syn-syn (tuple)
stmt s1, s2;
Select <s1,s2> such that Parent(s1, s2)
4 5, 4 6, 4 14, 6 7, 6 8, 6 10, 6 11, 6 13, 8 9, 11 12, 14 15, 14 16, 14 17, 14 18, 14 19, 19 20, 19 21, 19 23, 21 22, 27 28, 28 29, 28 30, 33 34, 33 40, 34 35, 34 39, 35 36, 35 38, 36 37
5000
189 - PARENT-assign: syn-syn
stmt s; assign a;
Select a such that Parent(s, a)
5, 7, 9, 10, 12, 15, 16, 17, 18, 20, 22, 23, 30, 37, 38, 39, 40
5000
190 - PARENT-while: syn-syn
while w1, w2;
Select w1 such that Parent(w1, w2)
4
5000
191 - PARENT-if: syn-syn
stmt s; if i;
Select i such that Parent(i, s)
6, 19, 28, 33, 34, 35
5000
192 - PARENT-call: syn-syn
stmt s; call c;
Select c such that Parent(s, c)
13, 29
5000
193 - PARENT-boolean: generic-generic

Select BOOLEAN such that Parent(_, _)
TRUE
5000
194 - PARENT-assign: fixed-syn (while stmt)
assign a;
Select a such that Parent(14, a)
15, 16, 17, 18
5000
195 - PARENT-stmt: fixed-syn (if stmt)
stmt s;
Select s such that Parent(35, s)
36, 38
5000
196 - PARENT-stmt: syn-fixed
stmt s;
Select s such that Parent(s, 19)
14
5000
197 - PARENT-while: syn-fixed
while w;
Select w such that Parent(w, 37)
36
5000
198 - PARENT-if: syn-fixed
if i;
Select i such that Parent(i, 35)
34
5000
199 - PARENT-boolean: fixed-generic

Select BOOLEAN such that Parent(28, _)
TRUE
5000
200 - PARENT-boolean: generic-fixed

Select BOOLEAN such that Parent(_, 28)
TRUE
5000
201 - PARENT-assign: syn-generic
assign a;
Select a such that Parent(a, _)
none
5000
202 - PARENT-while: syn-generic
while w;
Select w such that Parent(w, _)
4, 8, 11, 14, 21, 27, 36
5000
203 - PARENT-if: syn-generic
if i;
Select i such that Parent(i, _)
6, 19, 28, 33, 34, 35
5000
204 - PARENT-stmt: generic-syn
stmt s;
Select s such that Parent(_, s)
5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 30, 34, 35, 36, 37, 38, 39, 40
5000
205 - PARENT-assign: generic-syn
assign a;
Select a such that Parent(_, a)
5, 7, 9, 10, 12, 15, 16, 17, 18, 20, 22, 23, 30, 37, 38, 39, 40
5000
206 - PARENT-while: generic-syn
while w;
Select w such that Parent(_, w)
8, 11, 14, 21, 36
5000
207 - PARENT-if: generic-syn
if i;
Select i such that Parent(_, i)
6, 19, 28, 34, 35
5000
208 - PARENT-call: generic-syn
call c;
Select c such that Parent(_, c)
13, 29
5000
209 - PARENT-while: pattern-left defined
while w;
Select w such that Parent(w, _) pattern w("how", _)
27
5000
210 - PARENT-while: pattern-left defined synonym
while w; variable v;
Select w such that Parent(35, w) pattern w(v, _)
36
5000
211 - PARENT-if: pattern-left defined
if i;
Select i such that Parent(i, 34) pattern i("keyboard", _, _)
none
5000
212 - PARENT-if: pattern-left defined synonym
if i; variable v;
Select v such that Parent(i, 21) pattern i(v, _, _)
a
5000
213 - PARENT: 2 clauses (similar) - fixed-fixed, fixed-fixed

Select BOOLEAN such that Parent(28, 29) and Parent(35, 36)
TRUE
5000
214 - PARENT: 2 clauses (similar) - syn-syn, syn-syn
stmt s1, s2;
Select <s1,s2> such that Parent(s1, s2) and Parent(s2, s1)
none
5000
215 - PARENT: 2 clauses (similar) - fixed-syn, fixed-syn
stmt s;
Select s such that Parent(33, s) and Parent(34, s)
none
5000
216 - PARENT: 2 clauses (similar) - syn-fixed, syn-fixed
while w;
Select w such that Parent(14, w) and Parent(i, 29)
none
5000
217 - PARENT: 2 clauses (similar) - fixed-generic, fixed-generic

Select BOOLEAN such that Parent(14, _) and Parent(28, _)
TRUE
5000
218 - PARENT: 2 clauses (similar) - generic-fixed, generic-fixed
stmt s;
Select s such that Parent(_, 30) and Parent(_, 34)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40
5000
219 - PARENT: 2 clauses (similar) - syn-generic, syn-generic
while w; if i;
Select <i,w> such that Parent(w, _) and Parent(i, _)
6 4, 6 8, 6 11, 6 14, 6 21, 6 27, 6 36, 19 4, 19 8, 19 11, 19 14, 19 21, 19 27, 19 36, 28 4, 28 8, 28 11, 28 14, 28 21, 28 27, 28 36, 33 4, 33 8, 33 11, 33 14, 33 21, 33 27, 33 36, 34 4, 34 8, 34 11, 34 14, 34 21, 34 27, 34 36, 35 4, 35 8, 35 11, 35 14, 35 21, 35 27, 35 36
5000
220 - PARENT: 2 clauses (similar) - generic-syn, generic-syn
stmt s; if i;
Select i such that Parent(_, s) and Parent(_, i)
6, 19, 28, 34, 35
5000
221 - PARENT: 2 clauses (mixed) - fixed-fixed, fixed-syn
stmt s;
Select s such that Parent(34, 35) and Parent(28, s)
29, 30
5000
222 - PARENT: 2 clauses (mixed) - syn-syn, syn-fixed
stmt s1, s2;
Select <s1,s2> such that Parent(s1, s2) and Parent(s1, 30)
28 29, 28 30
5000
223 - PARENT: 2 clauses (mixed) - generic-generic, fixed-generic
while w;
Select w such that Parent(_, _) and Parent(33, _)
4, 8, 11, 14, 21, 27, 36
5000
224 - PARENT: 2 clauses (mixed) - fixed-syn, generic-fixed
assign a;
Select a such that Parent(19, a) and Parent(_, 28)
20, 23
5000
225 - PARENT: 2 clauses (mixed) - syn-fixed, syn-generic
if i; assign a;
Select i such that Parent(i, 22) and Parent(a, _)
none
5000
226 - PARENT: 2 clauses (mixed) - fixed-generic, generic-syn

Select BOOLEAN such that Parent(28, _) and Parent(_, 28)
TRUE
5000
227 - PARENT: 2 clauses (mixed) - generic-fixed, syn-generic
stmt s;
Select s such that Parent(_, 38) and Parent(s, _)
4, 6, 8, 11, 14, 19, 21, 27, 28, 33, 34, 35, 36
5000
228 - PARENT: 2 clauses (mixed) - syn-generic, generic-syn
if i;
Select i such that Parent(i, _) and Parent(_, i)
6, 19, 28, 34, 35
5000
229 - PARENT: 2 clauses (mixed) - generic-fixed, generic-syn
assign a;
Select a such that Parent(_, 23) and Parent(_, a)
5, 7, 9, 10, 12, 15, 16, 17, 18, 20, 22, 23, 30, 37, 38, 39, 40
5000
230 - PARENT: stmt# - select clause (has results)
assign a;
Select a.stmt# such that Parent(28, a)
30
5000
231 - PARENT: stmt# - select clause (no results)
assign a;
Select a.stmt# such that Parent(27, a)
none
5000
232 - PARENT: stmt# - with clause (has results)
while w;
Select w such that Parent(w, _) with w.stmt# = 27
27
5000
233 - PARENT: stmt# - with clause (no results)
while w;
Select w such that Parent(w, _) with w.stmt# = 4 and w.stmt# = 8
none
5000
234 - PARENT: prog_line
prog_line n;
Select n such that Parent(n, _)
4, 6, 8, 11, 14, 19, 21, 27, 28, 33, 34, 35, 36
5000
235 - PARENT: stmt overflow
stmt s;
Select s such that Parent(45, s)
none
5000
236 - PARENT: stmt underflow
stmt s;
Select s such that Parent(-1, s)
none
5000
237 - PARENT: stmt underflow
variable s;
Select s such that Parent(0, s)
none
5000
238 - PARENT: invalid argument
assign a;
Select a such that Parent(a, "helloworld")
none
5000
239 - PARENT*-boolean: fixed-fixed (while stmt)

Select BOOLEAN such that Parent*(27, 29)
TRUE
5000
240 - PARENT*-stmt: fixed-fixed (nested under while stmt)
stmt s;
Select s such that Parent*(27, 30)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40
5000
241 - PARENT*-boolean: fixed-fixed (if stmt, if block)

Select BOOLEAN such that Parent*(34, 36)
TRUE
5000
242 - PARENT*-boolean: fixed-fixed (if stmt, else block)

Select BOOLEAN such that Parent*(33, 39)
TRUE
5000
243 - PARENT*-stmt: fixed-fixed (nested under if stmt)
stmt s;
Select s such that Parent*(33, 39)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40
5000
244 - PARENT*-stmt: syn-syn (tuple)
stmt s1, s2;
Select <s1,s2> such that Parent*(s1, s2)
4 5, 4 6, 4 7, 4 8, 4 9, 4 10, 4 11, 4 12, 4 13, 4 14, 4 15, 4 16, 4 17, 4 18, 4 19, 4 20, 4 21, 4 22, 4 23, 6 7, 6 8, 6 9, 6 10, 6 11, 6 12, 6 13, 8 9, 11 12, 14 15, 14 16, 14 17, 14 18, 14 19, 14 20, 14 21, 14 22, 14 23, 19 20, 19 21, 19 22, 19 23, 21 22, 27 28, 27 29, 27 30, 28 29, 28 30, 33 34, 33 35, 33 36, 33 37, 33 38, 33 39, 33 40, 34 35, 34 36, 34 37, 34 38, 34 39, 35 36, 35 37, 35 38, 36 37
5000
245 - PARENT*-assign: syn-syn
stmt s; assign a;
Select a such that Parent*(s, a)
5, 7, 9, 10, 12, 15, 16, 17, 18, 20, 22, 23, 30, 37, 38, 39, 40
5000
246 - PARENT*-while: syn-syn
while w1, w2;
Select w1 such that Parent*(w1, w2)
4, 14
5000
247 - PARENT*-if: syn-syn
stmt s; if i;
Select i such that Parent*(i, s)
6, 19, 28, 33, 34, 35
5000
248 - PARENT*-call: syn-syn
stmt s; call c;
Select c such that Parent*(s, c)
13, 29
5000
249 - PARENT*-boolean: generic-generic

Select BOOLEAN such that Parent*(_, _)
TRUE
5000
250 - PARENT*-assign: fixed-syn (while stmt)
assign a;
Select a such that Parent*(14, a)
15, 16, 17, 18, 20, 22, 23
5000
251 - PARENT*-stmt: fixed-syn (if stmt)
stmt s;
Select s such that Parent*(35, s)
36, 37, 38
5000
252 - PARENT*-stmt: syn-fixed
stmt s;
Select s such that Parent*(s, 19)
4, 14
5000
253 - PARENT*-while: syn-fixed
while w;
Select w such that Parent*(w, 37)
36
5000
254 - PARENT*-if: syn-fixed
if i;
Select i such that Parent*(i, 35)
33, 34
5000
255 - PARENT*-boolean: fixed-generic

Select BOOLEAN such that Parent*(28, _)
TRUE
5000
256 - PARENT*-boolean: generic-fixed

Select BOOLEAN such that Parent*(_, 28)
TRUE
5000
257 - PARENT*-assign: syn-generic
assign a;
Select a such that Parent*(a, _)
none
5000
258 - PARENT*-while: syn-generic
while w;
Select w such that Parent*(w, _)
4, 8, 11, 14, 21, 27, 36
5000
259 - PARENT*-if: syn-generic
if i;
Select i such that Parent*(i, _)
6, 19, 28, 33, 34, 35
5000
260 - PARENT*-stmt: generic-syn
stmt s;
Select s such that Parent*(_, s)
5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 30, 34, 35, 36, 37, 38, 39, 40
5000
261 - PARENT*-assign: generic-syn
assign a;
Select a such that Parent*(_, a)
5, 7, 9, 10, 12, 15, 16, 17, 18, 20, 22, 23, 30, 37, 38, 39, 40
5000
262 - PARENT*-while: generic-syn
while w;
Select w such that Parent*(_, w)
8, 11, 14, 21, 36
5000
263 - PARENT*-if: generic-syn
if i;
Select i such that Parent*(_, i)
6, 19, 28, 34, 35
5000
264 - PARENT*-call: generic-syn
call c;
Select c such that Parent*(_, c)
13, 29
5000
265 - PARENT*-while: pattern-left defined
while w;
Select w such that Parent*(w, _) pattern w("how", _)
27
5000
266 - PARENT*-while: pattern-left defined synonym
while w; variable v;
Select w such that Parent*(35, w) pattern w(v, _)
36
5000
267 - PARENT*-if: pattern-left defined
if i;
Select i such that Parent*(i, 34) pattern i("keyboard", _, _)
none
5000
268 - PARENT*-if: pattern-left defined synonym
if i; variable v;
Select v such that Parent*(i, 21) pattern i(v, _, _)
a
5000
269 - PARENT*: 2 clauses (similar) - fixed-fixed, fixed-fixed

Select BOOLEAN such that Parent*(28, 29) and Parent*(35, 36)
TRUE
5000
270 - PARENT*: 2 clauses (similar) - syn-syn, syn-syn
stmt s1, s2;
Select <s1,s2> such that Parent*(s1, s2) and Parent*(s2, s1)
none
5000
271 - PARENT*: 2 clauses (similar) - fixed-syn, fixed-syn
stmt s;
Select s such that Parent*(33, s) and Parent*(34, s)
35, 36, 37, 38, 39
5000
272 - PARENT*: 2 clauses (similar) - syn-fixed, syn-fixed
while w;
Select w such that Parent*(14, w) and Parent*(i, 29)
none
5000
273 - PARENT*: 2 clauses (similar) - fixed-generic, fixed-generic

Select BOOLEAN such that Parent*(14, _) and Parent*(28, _)
TRUE
5000
274 - PARENT*: 2 clauses (similar) - generic-fixed, generic-fixed
stmt s;
Select s such that Parent*(_, 30) and Parent*(_, 34)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40
5000
275 - PARENT*: 2 clauses (similar) - syn-generic, syn-generic
while w; if i;
Select <i,w> such that Parent*(w, _) and Parent*(i, _)
6 4, 6 8, 6 11, 6 14, 6 21, 6 27, 6 36, 19 4, 19 8, 19 11, 19 14, 19 21, 19 27, 19 36, 28 4, 28 8, 28 11, 28 14, 28 21, 28 27, 28 36, 33 4, 33 8, 33 11, 33 14, 33 21, 33 27, 33 36, 34 4, 34 8, 34 11, 34 14, 34 21, 34 27, 34 36, 35 4, 35 8, 35 11, 35 14, 35 21, 35 27, 35 36
5000
276 - PARENT*: 2 clauses (similar) - generic-syn, generic-syn
stmt s; if i;
Select i such that Parent*(_, s) and Parent*(_, i)
6, 19, 28, 34, 35
5000
277 - PARENT*: 2 clauses (mixed) - fixed-fixed, fixed-syn
stmt s;
Select s such that Parent*(34, 35) and Parent*(28, s)
29, 30
5000
278 - PARENT*: 2 clauses (mixed) - syn-syn, syn-fixed
stmt s1, s2;
Select <s1,s2> such that Parent*(s1, s2) and Parent*(s1, 30)
27 28, 27 29, 27 30, 28 29, 28 30
5000
279 - PARENT*: 2 clauses (mixed) - generic-generic, fixed-generic
while w;
Select w such that Parent*(_, _) and Parent*(33, _)
4, 8, 11, 14, 21, 27, 36
5000
280 - PARENT*: 2 clauses (mixed) - fixed-syn, generic-fixed
assign a;
Select a such that Parent*(19, a) and Parent*(_, 28)
20, 22, 23
5000
281 - PARENT*: 2 clauses (mixed) - syn-fixed, syn-generic
if i; assign a;
Select i such that Parent*(i, 22) and Parent*(a, _)
none
5000
282 - PARENT*: 2 clauses (mixed) - fixed-generic, generic-syn

Select BOOLEAN such that Parent*(28, _) and Parent*(_, 28)
TRUE
5000
283 - PARENT*: 2 clauses (mixed) - generic-fixed, syn-generic
stmt s;
Select s such that Parent*(_, 38) and Parent*(s, _)
4, 6, 8, 11, 14, 19, 21, 27, 28, 33, 34, 35, 36
5000
284 - PARENT*: 2 clauses (mixed) - syn-generic, generic-syn
if i;
Select i such that Parent*(i, _) and Parent*(_, i)
6, 19, 28, 34, 35
5000
285 - PARENT*: 2 clauses (mixed) - generic-fixed, generic-syn
assign a;
Select a such that Parent*(_, 23) and Parent*(_, a)
5, 7, 9, 10, 12, 15, 16, 17, 18, 20, 22, 23, 30, 37, 38, 39, 40
5000
286 - PARENT*: stmt# - select clause (has results)
assign a;
Select a.stmt# such that Parent*(28, a)
30
5000
287 - PARENT*: stmt# - select clause (no results)
assign a;
Select a.stmt# such that Parent*(27, a)
30
5000
288 - PARENT*: stmt# - with clause (has results)
while w;
Select w such that Parent*(w, _) with w.stmt# = 27
27
5000
289 - PARENT*: stmt# - with clause (no results)
while w;
Select w such that Parent*(w, _) with w.stmt# = 4 and w.stmt# = 8
none
5000
290 - PARENT*: prog_line
prog_line n;
Select n such that Parent*(n, _)
4, 6, 8, 11, 14, 19, 21, 27, 28, 33, 34, 35, 36
5000
291 - PARENT*: stmt overflow
stmt s;
Select s such that Parent*(45, s)
none
5000
292 - PARENT*: stmt underflow
stmt s;
Select s such that Parent*(-1, s)
none
5000
293 - PARENT*: stmt underflow
variable s;
Select s such that Parent*(0, s)
none
5000
294 - PARENT*: invalid argument
assign a;
Select a such that Parent*(a, "helloworld")
none
5000
295 - FOLLOWS-boolean: fixed-fixed (regular stmt)

Select BOOLEAN such that Follows(1, 2)
TRUE
5000
296 - FOLLOWS-stmt: fixed-fixed (while stmt)
stmt s;
Select s such that Follows(11, 13)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40
5000
297 - FOLLOWS-boolean: fixed-fixed (if stmt)

Select BOOLEAN such that Follows(6, 14)
TRUE
5000
298 - FOLLOWS-stmt: syn-syn (tuple)
stmt s1, s2;
Select <s1,s2> such that Follows(s1, s2)
1 2, 2 3, 3 4, 5 6, 6 14, 7 8, 10 11, 11 13, 15 16, 16 17, 17 18, 18 19, 20 21, 24 25, 25 26, 26 27, 31 32, 32 33
5000
299 - FOLLOWS-assign: syn-syn
assign a1, a2;
Select a2 such that Follows(a1, a2)
2, 16, 17, 18, 25, 26, 32
5000
300 - FOLLOWS-while: syn-syn
while w; stmt s;
Select w such that Follows(w, s)
11
5000
301 - FOLLOWS-if: syn-syn
if i; stmt s;
Select i such that Follows(i, s)
6
5000
302 - FOLLOWS-boolean: generic-generic

Select BOOLEAN such that Follows(_, _)
TRUE
5000
303 - FOLLOWS-stmt: fixed-syn
stmt s;
Select s such that Follows(26, s)
27
5000
304 - FOLLOWS-while: fixed-syn
while w;
Select w such that Follows(20, w)
21
5000
305 - FOLLOWS-if: fixed-syn
if i;
Select i such that Follows(32, i)
33
5000
306 - FOLLOWS-stmt: syn-fixed
stmt s;
Select s such that Follows(s, 14)
6
5000
307 - FOLLOWS-assign: syn-fixed
assign a;
Select a such that Follows(a, 23)
none
5000
308 - FOLLOWS-while: syn-fixed
while w;
Select w such that Follows(w, 28)
none
5000
309 - FOLLOWS-if: syn-fixed
if i;
Select i such that Follows(i, 14)
6
5000
310 - FOLLOWS-boolean: fixed-generic

Select BOOLEAN such that Follows(25, _)
TRUE
5000
311 - FOLLOWS-boolean: generic-fixed

Select BOOLEAN such that Follows(_, 32)
TRUE
5000
312 - FOLLOWS-assign: syn-generic
assign a;
Select a such that Follows(a, _)
1, 2, 5, 7, 10, 15, 16, 17, 18, 20, 24, 25, 26, 31, 32
5000
313 - FOLLOWS-while: syn-generic
while w;
Select w such that Follows(w, _)
11
5000
314 - FOLLOWS-if: syn-generic
if i;
Select i such that Follows(i, _)
6
5000;
315 - FOLLOWS-boolean : generic-syn
stmt s;
Select BOOLEAN such that Follows(_, s)
TRUE
5000
316 - FOLLOWS-assign: pattern-right defined (match select)
assign a;
Select a such that Follows(a, _) pattern a(_, _"a"_)
2, 18, 20
5000
317 - FOLLOWS-assign: pattern-right defined (does not match select)
assign a1, a2;
Select a1 such that Follows(a1, 32) pattern a2(_, _"69"_)
31
5000
318 - FOLLOWS-assign: pattern-left defined (match select)
assign a;
Select a such that Follows(a, _) pattern a("what", _)
24
5000
319 - FOLLOWS-assign: pattern-left defined (does not match select)
assign a1, a2;
Select a1 such that Follows(a1, 27) pattern a2("ram", _)
26
5000
320 - FOLLOWS-assign: pattern-left defined synonym
assign a; variable v;
Select a such that Follows(a, _) pattern a(v, _)
1, 2, 5, 7, 10, 15, 16, 17, 18, 20, 24, 25, 26, 31, 32
5000
321 - FOLLOWS-assign: pattern-both defined (match select)
assign a;
Select a such that Follows(a, _) pattern a("mouse", _"speakers"_)
31
5000
322 - FOLLOWS-assign: pattern-both defined (does not match select)
assign a1, a2;
Select a1 such that Follows(a1, 1) pattern a2("mouse", _"gpu"_)
none
5000
323 - FOLLOWS-assign: pattern-both defined, left synonym
assign a; variable v;
Select a such that Follows(a, _) pattern a(v, _"69"_)
16, 25
5000
324 - FOLLOWS-while: pattern (match select)
while w;
Select w such that Follows(w, _) pattern w("f", _)
11
5000
325 - FOLLOWS-while: pattern (does not match select)
stmt s; while w;
Select s such that Follows(s, w) pattern w("how", _)
26
5000
326 - FOLLOWS-while: pattern, left synonym
while w; variable v;
Select w such that Follows(_, w) pattern w(v, _)
4, 8, 11, 14, 21, 27
5000
327 - FOLLOWS-if: pattern (match select)
if i;
Select i such that Follows(i, _) pattern i("b", _, _)
6
5000
328 - FOLLOWS-if: pattern (does not match select)
assign a; if i;
Select a such that Follows(a, _) pattern i("why", _, _)
1, 2, 5, 7, 10, 15, 16, 17, 18, 20, 24, 25, 26, 31, 32
5000
329 - FOLLOWS-if: pattern, left synonym
if i; variable v;
Select i such that Follows(_, i) pattern i(v, _, _)
6, 19, 33
5000
330 - FOLLOWS: 2 clauses (similar) - fixed-fixed, fixed-fixed

Select BOOLEAN such that Follows(24, 25) and Follows(32, 33)
TRUE
5000
331 - FOLLOWS: 2 clauses (similar) - syn-syn, syn-syn
stmt s1, s2, s3;
Select s1 such that Follows(s1, s2) and Follows(s3, s1)
2, 3, 6, 11, 16, 17, 18, 25, 26, 32
5000